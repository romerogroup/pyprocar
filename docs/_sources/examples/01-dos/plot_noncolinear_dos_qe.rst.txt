
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\01-dos\plot_noncolinear_dos_qe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_01-dos_plot_noncolinear_dos_qe.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-dos_plot_noncolinear_dos_qe.py:


.. _ref_plotting_noncolinear_dos_qe:

Plotting non colinear dos in Quantum Espresso
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Plotting non colinear dos in Quantum Espresso.

First download the example files with the code below. Then replace data_dir below.

.. code-block::
   :caption: Downloading example

    data_dir = pyprocar.download_example(save_dir='', 
                                material='Fe',
                                code='qe', 
                                spin_calc_type='non-colinear',
                                calc_type='dos')

.. GENERATED FROM PYTHON SOURCE LINES 23-24

importing pyprocar and specifying local data_dir

.. GENERATED FROM PYTHON SOURCE LINES 24-32

.. code-block:: Python

    import os

    import pyprocar

    data_dir = os.path.join(
        pyprocar.utils.DATA_DIR, "examples", "Fe", "qe", "non-colinear", "dos"
    )








.. GENERATED FROM PYTHON SOURCE LINES 33-41

Parametric mode
+++++++++++++++++++++++++++++++++++++++
Quantum Espresso expresses the projections in the coupled basis,
therefore orbitals takes different meanings.
For details on the meaning of the indices of the atomic projection please refer to the user guide :ref:'atomic_projections'




.. GENERATED FROM PYTHON SOURCE LINES 41-55

.. code-block:: Python

    atoms = [0]
    spins = [0]
    orbitals = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]

    pyprocar.dosplot(
        code="qe",
        mode="parametric",
        fermi=18.0536,
        atoms=atoms,
        orbitals=orbitals,
        clim=[0, 1],
        spins=spins,
        dirname=data_dir,
    )



.. image-sg:: /examples/01-dos/images/sphx_glr_plot_noncolinear_dos_qe_001.png
   :alt: plot noncolinear dos qe
   :srcset: /examples/01-dos/images/sphx_glr_plot_noncolinear_dos_qe_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


                --------------------------------------------------------
                There are additional plot options that are defined in a configuration file. 
                You can change these configurations by passing the keyword argument to the function
                To print a list of plot options set print_plot_opts=True

                Here is a list modes : plain , parametric , parameteric_line , stack , stack_orbitals , stack_species , overlay , overlay_orbitals , overlay_species
                --------------------------------------------------------

    (<Figure size 900x600 with 2 Axes>, <Axes: xlabel='Energy - E$_F$ (eV)', ylabel='DOS'>)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 17.196 seconds)


.. _sphx_glr_download_examples_01-dos_plot_noncolinear_dos_qe.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_noncolinear_dos_qe.ipynb <plot_noncolinear_dos_qe.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_noncolinear_dos_qe.py <plot_noncolinear_dos_qe.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_noncolinear_dos_qe.zip <plot_noncolinear_dos_qe.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
