Search.setIndex({"docnames": ["api/cfg/band_structure", "api/cfg/band_structure_2d", "api/cfg/dos", "api/cfg/fermi_surface_2d", "api/cfg/fermi_surface_3d", "api/cfg/index", "api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.mesh_to_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ravel_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.savefig", "api/core/_autosummary/pyprocar.core.FermiSurface.show", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_harmonic_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.get_symmetry_operations", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_atomic_levels", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.parse", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.sort", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.xyz", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscarDiff", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.change_elements", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_multiply", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_sum", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.scale_lattice", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.shift", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.write", "api/pyposcar/index", "api/pyposcar/poscar", "api/pyposcar/poscarutils", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.print_default_settings", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plot_atomic_levels", "examples/00-band_structure/plot_bandsplot_configurations", "examples/00-band_structure/plot_colinear", "examples/00-band_structure/plot_compare_bands", "examples/00-band_structure/plot_noncolinear_qe", "examples/00-band_structure/plot_noncolinear_vasp", "examples/00-band_structure/plot_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plot_colinear_dos", "examples/01-dos/plot_dosplot_configurations", "examples/01-dos/plot_noncolinear_dos_qe", "examples/01-dos/plot_noncolinear_dos_vasp", "examples/01-dos/plot_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plot_bandsdosplot", "examples/02-bands_dos/plot_bandsdosplot_configurations", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plot_fermi2d", "examples/03-fermi2d/plot_fermi2d_configurations", "examples/03-fermi2d/plot_fermi2d_spin_texture", "examples/03-fermi2d/plot_rashba_spin_spliting", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plot_de_hass_van_alphen", "examples/04-fermi3d/plot_fermi3d_configurations", "examples/04-fermi3d/plot_fermi3d_cross_section", "examples/04-fermi3d/plot_fermi3d_isoslider", "examples/04-fermi3d/plot_fermi3d_isovalue_gif", "examples/04-fermi3d/plot_fermi3d_plain", "examples/04-fermi3d/plot_fermi3d_spin-polarized", "examples/04-fermi3d/plot_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plot_2dkmesh_generation", "examples/05-other/plot_bandgap", "examples/05-other/plot_ebs", "examples/05-other/plot_kpath_generation", "examples/05-other/sg_execution_times", "examples/06-PyPoscar/index", "examples/06-PyPoscar/plot_clusters_pyposcar", "examples/06-PyPoscar/plot_finding_defects_pyposcar", "examples/06-PyPoscar/plot_rdf_cutoff_pyposcar", "examples/06-PyPoscar/plot_subsitution_pyposcar", "examples/06-PyPoscar/plot_utils_pyposcar", "examples/06-PyPoscar/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\cfg\\band_structure.rst", "api\\cfg\\band_structure_2d.rst", "api\\cfg\\dos.rst", "api\\cfg\\fermi_surface_2d.rst", "api\\cfg\\fermi_surface_3d.rst", "api\\cfg\\index.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.mesh_to_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ravel_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.savefig.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.show.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_harmonic_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.get_symmetry_operations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_atomic_levels.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.parse.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.sort.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.xyz.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscarDiff.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.change_elements.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_multiply.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_sum.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.scale_lattice.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.shift.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.write.rst", "api\\pyposcar\\index.rst", "api\\pyposcar\\poscar.rst", "api\\pyposcar\\poscarutils.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.print_default_settings.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plot_atomic_levels.rst", "examples\\00-band_structure\\plot_bandsplot_configurations.rst", "examples\\00-band_structure\\plot_colinear.rst", "examples\\00-band_structure\\plot_compare_bands.rst", "examples\\00-band_structure\\plot_noncolinear_qe.rst", "examples\\00-band_structure\\plot_noncolinear_vasp.rst", "examples\\00-band_structure\\plot_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plot_colinear_dos.rst", "examples\\01-dos\\plot_dosplot_configurations.rst", "examples\\01-dos\\plot_noncolinear_dos_qe.rst", "examples\\01-dos\\plot_noncolinear_dos_vasp.rst", "examples\\01-dos\\plot_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plot_bandsdosplot.rst", "examples\\02-bands_dos\\plot_bandsdosplot_configurations.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plot_fermi2d.rst", "examples\\03-fermi2d\\plot_fermi2d_configurations.rst", "examples\\03-fermi2d\\plot_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\plot_rashba_spin_spliting.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plot_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plot_fermi3d_configurations.rst", "examples\\04-fermi3d\\plot_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plot_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plot_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plot_fermi3d_plain.rst", "examples\\04-fermi3d\\plot_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plot_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plot_2dkmesh_generation.rst", "examples\\05-other\\plot_bandgap.rst", "examples\\05-other\\plot_ebs.rst", "examples\\05-other\\plot_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\06-PyPoscar\\index.rst", "examples\\06-PyPoscar\\plot_clusters_pyposcar.rst", "examples\\06-PyPoscar\\plot_finding_defects_pyposcar.rst", "examples\\06-PyPoscar\\plot_rdf_cutoff_pyposcar.rst", "examples\\06-PyPoscar\\plot_subsitution_pyposcar.rst", "examples\\06-PyPoscar\\plot_utils_pyposcar.rst", "examples\\06-PyPoscar\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["band structure plotting Options", "band structure 2d plotting Options", "dos plotting Options", "fermi surface 2d plotting Options", "fermi surface 3d plotting Options", "Configuration Files", "pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient", "bands_gradient_mesh", "bands_hessian", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_sum", "fermi_speed", "fermi_speed_mesh", "fermi_velocity", "fermi_velocity_mesh", "harmonic_average_effective_mass", "harmonic_average_effective_mass_mesh", "ibz2fbz", "index_mesh", "interpolate_mesh_grid", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "mesh_to_array", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "ravel_array", "unfold", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "savefig", "show", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "extend_surface", "project_atomic_projections", "project_fermi_speed", "project_fermi_velocity", "project_harmonic_effective_mass", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "get_symmetry_operations", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_atomic_levels", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.pyposcar.Poscar", "__init__", "add", "parse", "remove", "sort", "write", "xyz", "poscarDiff", "pyprocar.pyposcar.poscar_modify", "__init__", "add", "change_elements", "pos_multiply", "pos_sum", "remove", "scale_lattice", "shift", "write", "pyprocar.pyposcar.poscar_supercell", "__init__", "supercell", "write", "PyPoscar API", "Poscar", "poscarUtils", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "print_default_settings", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting Atomic Levels", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi2d noncolinear", "Plotting rashba spin splitting", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "PyPoscar", "Visualizing Clusters in Bi2Se3 Slab", "Finding defects in a POSCAR file", "Analyzing Radial Distribution Functions (RDF)", "Substituting Atoms in a POSCAR File", "Modifying a POSCAR File: Scaling, Supercells, and Defects", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"descript": [0, 1, 2, 3, 4, 5, 78, 84, 211, 350, 359, 370, 376, 407], "The": [0, 2, 3, 4, 5, 9, 12, 15, 16, 17, 18, 25, 30, 37, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 61, 65, 66, 69, 70, 78, 81, 82, 83, 86, 87, 88, 90, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 108, 109, 115, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 145, 148, 154, 157, 161, 171, 172, 174, 175, 179, 180, 182, 184, 185, 187, 188, 190, 191, 196, 198, 226, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 244, 245, 246, 248, 249, 253, 255, 258, 260, 261, 262, 270, 279, 280, 283, 284, 290, 291, 298, 300, 301, 304, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 344, 345, 347, 349, 350, 355, 358, 359, 362, 365, 366, 370, 375, 376, 386, 387, 388, 391, 392, 393, 395, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "line": [0, 2, 3, 4, 6, 235, 240, 255, 290, 350, 355, 359, 362, 366, 370, 376, 377, 388, 393, 398, 400, 410, 412, 416], "valu": [0, 1, 2, 3, 4, 15, 16, 70, 78, 125, 127, 130, 132, 133, 134, 174, 187, 241, 291, 319, 320, 322, 323, 324, 325, 350, 359, 370, 371, 376, 379, 393, 404, 405, 407, 409, 410], "blue": [0, 2, 3, 235, 238, 277, 324, 350, 359, 369, 370, 371, 381, 385, 387, 388, 404, 410, 416], "red": [0, 2, 3, 324, 350, 359, 366, 370, 371, 381, 388, 404, 410], "black": [0, 1, 2, 4, 267, 350, 359, 376, 391, 392, 393, 394, 395, 406], "colormap": [0, 1, 2, 3, 4, 125, 324, 350, 359, 366, 370, 376, 406, 410], "us": [0, 1, 2, 3, 4, 5, 6, 59, 61, 70, 78, 84, 120, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 145, 152, 161, 171, 174, 187, 197, 211, 215, 216, 219, 225, 226, 227, 228, 229, 230, 231, 232, 275, 279, 280, 281, 283, 286, 288, 307, 308, 310, 318, 319, 322, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 347, 349, 350, 355, 359, 362, 366, 369, 370, 371, 372, 375, 376, 377, 385, 387, 388, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "jet": [0, 1, 2, 3, 4, 61, 276, 324, 350, 359, 370, 376, 381, 404, 406, 410], "scale": [0, 1, 2, 3, 4, 283, 292, 296, 299, 350, 359, 370, 376, 387, 390, 396, 397], "bar": [0, 1, 2, 3, 4, 318, 324, 350, 359, 370, 376, 410], "none": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 18, 19, 30, 55, 59, 61, 62, 65, 69, 72, 78, 79, 85, 86, 94, 95, 109, 120, 121, 123, 125, 141, 142, 143, 144, 148, 149, 151, 157, 180, 181, 182, 183, 187, 188, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 258, 259, 260, 261, 262, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 284, 285, 286, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 350, 359, 369, 370, 371, 372, 375, 376, 387, 398, 404, 405, 409, 410, 411, 416], "fermi": [0, 1, 2, 5, 18, 31, 32, 34, 61, 66, 69, 70, 71, 74, 130, 131, 132, 133, 138, 143, 157, 176, 182, 235, 255, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 334, 338, 344, 350, 359, 366, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 385, 398, 401, 402, 403, 404, 408, 409, 411, 412, 416], "dot": [0, 2, 235, 350, 359, 366, 370, 391, 392, 393, 394, 395], "1": [0, 1, 2, 3, 4, 9, 10, 11, 12, 18, 30, 60, 70, 71, 78, 79, 84, 118, 120, 151, 157, 182, 183, 188, 189, 235, 239, 240, 242, 243, 276, 283, 298, 300, 312, 313, 318, 319, 320, 321, 322, 323, 324, 326, 344, 345, 349, 350, 353, 355, 359, 362, 365, 366, 369, 370, 371, 372, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 405, 409, 410, 411, 412, 416], "If": [0, 2, 65, 174, 175, 233, 253, 283, 286, 291, 300, 321, 322, 324, 347, 350, 359, 377, 398, 399, 404, 405, 407, 410, 411], "true": [0, 1, 2, 3, 4, 12, 30, 55, 85, 86, 139, 140, 172, 173, 187, 213, 241, 276, 285, 289, 294, 295, 296, 297, 298, 300, 301, 305, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 322, 324, 326, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 393, 394, 395, 404, 405, 407, 409, 410, 414, 416], "shown": [0, 2, 322, 350, 359], "fals": [0, 1, 2, 3, 4, 18, 55, 88, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 345, 350, 352, 359, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 387, 391, 392, 394, 395, 404, 405, 406, 409, 410, 411, 416], "which": [0, 2, 65, 78, 124, 151, 322, 323, 324, 338, 345, 347, 349, 350, 355, 359, 362, 381, 398, 403, 404, 408, 409, 410, 413, 416], "axi": [0, 1, 2, 4, 66, 300, 322, 350, 359, 376, 409], "both": [0, 2, 291, 322, 350, 359, 366, 398, 401, 402, 404, 407, 416], "should": [0, 1, 2, 4, 9, 30, 88, 126, 186, 206, 296, 297, 299, 301, 321, 322, 350, 359, 376, 386, 398, 403, 404, 405, 409, 411, 416], "drawn": [0, 2, 350, 359], "grei": [0, 2, 350, 359, 393], "solid": [0, 2, 3, 78, 350, 359, 370], "draw": [0, 2, 235, 255, 350, 359], "major": [0, 2, 270, 350, 359, 398], "minor": [0, 2, 270, 350, 359], "uparrow": [0, 2, 350, 359, 407, 412], "downarrow": [0, 2, 350, 359, 407, 412], "dash": [0, 2, 3, 350, 359, 370], "0": [0, 1, 2, 3, 4, 9, 11, 12, 55, 70, 71, 78, 84, 118, 120, 151, 186, 188, 189, 255, 277, 283, 287, 291, 295, 298, 300, 312, 313, 322, 323, 324, 326, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 403, 404, 407, 409, 410, 411, 412, 413, 414, 416], "style": [0, 1, 2, 4, 235, 350, 355, 359, 362, 376], "point": [0, 1, 2, 4, 9, 37, 38, 51, 53, 55, 78, 80, 81, 82, 83, 86, 109, 131, 133, 134, 139, 179, 186, 258, 260, 261, 262, 275, 318, 322, 324, 325, 349, 350, 359, 366, 370, 376, 385, 388, 391, 392, 393, 394, 395, 401, 402, 406, 408, 409, 410, 412, 416], "o": [0, 2, 277, 278, 322, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 403, 404, 407, 410], "v": [0, 2, 78, 79, 322, 324, 350, 359, 366, 403, 404, 407, 410], "d": [0, 2, 9, 11, 20, 21, 22, 23, 33, 34, 322, 324, 350, 351, 359, 398, 403, 404, 406, 407, 410], "size": [0, 1, 2, 3, 4, 55, 59, 61, 69, 88, 126, 277, 278, 295, 304, 318, 324, 350, 359, 366, 370, 376, 377, 388, 395, 410, 411, 416], "2": [0, 2, 3, 9, 11, 12, 39, 70, 78, 84, 151, 322, 324, 344, 345, 347, 349, 350, 353, 354, 355, 359, 366, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 391, 392, 393, 394, 395, 398, 409, 410, 411, 412, 416], "file": [0, 2, 93, 141, 143, 145, 147, 148, 157, 161, 164, 171, 172, 174, 175, 176, 179, 180, 182, 188, 226, 227, 229, 230, 231, 232, 263, 283, 284, 286, 289, 290, 291, 301, 305, 307, 308, 310, 317, 318, 321, 322, 324, 326, 327, 332, 338, 340, 341, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 396, 397, 398, 401, 402, 403, 404, 405, 407, 410, 411, 412, 414, 416], "name": [0, 2, 18, 91, 126, 127, 148, 157, 161, 245, 247, 248, 250, 263, 265, 267, 268, 285, 289, 290, 301, 305, 310, 317, 318, 319, 320, 324, 350, 359, 398, 403, 404, 410, 411, 416], "save": [0, 2, 3, 67, 161, 283, 305, 318, 319, 320, 322, 323, 324, 345, 350, 359, 369, 370, 371, 372, 392, 395, 404, 406, 409, 410, 416], "figur": [0, 2, 3, 322, 338, 350, 359, 366, 369, 370, 371, 372, 375, 404, 406, 416], "null": [0, 2, 350, 359], "displai": [0, 2, 349, 350, 359, 394, 398, 406], "weight": [0, 2, 18, 19, 59, 60, 130, 133, 216, 258, 260, 261, 262, 344, 350, 359, 408, 411, 412, 416], "width": [0, 2, 258, 260, 262, 350, 359, 388, 410, 416], "height": [0, 2, 350, 359], "inch": [0, 2, 350, 359, 366, 370], "9": [0, 2, 276, 277, 341, 349, 350, 353, 359, 360, 370, 371, 372, 387, 391, 403, 412], "6": [0, 1, 2, 4, 9, 12, 151, 322, 324, 342, 349, 350, 351, 352, 354, 355, 358, 359, 361, 362, 365, 366, 369, 370, 371, 372, 376, 380, 381, 385, 388, 391, 394, 398, 403, 404, 406, 410, 412, 413], "resolut": [0, 2, 350, 359], "per": [0, 1, 2, 4, 152, 284, 288, 350, 359, 366, 370, 376], "": [0, 2, 9, 11, 12, 138, 151, 287, 295, 322, 324, 341, 349, 350, 359, 375, 387, 388, 391, 392, 393, 395, 398, 403, 407, 409, 410, 411, 412], "control": [1, 3, 4, 5, 70, 324, 344, 370, 376, 398, 410], "surfac": [1, 5, 6, 61, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 84, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 235, 310, 311, 312, 313, 314, 315, 323, 324, 334, 338, 370, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 397, 398, 401, 402, 403, 404, 409, 412], "color": [1, 4, 55, 61, 69, 120, 125, 126, 235, 238, 258, 260, 262, 267, 277, 318, 323, 324, 349, 350, 352, 355, 359, 362, 366, 369, 370, 376, 385, 387, 388, 391, 392, 393, 394, 395, 403, 404, 406, 407, 409, 410, 416], "spin": [1, 2, 3, 4, 9, 12, 17, 30, 54, 61, 69, 75, 77, 131, 145, 151, 154, 238, 239, 240, 241, 242, 243, 253, 254, 258, 260, 261, 262, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 338, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 365, 366, 368, 369, 370, 373, 374, 375, 376, 378, 379, 380, 383, 385, 386, 387, 388, 397, 398, 401, 402, 405, 407, 408, 410, 412, 416], "polar": [1, 348, 349, 350, 351, 352, 356, 357, 358, 359, 363, 365, 366, 369, 374, 375, 376, 378, 379, 380, 383, 386, 387, 388, 397, 403, 404, 405, 412, 416], "opac": [1, 4, 350, 359, 376], "how": [1, 4, 55, 86, 138, 324, 345, 349, 350, 359, 366, 370, 374, 376, 383, 392, 394, 397, 398, 410], "mani": [1, 4, 86, 324, 376, 398, 403, 404, 410, 411], "zone": [1, 4, 6, 55, 78, 128, 133, 324, 376, 405, 408, 409, 410, 416], "gener": [1, 4, 6, 78, 128, 132, 133, 134, 137, 141, 302, 306, 308, 321, 322, 323, 324, 325, 337, 338, 339, 341, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 401, 402, 405, 407, 409, 410, 411, 412], "thi": [1, 4, 5, 6, 9, 11, 14, 18, 39, 40, 55, 59, 61, 66, 69, 70, 78, 84, 120, 123, 132, 133, 134, 137, 138, 139, 141, 143, 145, 147, 151, 161, 164, 192, 205, 206, 207, 208, 213, 219, 224, 225, 228, 281, 286, 288, 295, 301, 303, 304, 306, 310, 318, 320, 321, 322, 323, 324, 326, 327, 338, 341, 343, 345, 347, 349, 350, 352, 359, 366, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 393, 394, 395, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "i": [1, 4, 5, 12, 14, 18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 40, 56, 57, 59, 60, 61, 69, 70, 78, 109, 118, 120, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 145, 147, 161, 171, 186, 206, 213, 226, 227, 228, 229, 230, 231, 232, 233, 238, 253, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 318, 320, 321, 322, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416], "list": [1, 2, 4, 6, 7, 12, 18, 19, 20, 22, 30, 31, 33, 35, 38, 45, 61, 62, 66, 69, 70, 71, 72, 78, 79, 80, 84, 86, 91, 92, 94, 98, 111, 116, 120, 122, 124, 126, 133, 136, 145, 147, 151, 152, 155, 156, 158, 159, 160, 163, 165, 167, 168, 169, 200, 214, 223, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 253, 254, 257, 258, 260, 261, 262, 266, 267, 269, 270, 284, 287, 292, 294, 295, 296, 297, 298, 300, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 344, 345, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 394, 395, 398, 404, 405, 407, 408, 409, 410, 411], "direct": [1, 4, 46, 47, 48, 70, 72, 78, 80, 81, 82, 83, 283, 284, 285, 289, 294, 296, 297, 299, 300, 301, 322, 324, 325, 376, 385, 394, 398, 403, 404, 405, 408, 409, 410, 411], "ex": [1, 4, 376], "high": [1, 4, 70, 292, 293, 324, 349, 376, 404, 405, 410], "project": [1, 3, 4, 9, 10, 11, 18, 19, 30, 37, 56, 57, 61, 69, 70, 73, 75, 76, 77, 129, 130, 131, 133, 151, 152, 153, 161, 187, 191, 197, 198, 319, 320, 322, 324, 345, 347, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 369, 370, 376, 381, 398, 401, 402, 405, 406, 407, 408, 410, 411, 412], "algorithmus": [1, 4, 376], "either": [1, 4, 376, 398], "normal": [1, 4, 70, 71, 120, 125, 320, 324, 376, 398, 409, 410], "interpol": [1, 4, 9, 39, 66, 69, 78, 84, 132, 133, 148, 157, 182, 188, 319, 320, 322, 324, 376, 404, 410], "factor": [1, 4, 9, 70, 78, 148, 157, 182, 188, 283, 292, 296, 297, 299, 320, 322, 324, 376, 387, 395, 410, 416], "wirefram": [1, 4, 376, 410], "brillouin": [1, 4, 6, 55, 78, 128, 133, 324, 376, 405, 409, 410, 416], "3": [1, 3, 4, 6, 9, 11, 12, 18, 20, 21, 22, 23, 25, 33, 34, 42, 43, 59, 78, 94, 120, 122, 151, 285, 296, 297, 322, 324, 344, 349, 350, 351, 362, 365, 366, 369, 370, 371, 372, 375, 376, 385, 387, 388, 391, 392, 394, 395, 398, 400, 409, 410, 411, 412, 416], "5": [1, 4, 9, 11, 12, 78, 105, 106, 107, 108, 120, 151, 187, 322, 324, 342, 345, 347, 350, 351, 352, 354, 355, 358, 359, 361, 362, 366, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 385, 391, 392, 393, 394, 395, 398, 403, 404, 406, 410, 412, 413, 416], "linewidth": [1, 4, 235, 276, 350, 359, 370, 376], "textur": [1, 3, 4, 69, 75, 77, 131, 311, 312, 313, 314, 315, 324, 370, 372, 376, 385, 398, 403, 404, 410, 412], "ax": [1, 3, 4, 233, 234, 253, 254, 275, 276, 277, 278, 318, 319, 320, 322, 349, 352, 370, 376, 393, 404, 406, 416], "kx": [1, 4, 46, 47, 376], "label": [1, 2, 3, 4, 18, 19, 63, 64, 86, 237, 245, 248, 257, 265, 268, 344, 345, 347, 350, 359, 370, 376, 388, 391, 392, 393, 394, 395, 404, 407, 408, 412, 416], "ky": [1, 4, 48, 376], "kz": [1, 4, 376], "linewdith": [1, 4, 376], "th": [1, 4, 68, 376, 398], "colorbar": [1, 2, 4, 359, 376], "scalar": [1, 4, 25, 26, 120, 121, 126, 132, 133, 134, 376, 387, 391, 392, 394, 395], "ital": [1, 4, 376], "bold": [1, 4, 376], "titl": [1, 4, 151, 264, 318, 320, 350, 359, 376, 387, 391, 392, 393, 394, 395, 398, 407, 409, 410, 416], "font": [1, 4, 359, 376], "4": [1, 4, 9, 11, 12, 55, 151, 322, 324, 349, 350, 351, 352, 354, 355, 358, 359, 361, 362, 366, 369, 370, 371, 375, 376, 380, 381, 387, 391, 394, 395, 398, 403, 406, 410, 412, 416], "x": [1, 2, 3, 4, 69, 78, 80, 81, 127, 245, 246, 265, 266, 267, 294, 296, 300, 322, 325, 341, 342, 344, 345, 359, 370, 371, 372, 376, 385, 393, 400, 404, 409, 410, 411, 412], "posit": [1, 4, 84, 92, 108, 247, 250, 267, 283, 285, 292, 294, 296, 297, 300, 305, 324, 376, 377, 391, 392, 393, 394, 395, 410], "01": [1, 4, 291, 323, 356, 363, 373, 376, 383, 395, 409], "y": [1, 2, 3, 4, 69, 78, 80, 82, 127, 248, 249, 268, 269, 270, 294, 296, 300, 322, 325, 359, 370, 371, 372, 376, 385, 388, 393, 394, 409, 410, 411, 412], "outlin": [1, 4, 376], "white": [1, 4, 324, 376, 410, 414], "background": [1, 4, 324, 376, 410], "36": [1, 4, 376, 383, 388, 391, 392, 394, 395, 416], "number": [1, 4, 9, 12, 15, 16, 17, 30, 46, 47, 48, 49, 50, 51, 52, 53, 54, 70, 81, 82, 83, 90, 98, 105, 106, 112, 113, 126, 158, 167, 239, 240, 242, 243, 284, 296, 297, 311, 314, 322, 324, 325, 376, 387, 398, 404, 406, 408, 410, 412, 413, 414], "orbit": [1, 4, 9, 11, 12, 13, 18, 30, 52, 69, 151, 239, 240, 241, 242, 243, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 350, 352, 353, 354, 355, 358, 359, 360, 361, 362, 366, 369, 370, 371, 372, 376, 380, 381, 387, 401, 402, 406, 407, 408, 409, 410, 412, 416], "05": [1, 4, 105, 106, 107, 108, 187, 326, 363, 376, 383, 388, 391, 392, 394, 395], "step": [1, 4, 174, 200, 204, 207, 214, 222, 223, 345, 347, 376, 391, 392, 394, 395, 398], "whether": [1, 4, 322, 376, 398, 416], "plotter": [1, 4, 138, 279, 280, 282, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 376, 385, 387, 388, 391, 392, 394, 395], "render": [1, 4, 55, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 398, 410], "offscreen": [1, 4, 376], "caemera": [1, 4, 376], "energi": [1, 2, 4, 9, 10, 16, 18, 61, 65, 66, 69, 70, 129, 130, 131, 133, 143, 154, 157, 176, 182, 202, 217, 255, 275, 311, 314, 317, 318, 319, 320, 322, 323, 324, 347, 349, 359, 369, 370, 371, 376, 378, 379, 381, 401, 402, 404, 408, 409, 410, 412, 416], "iso": [1, 4, 323, 324, 376, 409, 410], "isoslid": [1, 4, 374, 376, 383, 397], "modern": [1, 4, 376], "slice": [1, 4, 324, 376, 410], "wheather": [1, 4, 376], "show": [1, 4, 55, 312, 313, 314, 315, 318, 319, 320, 322, 324, 344, 345, 347, 350, 352, 359, 370, 374, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388, 392, 393, 394, 397, 398, 404, 406, 407, 409, 410, 416], "cross": [1, 4, 324, 376, 398, 410], "section": [1, 4, 138, 228, 324, 338, 341, 345, 350, 355, 359, 362, 366, 370, 376, 398, 407, 409, 410, 412], "area": [1, 4, 322, 324, 376, 377, 398, 407, 410], "green": [2, 324, 359, 410], "cyan": [2, 359], "magenta": [2, 359], "yellow": [2, 359], "orang": [2, 359, 407], "purpl": [2, 359], "brown": [2, 359], "navi": [2, 359, 369], "maroon": [2, 359], "oliv": [2, 359], "text": [2, 192, 224, 359], "arial": [2, 359], "16": [2, 318, 324, 353, 359, 360, 372, 375, 380, 383, 391, 392, 398, 403, 410], "total": [2, 9, 10, 129, 133, 153, 154, 198, 199, 284, 322, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 404, 405, 407, 411, 412], "up": [2, 9, 145, 154, 186, 291, 355, 359, 362, 400, 404, 407, 410, 411, 416], "down": [2, 9, 154, 355, 359, 362, 404, 407, 410, 411, 416], "program": [2, 359, 398], "print": [2, 311, 312, 313, 314, 315, 319, 322, 323, 345, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 387, 391, 392, 393, 394, 395, 404, 409, 416], "detail": [2, 129, 130, 131, 132, 135, 136, 174, 322, 351, 353, 354, 355, 358, 359, 360, 361, 362, 388, 398, 404, 410], "inform": [2, 120, 129, 130, 133, 135, 136, 139, 145, 148, 157, 164, 171, 174, 207, 214, 216, 219, 220, 289, 338, 347, 352, 359, 370, 371, 385, 387, 388, 398, 403, 404, 407, 408, 410, 411, 412], "rang": [2, 311, 314, 324, 349, 359, 378, 379, 385, 391, 410, 411, 416], "stack": [2, 241, 242, 243, 322, 358, 359, 360, 361, 365, 366, 412], "mode": [2, 66, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 338, 344, 345, 347, 350, 352, 359, 366, 370, 371, 372, 375, 376, 377, 398, 403, 404, 406, 409, 410, 412, 416], "ev": [2, 268, 349, 359, 378, 379, 386, 409], "boolean": [3, 14, 18, 40, 55, 88, 109, 172, 187, 235, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 359, 370, 404, 405, 408, 409, 410], "add": [3, 63, 64, 70, 275, 283, 288, 292, 297, 345, 370, 394, 398], "legend": [3, 350, 359, 370, 393], "arrow": [3, 4, 69, 323, 324, 370, 371, 376, 387, 409, 410], "repres": [3, 6, 20, 21, 22, 23, 33, 34, 94, 120, 126, 145, 193, 194, 195, 223, 241, 322, 324, 370, 398, 407, 410, 416], "densiti": [3, 5, 9, 12, 129, 133, 138, 148, 153, 154, 161, 198, 228, 233, 238, 239, 281, 318, 322, 329, 333, 338, 343, 344, 359, 363, 366, 370, 401, 402, 403, 404, 411, 412, 415], "10": [3, 322, 324, 350, 353, 359, 360, 366, 370, 371, 375, 387, 388, 391, 392, 398, 403, 410, 411, 412], "z": [3, 66, 69, 78, 80, 83, 127, 294, 296, 300, 323, 325, 349, 350, 359, 369, 370, 371, 372, 376, 385, 409, 410, 411, 412], "imag": [3, 78, 324, 370, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 400, 404, 410], "k_": [3, 370, 385], "aa": [3, 370], "band": [4, 5, 18, 19, 20, 21, 22, 23, 24, 37, 50, 59, 61, 62, 65, 70, 78, 86, 90, 130, 131, 133, 135, 138, 145, 161, 162, 164, 187, 191, 233, 238, 253, 259, 263, 264, 273, 274, 279, 281, 282, 311, 312, 313, 314, 315, 317, 318, 319, 323, 324, 326, 330, 331, 335, 336, 338, 342, 344, 349, 350, 356, 362, 365, 366, 370, 372, 375, 376, 381, 386, 388, 401, 402, 403, 407, 409, 410, 411, 412, 413], "pyprocar": [5, 59, 87, 88, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 150, 151, 152, 155, 156, 159, 160, 163, 165, 168, 169, 187, 196, 197, 226, 227, 228, 229, 230, 231, 232, 279, 280, 281, 282, 291, 306, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "cfg": [5, 138, 350, 359, 370, 376], "help": [5, 59, 61, 131, 133, 148, 343, 345, 347, 398, 399, 411, 416], "custom": [5, 319, 320, 366, 370, 376, 398, 404], "plot": [5, 55, 61, 63, 64, 67, 68, 69, 114, 131, 133, 135, 138, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 271, 273, 275, 279, 280, 281, 282, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 326, 329, 330, 331, 333, 334, 335, 336, 338, 342, 348, 352, 356, 357, 363, 367, 368, 373, 374, 375, 383, 387, 393, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 414], "option": [5, 9, 12, 18, 30, 55, 59, 61, 66, 69, 70, 72, 86, 93, 105, 106, 107, 108, 109, 118, 123, 125, 127, 145, 148, 151, 157, 161, 172, 174, 175, 180, 182, 187, 188, 233, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 341, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 404, 405, 409, 410, 411, 416], "our": [5, 349, 372, 398, 399, 409], "code": [5, 138, 145, 148, 149, 211, 228, 309, 310, 317, 318, 319, 320, 322, 323, 324, 341, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 415, 416], "base": [5, 287, 295, 324, 388, 398, 404, 408, 410], "each": [5, 9, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 78, 80, 111, 120, 129, 133, 200, 210, 214, 257, 258, 260, 261, 262, 283, 284, 292, 296, 297, 300, 322, 324, 391, 393, 398, 403, 404, 405, 406, 407, 408, 410, 411, 412], "yaml": 5, "contain": [5, 8, 9, 61, 78, 86, 124, 143, 266, 269, 318, 322, 323, 324, 338, 347, 349, 350, 359, 369, 371, 394, 398, 404, 409, 410, 411], "set": [5, 66, 78, 125, 126, 127, 178, 208, 245, 246, 247, 248, 249, 250, 264, 265, 266, 267, 268, 269, 270, 283, 321, 322, 323, 324, 341, 342, 344, 345, 347, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 388, 392, 393, 401, 402, 403, 404, 405, 406, 407, 409, 410, 414, 416], "relat": [5, 288, 387, 408, 413, 415], "properti": [5, 14, 15, 16, 17, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 80, 81, 82, 83, 84, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 115, 116, 119, 122, 124, 150, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 167, 168, 169, 174, 176, 178, 179, 184, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 292, 293, 324, 350, 359, 366, 375, 376, 377, 378, 379, 380, 381, 382, 398, 410], "below": [5, 351, 352, 353, 354, 355, 358, 360, 361, 362, 365, 366, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 388, 398, 403, 404, 406], "ar": [5, 11, 55, 59, 65, 69, 78, 86, 120, 133, 154, 161, 224, 241, 281, 283, 285, 291, 292, 294, 300, 319, 320, 322, 323, 324, 338, 342, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 393, 395, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "some": [5, 145, 186, 324, 338, 345, 387, 398, 403, 410], "kei": [5, 154, 174, 241, 291, 319, 320, 322, 398, 404, 410], "you": [5, 138, 284, 305, 324, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 393, 394, 395, 398, 399, 400, 407, 408, 410, 411, 413, 415, 416], "might": [5, 78, 398, 400, 407], "find": [5, 59, 65, 66, 69, 78, 84, 176, 178, 179, 317, 384, 389, 390, 393, 396, 397, 398, 404, 416], "chapter": [5, 133, 281, 306], "intend": [5, 133, 138, 281, 306, 398], "describ": [5, 133, 281, 306], "data": [5, 133, 138, 174, 281, 283, 306, 310, 338, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 391, 392, 393, 394, 395, 398, 401, 402, 408, 412, 413, 415], "type": [5, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 66, 70, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 133, 138, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 174, 176, 178, 179, 184, 185, 190, 191, 192, 196, 197, 198, 199, 211, 215, 216, 220, 233, 235, 236, 237, 238, 244, 245, 248, 251, 253, 259, 281, 291, 304, 306, 317, 319, 320, 323, 324, 325, 338, 392, 395, 398, 403, 404, 409, 410], "assist": [5, 70, 133, 281], "process": [5, 133, 141, 338, 365, 366, 369, 370, 371, 372, 385, 388, 398, 401, 402, 404, 409, 411, 412, 416], "electron": [5, 18, 130, 133, 138, 157, 174, 190, 193, 194, 200, 214, 233, 253, 279, 281, 307, 308, 365, 366, 369, 370, 371, 372, 385, 387, 388, 398, 401, 402, 403, 404, 410, 412], "structur": [5, 18, 59, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 130, 133, 135, 138, 143, 155, 156, 161, 163, 165, 174, 182, 183, 187, 203, 205, 209, 212, 233, 234, 253, 259, 264, 273, 281, 282, 283, 306, 308, 318, 326, 330, 331, 335, 336, 338, 342, 344, 350, 356, 359, 365, 366, 369, 370, 371, 372, 376, 385, 386, 387, 388, 391, 393, 398, 401, 402, 403, 406, 407, 411, 412, 413, 416], "ha": [5, 78, 133, 141, 171, 172, 225, 228, 281, 306, 322, 324, 338, 341, 344, 345, 347, 352, 375, 395, 398, 410, 416], "follow": [5, 9, 78, 133, 186, 228, 281, 306, 322, 324, 338, 342, 344, 345, 347, 349, 350, 359, 366, 370, 371, 376, 385, 388, 398, 400, 403, 404, 405, 407, 408, 410, 411, 412, 416], "band_structur": [5, 356], "yml": 5, "band_structure_2d": 5, "2d": [5, 61, 66, 69, 131, 133, 320, 323, 324, 331, 334, 336, 337, 338, 370, 371, 385, 401, 402, 410, 412], "do": [5, 15, 70, 138, 151, 152, 161, 197, 199, 233, 234, 241, 242, 243, 244, 305, 318, 322, 324, 344, 345, 347, 349, 350, 355, 357, 358, 359, 362, 363, 365, 366, 370, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 398, 403, 404, 406, 407, 410], "state": [5, 9, 12, 78, 129, 133, 138, 148, 153, 154, 198, 233, 238, 239, 281, 318, 322, 323, 329, 333, 338, 344, 359, 363, 366, 398, 401, 402, 403, 404, 409, 412], "fermi_surface_3d": 5, "3d": [5, 39, 70, 132, 133, 311, 312, 313, 314, 315, 324, 338, 376, 401, 402, 412], "fermi_surface_2d": 5, "class": [6, 9, 18, 61, 69, 70, 78, 85, 94, 120, 129, 130, 132, 133, 134, 136, 137, 139, 141, 143, 145, 148, 161, 170, 171, 172, 174, 180, 182, 188, 233, 253, 273, 282, 283, 285, 286, 289, 292, 293, 301, 302, 303, 304, 307, 308, 309, 310, 375, 376, 377, 378, 379, 380, 381, 382, 393, 398, 408, 410, 413, 415], "reciprocal_lattic": [6, 7, 18, 19, 141, 142, 157, 182, 183, 408, 415], "ndarrai": [6, 7, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 55, 56, 57, 59, 60, 61, 69, 78, 79, 87, 88, 89, 108, 109, 110, 115, 117, 118, 120, 121, 126, 127, 157, 166, 179, 182, 183, 184, 185, 190, 191, 197, 215, 258, 260, 261, 262, 284, 285, 295, 296, 297, 298, 299, 300, 304, 319, 320, 393, 404], "transformation_matrix": [6, 7, 55, 59, 87, 88, 118, 416], "int": [6, 7, 9, 10, 12, 15, 16, 17, 18, 19, 30, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 69, 70, 71, 72, 78, 79, 81, 82, 83, 90, 106, 112, 113, 151, 157, 158, 167, 182, 183, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 253, 254, 258, 260, 261, 262, 267, 284, 287, 295, 298, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 404, 405, 409, 410, 411], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 25, 26, 27, 28, 29, 30, 37, 39, 45, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 93, 94, 95, 105, 106, 107, 108, 109, 114, 117, 118, 120, 121, 123, 125, 126, 127, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 157, 161, 162, 164, 166, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 186, 187, 188, 189, 192, 205, 206, 207, 208, 209, 210, 218, 220, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 409, 410, 411, 414, 416], "A": [6, 9, 18, 61, 65, 87, 88, 94, 109, 114, 117, 122, 124, 147, 152, 157, 172, 174, 180, 182, 187, 188, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 283, 299, 304, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 342, 365, 366, 369, 370, 371, 372, 375, 385, 388, 393, 398, 403, 404, 405, 409, 410, 411, 416], "object": [6, 18, 61, 70, 86, 120, 125, 150, 151, 152, 161, 175, 182, 196, 197, 211, 215, 216, 233, 253, 291, 292, 293, 294, 295, 298, 304, 308, 322, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 375, 376, 377, 378, 379, 380, 381, 382, 387, 398, 408, 410, 412, 413, 415], "vert": [6, 8, 78, 120, 121], "face": [6, 8, 120, 121, 122, 124, 126, 133, 137, 410], "represent": [6, 42, 43, 78, 408, 410], "calcul": [6, 8, 9, 25, 26, 30, 40, 70, 73, 74, 75, 76, 77, 78, 148, 158, 161, 167, 171, 182, 187, 193, 194, 195, 196, 201, 211, 214, 215, 216, 217, 219, 220, 225, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 338, 341, 342, 343, 344, 355, 362, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 393, 397, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "correspond": [6, 20, 22, 31, 33, 35, 45, 61, 78, 115, 323, 398, 403, 404, 409, 411, 416], "reciproc": [6, 18, 55, 72, 115, 128, 130, 133, 143, 157, 178, 182, 347, 404, 416], "lattic": [6, 18, 37, 55, 72, 94, 95, 96, 97, 99, 100, 101, 104, 109, 110, 115, 118, 128, 130, 133, 136, 143, 157, 178, 182, 283, 284, 290, 291, 292, 299, 304, 342, 347, 391, 392, 394, 404, 415, 416], "paramet": [6, 9, 12, 18, 25, 30, 37, 39, 45, 55, 59, 61, 65, 66, 69, 70, 72, 78, 86, 87, 88, 93, 94, 105, 106, 107, 108, 109, 117, 118, 120, 123, 125, 126, 127, 145, 147, 148, 151, 157, 161, 171, 172, 174, 175, 180, 182, 187, 188, 211, 225, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 345, 347, 388, 398, 404, 405, 406, 407, 409, 410, 411, 414, 416], "np": [6, 9, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 55, 56, 57, 59, 60, 61, 69, 78, 87, 88, 89, 108, 109, 110, 115, 117, 118, 127, 157, 166, 178, 179, 182, 184, 185, 190, 191, 197, 215, 258, 260, 261, 262, 284, 285, 294, 295, 296, 297, 298, 299, 300, 319, 320, 322, 386, 387, 388, 391, 392, 393, 394, 395, 404, 416], "usgin": 6, "wigner": [6, 8, 412], "seitz": [6, 8, 412], "float": [6, 12, 18, 19, 30, 55, 65, 70, 71, 78, 79, 80, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 119, 120, 122, 125, 157, 182, 183, 187, 188, 189, 235, 255, 266, 269, 270, 284, 291, 294, 296, 297, 300, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 326, 404, 409, 410], "ani": [6, 9, 10, 205, 208, 324, 398, 404, 406, 409, 410, 414], "transform": [6, 59, 78, 87, 88, 117, 349, 398, 404], "appli": [6, 37, 78, 300, 310, 387, 398, 403, 404, 414], "unit": [6, 119, 283, 391, 392, 394, 395], "cell": [6, 8, 78, 102, 103, 113, 116, 119, 391, 392, 394, 395, 401, 402, 410, 416], "rotat": [6, 37, 94, 95, 180, 181, 323, 369, 370, 371, 372, 387, 408, 410, 412, 415], "supercel": [6, 70, 71, 302, 303, 308, 324, 376, 390, 396, 397, 410, 411, 416], "default": [6, 9, 12, 18, 30, 55, 59, 61, 66, 69, 70, 72, 78, 86, 93, 105, 106, 107, 108, 109, 118, 120, 123, 125, 127, 145, 148, 151, 157, 161, 172, 174, 175, 180, 182, 187, 188, 233, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 284, 285, 286, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 347, 355, 362, 366, 371, 376, 404, 405, 407, 409, 410, 411], "method": [6, 9, 18, 55, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 85, 87, 88, 94, 109, 114, 117, 120, 139, 141, 143, 145, 147, 148, 157, 161, 164, 170, 172, 174, 175, 180, 182, 187, 188, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 283, 288, 292, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 375, 376, 377, 378, 379, 380, 381, 382, 398, 404, 408, 412], "attribut": [6, 9, 18, 70, 78, 85, 94, 120, 148, 161, 174, 182, 188, 284, 352, 398, 408], "brillouinzon": [7, 8, 133], "initi": [7, 71, 79, 121, 150, 175, 212, 310, 377, 387, 394, 398], "polydata": [7, 55, 71, 79, 120, 121, 133, 137, 387, 391, 392, 394, 395], "form": [8, 179, 215, 216, 391, 398, 408], "tupl": [8, 72, 84, 120, 312, 313, 324, 410], "return": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 66, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 176, 178, 179, 184, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 225, 233, 235, 236, 237, 238, 244, 245, 248, 251, 253, 259, 291, 304, 317, 322, 323, 324, 325, 352, 398, 409, 410], "n_vert": 8, "n_face": 8, "dtype": [9, 10], "float64": [9, 10], "interpolation_factor": [9, 10, 39, 70, 71, 78, 79, 157, 182, 183, 318, 319, 320, 322, 324, 376, 404, 410, 416], "function": [9, 39, 78, 84, 123, 141, 151, 192, 205, 206, 207, 208, 224, 228, 308, 317, 318, 319, 320, 322, 323, 324, 332, 334, 338, 341, 343, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 390, 394, 396, 397, 398, 401, 402, 404, 406, 407, 409, 410, 412, 416], "theori": [9, 322, 343, 402], "spectrum": 9, "shape": [9, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 38, 42, 43, 56, 57, 60, 349, 387, 394], "n_do": 9, "element": [9, 155, 156, 159, 163, 165, 168, 205, 208, 257, 283, 284, 285, 288, 291, 292, 294, 295, 322, 392, 394, 411], "etc": [9, 299, 403, 404], "n_atom": [9, 18, 56, 57, 61], "n_princip": 9, "n_orbit": [9, 56, 57, 61], "n_spin": [9, 18, 23, 56, 57, 61, 129, 133], "i_princip": 9, "work": [9, 324, 365, 366, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 397, 398, 399, 404, 409, 410], "like": [9, 69, 283, 284, 295, 306, 307, 398, 403, 404, 408], "princip": [9, 30, 53, 239, 240, 242, 243], "quantum": [9, 12, 30, 53, 161, 227, 228, 229, 230, 231, 239, 240, 242, 243, 343, 344, 348, 356, 357, 363, 397, 402, 403, 404, 408, 412], "n": [9, 12, 78, 94, 122, 347, 392, 393, 394, 395, 412, 413], "last": [9, 155, 159, 163, 168, 176, 178, 194, 201, 217, 222, 395, 404], "index": [9, 12, 38, 61, 151, 287, 295, 298, 311, 312, 313, 314, 315, 323, 395, 402, 403, 404, 408, 409, 411, 412], "p": [9, 11, 322, 324, 347, 351, 387, 391, 392, 393, 394, 395, 403, 407, 410, 411, 413], "i_orbit": 9, "similar": [9, 322, 324, 341, 398, 407, 410], "angular": [9, 412], "l": [9, 11, 345, 403, 404, 412, 416], "same": [9, 12, 88, 94, 126, 291, 295, 304, 318, 324, 329, 338, 342, 344, 345, 347, 355, 362, 393, 398, 403, 404, 406, 407, 409, 410, 411, 412], "order": [9, 11, 12, 94, 284, 298, 304, 322, 324, 388, 398, 403, 404, 406, 410], "7": [9, 12, 151, 322, 324, 350, 351, 352, 354, 355, 358, 359, 361, 362, 366, 369, 370, 371, 375, 376, 380, 381, 385, 391, 392, 393, 398, 403, 404, 406, 407, 410, 412], "8": [9, 12, 151, 322, 324, 345, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 366, 369, 370, 371, 375, 376, 380, 381, 382, 387, 391, 403, 404, 406, 407, 410, 412], "py": [9, 12, 151, 322, 324, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 400, 410, 411, 412], "pz": [9, 12, 151, 322, 324, 410, 411, 412], "px": [9, 12, 151, 322, 324, 410, 411, 412], "dxy": [9, 12, 151, 322, 324, 410, 412], "dyz": [9, 12, 151, 322, 324, 410, 412], "dz2": [9, 12, 151, 322, 324, 410, 412], "dxz": [9, 12, 151, 322, 324, 410, 412], "dx2": [9, 412], "y2": [9, 12, 78, 151, 322, 324, 325, 385, 410], "i_spin": 9, "magnet": [9, 174, 403, 404, 412], "m": [9, 11, 119, 342, 393, 403, 404, 405, 412, 416], "increas": [9, 70, 78, 324, 410, 416], "densityofst": [10, 11, 12, 13, 14, 15, 16, 17, 133, 150, 151, 152, 196, 233, 234, 281], "convert": [11, 45, 192, 391, 392, 394, 395, 412], "coupl": [11, 353, 360, 410], "uncoupl": 11, "assum": [11, 398], "coupled_orbit": 11, "j": [11, 388, 398, 403], "uncoupled_orbit": 11, "ret": [11, 12, 30, 205, 208], "atom": [12, 30, 49, 69, 73, 75, 76, 77, 94, 95, 98, 111, 112, 133, 136, 151, 152, 158, 161, 167, 174, 239, 240, 241, 242, 283, 284, 285, 287, 288, 291, 292, 294, 295, 298, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 338, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 376, 380, 381, 387, 390, 391, 392, 393, 395, 396, 397, 401, 402, 407, 408, 409, 410, 412, 415, 416], "principal_q_numb": [12, 30, 239, 240, 242, 243], "sum_noncolinear": [12, 30], "bool": [12, 14, 18, 30, 40, 55, 86, 88, 109, 172, 187, 241, 283, 284, 285, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 404, 405, 409, 410, 411], "tabl": [12, 322, 324, 410, 416], "lm": [12, 403, 404, 412], "tot": [12, 404, 412], "x2": [12, 78, 151, 322, 324, 325, 385, 410], "need": [12, 55, 141, 151, 213, 275, 284, 322, 341, 349, 350, 359, 366, 370, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 398, 404, 406, 407, 410, 411, 416], "sume": [12, 151], "over": [12, 25, 30, 151, 324, 398, 399, 401, 402, 407, 408, 410, 412], "count": [12, 295, 322, 324, 403, 404, 409, 410, 411], "from": [12, 69, 120, 123, 128, 133, 134, 137, 141, 143, 148, 151, 161, 174, 283, 298, 301, 318, 321, 322, 324, 372, 374, 383, 385, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416], "zero": [12, 322, 324, 403, 404, 410, 412], "input": [12, 171, 174, 228, 283, 306, 307, 321, 322, 324, 327, 338, 341, 344, 345, 404, 405, 410, 414], "sum": [12, 30, 151, 292, 404, 407, 408], "string": [13, 125, 158, 167, 174, 238, 239, 240, 241, 242, 243, 257, 263, 264, 265, 268, 283, 294, 318, 319, 320, 321, 377, 404, 405], "current": [13, 59, 344, 374, 375, 376, 377, 378, 379, 380, 381, 382, 397, 402, 403, 404], "basi": [13, 41, 44, 46, 47, 48, 55, 59, 300, 353, 360, 403, 408], "str": [13, 55, 61, 66, 70, 71, 78, 79, 93, 94, 105, 116, 123, 125, 126, 127, 148, 151, 157, 161, 162, 170, 171, 172, 174, 175, 180, 182, 183, 187, 188, 224, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 255, 257, 263, 264, 265, 267, 268, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 404, 405, 409, 410, 411, 414], "non": [14, 30, 40, 322, 324, 345, 347, 348, 351, 352, 356, 357, 358, 363, 365, 366, 370, 371, 372, 375, 376, 377, 378, 379, 380, 382, 386, 387, 388, 397, 398, 403, 404, 408, 410, 411, 412, 416], "colinear": [14, 30, 40, 321, 342, 345, 347, 348, 349, 350, 355, 356, 357, 359, 362, 363, 369, 370, 371, 372, 377, 381, 382, 388, 397, 403, 404, 405, 411], "calc": [14, 213], "channel": [17, 54, 322, 403, 404, 412], "kpoint": [18, 19, 20, 22, 31, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 55, 59, 61, 62, 70, 86, 87, 88, 93, 130, 132, 133, 139, 140, 157, 166, 173, 182, 184, 185, 187, 216, 228, 273, 274, 310, 323, 324, 326, 344, 345, 347, 349, 385, 387, 388, 404, 408, 410, 411, 412, 416], "efermi": [18, 19, 141, 142, 182, 183, 342, 387, 408, 416], "n_kx": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 182, 183, 408], "n_ky": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 182, 183, 408], "n_kz": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 182, 183, 408], "projected_phas": [18, 19, 408], "kpath": [18, 19, 55, 86, 87, 88, 89, 90, 91, 92, 93, 130, 133, 141, 142, 164, 182, 183, 253, 254, 318, 338, 344, 388, 408, 412], "store": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 38, 56, 57, 60, 70, 129, 130, 132, 133, 135, 136, 174, 175, 224, 283, 289, 291, 304, 307, 310, 324, 408, 410, 411], "informomr": 18, "arrai": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 61, 69, 70, 89, 118, 129, 131, 133, 134, 136, 152, 197, 210, 284, 288, 296, 304, 322, 324, 326, 388, 391, 392, 393, 394, 395, 403, 404, 408, 410, 416], "Will": 18, "have": [18, 213, 324, 338, 344, 393, 394, 398, 399, 406, 407, 408, 409, 410, 411, 412], "n_kpoint": [18, 20, 22, 31, 33, 35, 61, 69], "n_band": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 61, 69], "norbit": [18, 408], "full": [18, 174, 284, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 405, 408, 410], "incud": 18, "complex": [18, 408], "part": [18, 195, 398, 410], "clacul": 18, "vector": [18, 94, 96, 97, 99, 100, 101, 104, 120, 121, 127, 143, 178, 265, 299, 300, 304, 324, 347, 387, 391, 392, 394, 395, 403, 404, 410], "matrix": [18, 55, 59, 78, 87, 88, 94, 109, 115, 117, 118, 128, 133, 136, 157, 179, 182, 302, 323, 409, 410, 416], "shifted_to_efermi": [18, 408], "determin": [18, 30, 40, 55, 86, 88, 109, 172, 323, 398, 409], "shift": [18, 70, 84, 292, 410], "electronicbandstructur": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 133, 253, 254, 281, 387, 412, 413], "gradient": [20, 21, 25, 408], "numpi": [20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 61, 69, 78, 129, 131, 133, 134, 136, 322, 324, 386, 387, 388, 391, 392, 393, 394, 395, 400, 408, 410, 416], "self": [20, 22, 31, 33, 35, 78, 193, 194, 207, 283, 284, 285, 288, 292, 347, 349, 386], "where": [20, 21, 22, 23, 33, 34, 161, 241, 310, 319, 320, 323, 324, 338, 345, 350, 359, 370, 376, 377, 391, 398, 404, 405, 409, 410, 411, 412], "second": [20, 22, 23, 33, 97, 99, 104, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395], "dimens": [20, 21, 22, 23, 33, 34, 308], "dx": [20, 21, 22, 23, 33, 34], "dy": [20, 21, 22, 23, 33, 34], "dz": [20, 21, 22, 23, 33, 34], "fradient": [20, 21], "mesh": [21, 23, 24, 25, 32, 34, 36, 38, 39, 42, 43, 45, 56, 57, 60, 337, 347, 385, 401, 402, 408, 410, 412], "grid": [21, 23, 24, 25, 32, 34, 36, 38, 39, 42, 43, 56, 57, 60, 78, 80, 81, 82, 83, 88, 318, 324, 347, 350, 359, 385, 388, 393, 404, 408, 409, 410], "first": [21, 23, 34, 78, 96, 100, 104, 156, 165, 291, 299, 342, 347, 349, 351, 352, 353, 354, 355, 358, 360, 361, 362, 365, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 388, 392, 395, 398, 406, 409, 410, 411, 416], "hessian": [22, 23, 408], "third": [22, 97, 100, 101, 398], "scalar_mesh": [25, 26], "k": [25, 51, 55, 131, 133, 135, 139, 174, 186, 265, 275, 337, 338, 342, 344, 349, 352, 385, 393, 401, 402, 405, 406, 408, 409, 410, 412, 416], "cartesian": [25, 41, 42, 55, 166, 184, 283, 284, 285, 289, 292, 294, 296, 297, 299, 300, 301, 305, 391, 392, 394, 395, 408, 412], "coordin": [25, 78, 133, 134, 136, 166, 184, 185, 284, 285, 296, 297, 300, 301, 325, 385, 391, 392, 394, 395, 408, 412], "scalar_gradient_mesh": 25, "integr": 26, "nd_list": 27, "scalar_list": 28, "vector_list": 29, "_summary_": [30, 325], "speed": [31, 32, 74], "veloc": [32, 34, 324, 401, 402, 410], "harmon": [35, 36, 324, 410, 412], "averag": [35, 36], "effect": [35, 36, 324, 375, 398, 409, 410], "mass": [35, 36, 324, 410], "symmetri": [37, 86, 105, 106, 107, 108, 172, 179, 187, 310, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 397, 404, 405, 408, 410], "oper": [37, 179, 296, 297, 398, 409], "particular": [38, 324, 344, 398, 408, 409, 410, 411], "mesh_grid": [39, 58], "an": [39, 65, 78, 89, 132, 133, 134, 137, 175, 210, 233, 253, 290, 291, 305, 306, 308, 341, 347, 352, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 393, 394, 395, 398, 403, 404, 407, 410, 412], "nd": [39, 284], "nx": [39, 78], "ny": [39, 78], "nz": [39, 78], "rtype": [42, 43], "fraction": [44, 94, 133, 136], "eb": [45, 70, 71, 161, 253, 254, 355, 362, 387, 408, 413], "lsit": 45, "uniqu": [46, 47, 48, 388, 408], "reduc": [46, 47, 48, 55, 185, 310, 395, 408, 411, 412], "numbersk": 53, "show_brillouin_zon": 55, "r": [55, 268, 342, 393, 404, 407, 410], "point_siz": [55, 385, 387, 388, 391, 392, 394, 395], "render_points_as_spher": [55, 385, 387, 388, 391, 392, 394, 395], "move": [55, 347, 410], "core": [55, 59, 87, 88, 117, 118, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 150, 151, 152, 155, 156, 159, 160, 163, 165, 168, 169, 182, 187, 196, 197, 215, 216, 223, 233, 253, 410], "updat": [55, 59, 126, 127, 283, 288, 391, 398], "new": [55, 59, 186, 285, 324, 395, 398, 410, 411], "implement": [55, 275, 398, 404], "pyvista": [55, 78, 120, 133, 137, 324, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 400, 410], "wether": 55, "phase": [57, 130, 133, 347, 408, 416], "done": [59, 296, 297, 322, 347, 365, 386, 400, 405, 409], "expect": [59, 61, 130, 131, 133, 136, 281, 338, 398], "materi": [59, 105, 106, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 398, 403, 404, 406, 410], "spd": [61, 62, 73, 273, 274, 349], "band_indic": [61, 62, 323, 369, 371, 409], "band_color": [61, 62, 323, 369, 371, 409], "loglevel": [61, 62], "30": [61, 62, 322, 345, 378, 383, 391, 392, 394, 395, 398], "kwarg": [61, 62, 233, 234, 253, 254, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 404, 409, 416], "nx3": 61, "alreadi": [61, 69, 398], "substract": 61, "n_kppint": 61, "cmap": [61, 125, 275, 276, 278, 324, 350, 359, 366, 370, 403, 404, 410], "indic": [61, 322, 323, 324, 349, 351, 353, 354, 355, 358, 360, 361, 362, 370, 372, 392, 398, 404, 409, 410, 416], "given": [61, 65, 131, 133, 151, 285, 287, 300, 304, 308, 323, 369, 375, 381, 385, 388, 398, 401, 402, 404, 407, 409, 416], "_type_": [61, 148, 318, 319, 320, 325, 327, 404, 411, 414], "verbos": [61, 283, 284, 292, 293, 302, 303, 318, 322, 359, 391, 392, 395], "level": [61, 66, 69, 255, 275, 283, 284, 292, 293, 306, 307, 318, 324, 348, 356, 372, 378, 379, 397, 403, 404, 410, 411], "log": 61, "warn": [61, 392], "fermisurfac": [62, 63, 64, 65, 66, 67, 68, 69, 133], "matplotlib": [63, 64, 66, 233, 253, 319, 320, 322, 323, 324, 352, 393, 400, 403, 410, 412], "search": [65, 70, 324, 378, 379, 402, 410], "around": [65, 324, 378, 379, 410, 412], "rais": [65, 66, 69, 118, 188, 323, 409, 411], "runtimeerror": [65, 66, 69, 323, 409, 411], "found": [65, 176, 186, 188, 291, 345, 386, 388, 392, 398, 407, 412], "error": [65, 66, 69, 118, 186, 213, 291, 405, 409], "500": 66, "along": [66, 69, 89, 300, 398, 405, 408, 413], "onli": [66, 69, 93, 120, 186, 283, 285, 310, 322, 324, 344, 358, 362, 369, 371, 375, 376, 377, 378, 379, 380, 381, 382, 392, 398, 399, 403, 404, 410, 411], "layer": [66, 69, 391, 410], "geometri": [66, 69, 308, 416], "pyplot": [66, 323, 393, 412], "instanc": [66, 293, 303, 304, 338, 403, 404, 414, 416], "wa": [66, 69, 322, 395, 398, 404, 412], "call": [66, 69, 310, 327, 338, 344, 345, 347, 375, 376, 377, 378, 379, 380, 381, 382, 391, 398, 406, 410, 414], "befor": [66, 69, 349, 350, 359, 366, 370, 376, 394, 409, 414, 416], "sx": 69, "sy": 69, "sz": 69, "300": [69, 350, 359, 366, 370], "It": [69, 145, 186, 275, 291, 295, 301, 304, 322, 350, 359, 366, 370, 376, 391, 395, 398, 403, 404, 409], "enhanc": 69, "version": [69, 341, 365, 366, 369, 370, 371, 372, 385, 388, 398, 399, 400, 407, 410, 411], "nkpoint": [69, 408], "nband": [69, 408, 412], "thei": [69, 186, 398, 406], "also": [69, 324, 341, 345, 350, 355, 359, 362, 366, 369, 370, 371, 376, 398, 403, 404, 409, 410, 416], "other": [69, 78, 205, 322, 324, 366, 376, 388, 389, 393, 398, 404, 408, 409, 410, 411, 412, 414], "compon": [69, 398, 409, 411, 412], "marker": [69, 277, 278, 350, 359, 366, 370], "fermi_shift": [70, 71, 324, 410], "projection_accuraci": [70, 71, 324, 376, 410], "manapul": 70, "fermi_toler": [70, 324, 410], "improv": [70, 324, 410], "effienc": [70, 324, 410], "prior": [70, 141, 324, 398, 400, 410], "select": [70, 284, 285, 322, 324, 355, 362, 407, 410, 412], "within": [70, 324, 388, 391, 398, 400, 404, 410, 411, 412, 416], "toler": [70, 105, 106, 107, 108, 291, 324, 388, 410], "everi": [70, 322, 398, 401, 402, 412], "accuraci": [70, 324, 410], "pad": [70, 78, 79], "isosurfac": [70, 79, 80, 81, 82, 83, 84, 132, 133, 379, 410], "fermisurface3d": [71, 72, 73, 74, 75, 76, 77, 133, 410], "extended_zone_direct": [72, 324, 376, 410], "extend": [72, 398], "vecctor": 72, "expand": [72, 349], "fermi_spe": [74, 375, 376, 377, 378, 379, 380, 381, 382, 387], "fermi_veloc": [75, 324, 375, 376, 377, 378, 379, 380, 381, 382, 387, 410], "harmonic_effective_mass": [76, 375, 376, 377, 378, 379, 380, 381, 382], "spd_spin": 77, "xyz": [78, 79, 283, 292, 301, 305], "isovalu": [78, 79, 133, 134, 324, 410], "v_matrix": [78, 79], "algorithm": [78, 79], "lewin": [78, 79], "transform_matrix": [78, 79], "boundari": [78, 79, 300], "all": [78, 151, 176, 204, 223, 225, 283, 286, 292, 298, 300, 321, 322, 324, 393, 397, 398, 404, 405, 407, 409, 410, 411, 412, 416], "equat": [78, 410, 412], "f": [78, 224, 344, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 394, 398, 403, 404, 409, 410], "must": [78, 283, 324, 338, 344, 345, 377, 388, 398, 404, 410, 416], "between": [78, 80, 86, 97, 100, 104, 120, 291, 393, 398, 404, 414], "x1": [78, 325, 385], "y1": [78, 325, 385], "z1": 78, "z2": 78, "v1": [78, 322, 324, 410], "v2": 78, "constant": [78, 299, 372, 409], "One": [78, 324, 403, 404, 409, 410], "can": [78, 120, 138, 145, 174, 322, 324, 338, 341, 342, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 393, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416], "present": [78, 113, 116, 178, 286, 321, 322, 324, 398, 404, 405, 410], "instead": [78, 283, 286, 379, 398, 404, 409], "togeth": [78, 283, 341, 398, 403, 404], "provid": [78, 125, 174, 175, 233, 253, 302, 310, 321, 322, 324, 338, 341, 347, 350, 359, 366, 370, 376, 393, 398, 401, 402, 403, 404, 405, 407, 408, 410, 412, 413, 415], "scikit": [78, 400], "possibl": [78, 398, 403, 404, 410], "classic": 78, "modul": [78, 228, 321, 326, 327, 390, 397, 402, 405, 406, 409, 411, 414, 416], "fourier": [78, 324, 410], "dafault": [78, 407], "period": 78, "dataset": [78, 107, 410, 411], "e": [78, 176, 268, 291, 294, 295, 300, 322, 324, 345, 375, 393, 398, 404, 407, 409, 410, 411], "g": [78, 294, 322, 324, 344, 345, 375, 388, 393, 404, 405, 409, 410, 411], "1st": [78, 324, 410], "bz": [78, 405, 416], "cover": [78, 398], "fulli": 78, "so": [78, 322, 391, 398, 404, 406, 408, 411, 412], "one": [78, 84, 120, 176, 178, 275, 283, 284, 285, 287, 295, 310, 322, 324, 344, 345, 347, 371, 388, 398, 403, 404, 405, 407, 409, 410, 411], "want": [78, 120, 305, 322, 324, 349, 377, 395, 398, 399, 409, 410, 411], "wrap": 78, "look": [78, 324, 381, 410], "afterward": 78, "clip": 78, "easili": [78, 407], "doabl": 78, "trimesh": [78, 123, 125, 324, 400, 410], "goe": [78, 404, 407, 411], "eigen_matrix": 78, "In": [78, 138, 322, 324, 347, 349, 375, 388, 391, 392, 393, 394, 395, 398, 399, 403, 404, 407, 410, 411, 412, 416], "word": [78, 322, 324, 410], "creat": [78, 120, 303, 304, 308, 322, 324, 326, 344, 345, 347, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 388, 404, 410, 411], "super": [78, 401, 402], "withpad": 78, "vertic": [78, 133, 137, 235, 239, 240, 241, 242, 243, 322, 342, 393, 407, 410], "verts_prim": 78, "t": [78, 224, 275, 344, 398, 399], "exampl": [78, 120, 151, 322, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 389, 390, 391, 392, 393, 394, 395, 398, 399, 403, 404, 407, 409, 410, 411, 412], "space": [80, 105, 106, 306, 375, 376, 377, 378, 379, 380, 381, 382, 388, 393, 409, 410, 414, 416], "length": [80, 398], "tri": [84, 186], "correct": [84, 398], "abl": [84, 377, 403, 404, 410, 412], "min": 84, "max": [84, 392], "kname": [85, 86, 318, 319, 320, 404, 413, 416], "ktick": [85, 86, 318, 319, 320, 404, 413, 416], "special_kpoint": [85, 86, 413], "ngrid": [85, 86, 413], "has_time_revers": [85, 86, 139, 140, 172, 173], "handl": [86, 228, 310, 387, 393, 410, 414], "tick": [86, 91, 92, 247, 250, 267, 270, 276, 277, 278, 413], "map": [86, 120, 125, 126, 174, 324, 403, 404, 409, 410], "special": [86, 398, 403, 409], "time": [86, 172, 283, 285, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 416], "revers": [86, 172, 388, 398], "get": [87, 88, 164, 328, 344, 374, 383, 387, 388, 391, 392, 395, 397, 398, 410], "same_grid_s": 88, "optim": 88, "after": [88, 394, 398, 407, 412], "transformm": 88, "retain": [88, 398], "segment": [90, 409, 413], "filenam": [93, 139, 140, 145, 147, 148, 157, 161, 172, 173, 174, 175, 180, 181, 182, 183, 187, 188, 189, 244, 263, 283, 284, 289, 290, 291, 292, 293, 301, 303, 305, 317, 318, 322, 323, 327, 377, 392, 407, 409, 414, 416], "fmt": 93, "vasp": [93, 141, 148, 211, 225, 228, 232, 283, 317, 318, 319, 320, 322, 323, 324, 341, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 359, 362, 363, 365, 366, 369, 370, 371, 372, 375, 376, 377, 380, 381, 382, 386, 387, 388, 391, 392, 393, 394, 395, 397, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416], "write": [93, 283, 290, 292, 395, 398, 411], "support": [93, 324, 344, 345, 398, 400, 402, 403, 404, 410], "moment": [93, 174, 412], "_description_": [93, 318, 320, 323, 325, 409, 411], "cartesian_coordin": [94, 95, 415], "fractional_coordin": [94, 95, 415], "defin": [94, 322, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 388, 391, 392, 394, 395, 398, 404, 407, 409, 410, 411, 412], "perid": 94, "crystal": [94, 96, 97, 99, 100, 101, 104, 109, 110, 115, 222, 283, 306, 308, 344, 345, 388, 401, 402], "symbol": [94, 133, 136], "natom": [94, 408, 415], "coordinatesd": 94, "magnitud": [96, 99, 101, 324, 403, 404, 410], "angl": [97, 100, 104, 291, 388, 394, 409], "convex": [102, 114], "hull": [102, 114], "scipi": [102, 400], "spatial": 102, "convexhul": 102, "symprec": [105, 106, 107, 108, 187, 326, 388], "1e": [105, 106, 107, 108, 187, 326, 388], "intern": [105, 283, 288], "group": [105, 106, 283, 375, 376, 377, 378, 379, 380, 381, 382], "spglib": [107, 187], "dict": [107, 153, 154, 174, 198, 199, 216, 220, 241, 291, 318, 319, 320, 322, 404, 407], "wyckoff": 108, "insid": [109, 145, 398], "unitcel": 109, "question": 109, "corner": [110, 407], "speci": [113, 243, 284, 294, 322, 393, 407], "differ": [116, 291, 322, 324, 344, 345, 347, 350, 353, 359, 360, 366, 370, 372, 376, 392, 394, 398, 404, 405, 406, 407, 410], "crystla": 118, "valueerror": [118, 188], "proper": 118, "face_norm": [120, 121], "vert_norm": [120, 121], "face_color": [120, 121], "vert_color": [120, 121], "hold": 120, "about": [120, 138, 174, 219, 220, 352, 370, 371, 387, 398, 399, 407, 410], "inherit": 120, "To": [120, 321, 324, 341, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 400, 404, 405, 407, 409, 410, 412], "minimum": [120, 125, 320, 322, 324, 404, 409, 410, 411], "requir": [120, 341, 342, 344, 345, 347, 398, 404, 406, 408, 409, 410, 411], "nvert": 120, "vertici": 120, "integ": [120, 304], "nface": 120, "connect": [120, 388, 398, 410], "vertex": 120, "attach": [120, 398], "glyph": [120, 387], "file_obj": 123, "output": [123, 144, 148, 174, 228, 289, 305, 321, 322, 324, 327, 341, 398, 404, 405, 407, 410, 414], "glb": [123, 324, 410], "file_typ": 123, "new_fac": 124, "viridi": [125, 350, 359, 366, 376], "vmin": [125, 275, 276, 278, 320, 324, 404, 409, 410, 416], "vmax": [125, 275, 276, 278, 320, 324, 404, 409, 410, 416], "maximum": [125, 320, 322, 324, 404, 409, 410, 411], "scalar_nam": 126, "vectors_x": 127, "vectors_i": 127, "vectors_z": 127, "vectors_nam": 127, "manipul": [129, 130, 133, 306, 307, 308], "1d": [129, 133, 134, 392], "n_energi": [129, 133], "see": [129, 130, 131, 132, 135, 136, 303, 375, 387, 393, 398, 399, 403, 404, 409, 416], "further": [129, 130, 131, 132, 135, 136, 141, 398, 404, 409, 411, 416], "plane": [131, 133, 323, 324, 377, 385, 403, 404, 409, 410], "informt": [132, 133], "includ": [132, 133, 138, 151, 174, 179, 236, 237, 241, 283, 338, 344, 347, 398, 401, 402, 403, 404, 412, 416], "extens": [132, 133, 134, 137, 290, 301, 305, 398], "path": [133, 135, 161, 174, 175, 322, 324, 338, 342, 344, 345, 347, 349, 350, 359, 370, 376, 391, 392, 393, 394, 395, 401, 402, 405, 406, 410, 412], "tick_label": [133, 135], "tick_posit": [133, 135, 247, 250, 267, 413], "n_segement": [133, 135], "kdistanc": [133, 135, 413], "learn": [138, 399], "more": [138, 176, 178, 275, 283, 287, 295, 324, 338, 355, 362, 370, 371, 388, 392, 398, 399, 403, 404, 407, 410, 411], "pars": [138, 139, 141, 143, 145, 147, 148, 157, 161, 164, 171, 172, 174, 180, 182, 188, 190, 191, 205, 220, 226, 227, 228, 229, 230, 231, 232, 283, 284, 323, 392, 395, 407, 409], "dft": [138, 322, 324, 344, 349, 388, 398, 401, 402, 403, 404, 405, 407, 408, 410, 412, 415, 416], "highlight": [138, 416], "python": [138, 153, 198, 224, 322, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 410], "interfac": [138, 398, 410], "configur": [138, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 397], "io": [138, 226, 227, 229, 230, 231, 232, 387, 408, 413, 415], "pyposcar": [138, 291, 307, 308, 391, 392, 393, 394, 395, 396], "modulu": 138, "script": [138, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 404, 405, 409, 410, 411, 414, 416], "bandsplot": [138, 318, 338, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 362, 365, 366, 404, 406, 407], "dosplot": [138, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 281, 318, 338, 344, 345, 347, 358, 359, 360, 361, 362, 365, 366, 407], "bandsdosplot": [138, 338, 344, 345, 347, 364, 367, 397, 407], "abinitkpoint": [140, 228], "dirnam": [141, 142, 148, 149, 161, 162, 309, 310, 317, 318, 319, 320, 322, 323, 324, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 404, 406, 407, 409, 410, 416], "infil": [141, 142, 145, 146, 147, 321, 324, 326, 327, 388, 405, 410, 411, 414], "abinit_output": [141, 142, 143, 144, 321, 324, 341, 404, 405, 410, 416], "procar": [141, 148, 149, 157, 183, 184, 185, 186, 187, 228, 310, 317, 318, 321, 324, 327, 332, 338, 340, 341, 347, 386, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 414, 416], "unlik": 141, "here": [141, 186, 275, 301, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 397, 399, 404], "merg": [141, 321, 341, 398, 405], "fix": [141, 186, 213, 292, 321, 341, 398, 405], "format": [141, 186, 224, 228, 306, 321, 322, 324, 341, 344, 385, 386, 387, 388, 398, 401, 402, 404, 405, 410, 412, 414], "issu": [141, 321, 341, 405, 414], "abinitprocar": [142, 228], "through": [145, 147, 311, 314, 398, 403, 404, 408, 409, 410, 413, 415, 416], "becaus": [145, 398, 404], "multipl": [145, 321, 332, 341, 401, 402, 407, 412], "bsxf": 145, "sown": 145, "bxsfparser": [146, 147, 228], "bxsf": [146, 147, 227, 228, 324, 410], "helper": 147, "qe": [148, 149, 228, 229, 230, 322, 344, 345, 347, 352, 353, 358, 360, 378, 379], "lobsterin": [148, 149, 344], "lobsterout": [148, 149, 344], "scfin_filenam": [148, 149], "scf": [148, 149, 161, 162, 344, 345, 347], "outcar": [148, 149, 157, 175, 176, 177, 178, 179, 187, 228, 317, 324, 347, 386, 404, 410, 416], "poscar": [148, 149, 157, 181, 221, 228, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 306, 308, 322, 324, 388, 390, 396, 397, 410, 411, 416], "dos_interpolation_factor": [148, 149, 188, 189], "directori": [148, 161, 310, 319, 320, 321, 322, 323, 338, 342, 344, 345, 347, 349, 350, 359, 394, 404, 405, 409], "put": [148, 322, 324, 405, 410], "lobsterpars": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 228], "retrun": 150, "dos_paramater": 151, "separatli": 151, "pychemia": [151, 203, 211, 212, 215, 216, 223, 400], "visual": [151, 390, 396, 397, 409, 410], "multi": [152, 197], "diment": [152, 197, 410], "complet": [153, 198, 342], "dictionari": [153, 174, 198, 206, 209, 241, 291, 318, 319, 320, 322, 338, 404], "denis": 153, "sturcutu": 157, "scf_in_filenam": [161, 162], "bands_in_filenam": [161, 162], "pdos_in_filenam": [161, 162], "pdo": [161, 162, 345], "kpdos_in_filenam": [161, 162], "kpdo": [161, 162, 345], "atomic_proj_xml": [161, 162], "atomic_proj": [161, 162, 345], "xml": [161, 162, 188, 189, 192, 213, 220, 322, 345, 407], "expresso": 161, "most": [161, 322, 393, 398, 404, 407], "import": [161, 322, 324, 344, 345, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 400, 408, 409, 410, 413, 415, 416], "come": [161, 398, 401, 402], "parser": [161, 213, 228, 387, 404, 408, 413, 415], "took": 161, "place": [161, 338, 345, 398, 410], "case": [161, 322, 324, 338, 349, 393, 398, 404, 405, 410, 411, 416], "ofstat": 161, "locat": [161, 233, 253, 270, 349, 350, 359, 366, 370, 376, 411], "outdir": 161, "prefix": 161, "qepars": [162, 163, 164, 165, 166, 167, 168, 169, 228], "fdf_file": [170, 171], "siestapars": [171, 228], "siesta": [171, 228, 231, 343], "fdf": 171, "vlaue": 172, "kpioint": 172, "run": [174, 284, 341, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 405, 412], "extract": [174, 207, 208, 347, 411], "summari": 174, "eigenvalu": 174, "stress": 174, "tensor": 174, "forc": [174, 398], "local": [174, 351, 352, 353, 354, 355, 358, 360, 361, 362, 365, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 392, 393, 398], "charg": [174, 398], "dielectr": 174, "amount": [174, 292, 300], "written": [174, 290, 301, 305, 347, 385, 388, 398, 416], "onto": [174, 403, 404, 412], "chosen": 174, "modifi": [174, 283, 293, 303, 322, 390, 396, 397, 398, 403, 404], "nwrite": 174, "tag": [174, 210, 404, 409], "incar": [174, 347, 410], "act": 174, "access": [174, 398, 403, 412], "variabl": [174, 286, 404], "union": [174, 175], "file_str": 174, "content": [174, 175, 286, 301, 304, 305, 398], "constructor": 175, "read": [175, 213, 324, 345, 388, 398, 407, 410, 416], "specifi": [175, 192, 310, 322, 324, 342, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 398, 404, 407, 410], "its": [175, 398], "just": [176, 178, 275, 300, 301, 305, 410, 411], "field": 176, "keep": [176, 322, 324, 398, 403, 410, 411], "than": [176, 178, 205, 275, 322, 324, 392, 398, 403, 404, 410, 411, 416], "ndaarai": 178, "them": [179, 224, 283, 398, 404, 412], "matric": [179, 412], "stupid": 186, "problem": [186, 398], "due": [186, 414, 416], "fortran": [186, 414], "now": [186, 344, 345, 395, 409, 411, 412], "separ": [186, 398, 403, 404, 405], "61": [186, 392], "00000000": [186, 412], "50000000": 186, "But": [186, 371, 398, 409], "precis": [187, 398], "vasprun": [188, 189, 218, 220, 322, 407], "vaspxml": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 416], "el": 192, "_type": 192, "attrib": 192, "tree": 192, "boolian": [193, 194, 195, 224, 322], "consist": [193, 194, 207, 347, 386, 398, 403, 404, 412], "ionic": [193, 195, 200, 204, 214, 223], "converg": [194, 195], "system": [201, 217, 284, 344, 398, 405, 409, 416], "final": [203, 395, 398, 404, 405], "xml_tree": [205, 206, 207, 208, 209, 210], "calculatio": 205, "scstep": 205, "dest": 206, "recurc": [206, 208], "check": [206, 321, 399, 405], "spell": 206, "tage": 208, "varrai": 210, "vaspincar": 211, "alwai": [213, 283, 300, 409], "accord": [213, 398, 409], "finish": 213, "we": [213, 322, 324, 344, 345, 347, 349, 350, 359, 366, 370, 372, 375, 376, 391, 392, 393, 394, 395, 398, 399, 403, 407, 409, 410, 412, 416], "pseudopotenti": 219, "potcar": 219, "covert": 224, "abinit": [226, 228, 321, 322, 324, 343, 344, 402, 403, 404, 405, 410, 416], "espresso": [227, 228, 229, 230, 231, 343, 344, 348, 356, 357, 363, 397, 402, 403, 404], "decrib": 228, "result": [228, 375, 398, 411, 416], "lobster": [228, 229, 318, 320, 322, 323, 343, 402, 409], "abinitpars": 228, "vasppars": 228, "mpl": [233, 253], "orient": [235, 238, 239, 240, 241, 242, 243, 318, 322, 377, 387, 403, 404, 407], "horizont": [235, 238, 239, 240, 241, 242, 243, 318, 322, 407], "linestyl": [235, 350, 359, 370, 393], "THe": 235, "plain": [238, 259, 318, 319, 320, 322, 323, 324, 344, 345, 347, 349, 350, 352, 359, 360, 361, 366, 370, 371, 372, 374, 375, 376, 377, 382, 383, 397, 401, 402, 406, 409, 410, 412, 416], "parametr": [239, 240, 261, 322, 324, 338, 349, 350, 352, 359, 365, 366, 370, 371, 372, 375, 376, 377, 378, 379, 382, 403, 404, 406, 410, 412], "item": [241, 318, 319, 320, 322, 351, 358, 362, 398, 404, 407, 416], "plot_tot": [241, 322, 359, 407], "contribut": [241, 242, 243, 322, 324, 398, 399, 403, 404, 407, 410], "eachoth": 243, "pdf": [244, 263, 322], "interv": [246, 249, 266, 269, 270, 349, 406], "xlim": [246, 349], "tick_nam": [247, 250, 267, 413], "xtick": 247, "ylim": 249, "ytick": 250, "config_dict": [252, 272], "ebsplot": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 281, 349, 350, 351, 352, 353, 354, 355], "fermi_level": 255, "methdo": 257, "width_mask": [258, 260, 262], "color_mask": [258, 260, 262], "width_weight": [258, 260, 262], "color_weight": [258, 260, 262], "scatter": [258, 260, 262, 349, 350, 352, 353, 354, 365, 366, 404], "mask": [258, 260, 262, 276, 278, 319, 320, 398, 404], "overlai": [261, 349, 350, 352, 353, 354, 355, 365, 366, 375, 376, 377, 378, 379, 380, 381, 382], "fo": [265, 268], "limit": [266, 269, 322, 349, 350, 359, 366, 370, 376, 398, 404], "begin": [266, 269, 325, 412], "end": [266, 269, 325, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 398, 407, 412], "_f": 268, "depeci": 273, "ot": 273, "procarplot": [274, 275, 276, 277, 278, 281], "hot_r": [275, 278], "handler": 275, "parametricplot": 275, "fake": 275, "shouldn": 275, "invok": [275, 301, 398, 400], "discontinu": [276, 277, 278, 318, 345, 412], "figsiz": [276, 277], "13": [276, 277, 353, 360, 375, 383, 391, 398, 403, 411, 412], "plot_bar": [276, 359], "02": [277, 356, 367, 383], "50": [278, 347, 392, 411], "structutu": 279, "stuctur": 281, "depreci": 282, "low": [283, 306, 307, 349, 411], "tailor": 283, "manual": [283, 377, 388, 404, 405], "coord": [283, 300, 305, 325], "_set_cartesian": 283, "_set_direct": 283, "ie": 283, "angstrom": 283, "load": [283, 284, 286, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 395], "whole": [283, 324, 398, 410], "_unpars": 283, "sort": 283, "remov": [283, 292, 394, 398], "automat": [284, 288, 290, 301, 322, 324, 347, 349, 385, 388, 392, 398, 404, 410], "debug": [284, 398], "cpo": 284, "nadarrai": [284, 294], "dpo": [284, 391, 392, 394, 395], "lat": [284, 391, 392, 394, 395], "3x3": [284, 304], "typesp": 284, "aam": 284, "numbersp": 284, "ntotal": [284, 395], "elm": [284, 391, 392, 394, 395], "dynam": [284, 398], "selectflag": 284, "flag": [284, 321, 341, 342, 344, 345, 347, 405, 416], "volum": [284, 398, 410, 415], "box": [284, 398], "product": [284, 391, 392, 394, 395, 398], "selectiveflag": 285, "1x3": 285, "fromstr": 286, "memori": [286, 375, 376, 377, 378, 379, 380, 381, 382, 411], "popul": 286, "when": [288, 310, 323, 324, 341, 347, 352, 355, 362, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 398, 403, 405, 406, 409, 410, 411, 413], "out": [289, 322, 324, 341, 342, 344, 345, 398, 410, 416], "positon": 289, "falseposit": 289, "comment": [290, 412], "ad": [290, 301, 305, 324, 344, 398, 410], "poscar1": 291, "poscar2": 291, "compar": [291, 308, 348, 356, 375, 397, 401, 402, 412, 416], "two": [291, 308, 322, 324, 392, 395, 398, 404, 410], "small": [291, 398, 410], "numer": [291, 398], "ignor": [291, 393, 411], "empti": 291, "comparison": [291, 404, 406], "doe": [291, 298, 322, 324, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 397, 398, 407, 409, 410, 411], "distanc": [291, 393, 413, 416], "rel": [291, 411], "consid": [291, 322, 324, 358, 362, 398, 399, 401, 402, 403, 404, 410], "equal": [291, 352, 378, 379], "chang": [292, 293, 295, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 394, 395, 398, 407], "pos_multipli": 292, "multipli": [292, 296, 299, 322], "pos_sum": 292, "human": [292, 295, 298, 395], "singl": [292, 294, 398, 405], "scale_lattic": [292, 395], "poscar_modifi": [293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 308, 395], "cu": 294, "coordiant": 294, "newel": [295, 395], "replac": [295, 351, 352, 353, 354, 355, 358, 360, 361, 362, 365, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 388], "fx": [296, 297], "fy": [296, 297], "fz": [296, 297], "trivial": 298, "equival": [298, 322, 398], "desir": [298, 304, 388, 404, 407], "onc": [298, 349, 350, 359, 366, 370, 376, 400], "start": [298, 322, 324, 391, 392, 395, 398, 403, 404, 409, 410, 411], "keep_cartesian": [299, 395], "b": [299, 392, 393, 394, 395, 398, 415], "c": [299, 375, 391, 392, 393, 395, 398, 399, 400, 410, 415], "what": [299, 397, 398], "cooddin": 299, "remain": [299, 398, 412], "pbc": 300, "enforc": [300, 398], "perod": 300, "condit": [300, 398], "conveni": [301, 305, 398], "too": [301, 395, 398, 414], "poscar_supercel": [303, 304, 305, 306, 308, 395], "origin": [304, 324, 369, 370, 371, 372, 398, 404, 408, 410, 411], "overwritten": 304, "b1x": 304, "b1y": 304, "b1z": 304, "b2x": 304, "b2y": 304, "b2z": 304, "b3x": 304, "b3y": 304, "b3z": 304, "term": [304, 375, 398], "prefer": [305, 398, 399], "analysi": [306, 410, 411], "real": [306, 411], "featur": [306, 324, 347, 355, 362, 398, 409, 410, 411], "storag": [306, 398], "util": [306, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 393, 394, 398, 405, 409, 410, 411, 414], "poscarutil": [306, 395], "poscardiff": [306, 308], "strcutur": 307, "repair": [309, 310, 317, 318, 324, 338, 340, 398, 410, 412], "apply_symmetri": [309, 310, 375, 376, 377, 378, 379, 380, 381, 382], "fermihandl": [310, 311, 312, 313, 314, 315, 316, 338, 347, 375, 376, 377, 378, 379, 380, 381, 382], "Then": [310, 347, 351, 352, 353, 354, 355, 358, 360, 361, 362, 365, 369, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 388, 416], "srufac": [310, 311, 314], "iso_rang": [311, 314, 324, 378, 379, 410], "iso_surfac": [311, 314, 324, 378, 379, 410], "iso_valu": [311, 314, 379], "spin_textur": [311, 312, 313, 314, 315, 323, 324, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 397, 409, 410], "property_nam": [311, 312, 313, 314, 315], "save_gif": [311, 315, 379], "print_plot_opt": [311, 312, 313, 314, 315, 318, 319, 322, 323, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 404, 409], "slide": [311, 314], "go": [311, 314, 322, 324, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 400, 410], "ther": [311, 314, 320], "slider": [311, 314, 324, 410], "slice_norm": [312, 313, 324, 375, 377, 410], "slice_origin": [312, 313, 324, 375, 377, 410], "save_2d": [312, 313, 314, 315], "save_2d_slic": [312, 313, 377], "save_mp4": 315, "save_3d": 315, "gap": [317, 386], "bands_set": [318, 338, 365, 366], "elimit": [318, 319, 320, 322, 349, 352, 404, 406, 407, 416], "cubic": [318, 319, 320, 322, 404, 416], "interpolation_typ": [318, 319, 320, 404, 416], "projection_mask": [318, 319, 320, 322, 404, 416], "dos_set": [318, 338, 365, 366], "dos_limit": [318, 322], "savefig": [318, 319, 320, 322, 323, 350, 359, 404, 406, 407, 409, 416], "k_limit": 318, "title_fonts": 318, "draw_fermi": 318, "plot_color_bar": [318, 350, 359, 370, 371, 372], "keyword": [318, 338, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 408], "argument": [318, 322, 324, 338, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 407, 408, 410, 413, 415], "window": [318, 319, 320, 322, 398, 404, 410], "structutr": [319, 404], "sting": [319, 404], "kanem": [319, 404], "decid": [319, 398, 404, 409], "plt": [319, 320, 322, 323, 393, 404, 409, 416], "kdirect": [320, 404, 416], "bandstructur": [320, 329, 398, 405], "kitck": 320, "objext": 320, "outfil": [321, 326, 327, 388, 405, 411, 414], "procar_merg": [321, 405], "gz": [321, 405], "mergeparallel": [321, 405], "fixformat": [321, 405], "nspin": [321, 345, 405, 408], "concaten": [321, 332, 338, 341, 412], "procar_": [321, 405], "compress": [321, 405], "parallel": [321, 341, 405], "detect": [321, 405], "nsppol": [321, 405], "being": [322, 375, 398], "carri": [322, 398, 404, 407], "srvo3": 322, "perform": [322, 324, 342, 345, 347, 398, 401, 402, 409, 410, 411, 413, 416], "explain": [322, 341, 398, 410], "exmapl": [322, 375, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395], "tutori": [322, 399, 410], "parametric_lin": [322, 359, 360, 361, 365, 366, 412], "stack_orbit": [322, 358, 359, 360, 361, 362, 365, 366, 412], "stack_speci": [322, 359, 360, 361, 365, 366, 412], "spline": 322, "polor": 322, "packag": [322, 324, 345, 349, 350, 359, 366, 370, 376, 393, 394, 395, 398, 404, 407, 410], "relev": [322, 324, 398, 410], "mind": [322, 324, 395, 410, 411], "srvo": [322, 324, 403, 404, 407, 410], "choos": [322, 324, 398, 410], "oxygen": [322, 324, 407, 410], "sr1": [322, 324, 410], "o3": [322, 324, 410], "900891": [322, 324, 410], "000000": [322, 324, 410, 414], "sr": [322, 324, 403, 404, 407, 410], "500000": [322, 324, 410], "noth": [322, 324, 398, 410], "indeci": [322, 324, 410], "relav": [322, 324, 410], "while": [322, 324, 398, 407, 410, 411], "ask": [322, 398, 407], "graph": [322, 398], "higher": 322, "accept": [322, 398, 408], "png": [322, 324, 377, 404, 407, 410, 416], "jpg": 322, "interact": [322, 393, 398, 410], "well": [322, 369, 371, 398, 404, 405, 410], "entri": [322, 395], "cal": 322, "argumnet": [322, 407], "elk": [322, 343, 402, 403, 404, 406, 407, 416], "fill": [322, 407], "under": [322, 398, 407], "curv": [322, 407], "For": [322, 338, 347, 351, 353, 354, 355, 358, 360, 361, 362, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 385, 398, 403, 404, 407, 409, 410, 411, 412, 416], "clarif": 322, "visit": 322, "specif": [322, 338, 344, 349, 376, 393, 394, 398, 399, 403, 404, 407, 410], "clarifi": 322, "lingo": 322, "top": [322, 407], "take": [322, 338, 345, 353, 360, 398, 408, 413, 415], "treat": [322, 398, 409], "subplot": [322, 393, 394], "larger": [322, 398], "row": [322, 403, 404, 411], "colomun": 322, "fig": [322, 393, 404], "linspac": 322, "pi": [322, 375], "1000": [322, 393], "sin": 322, "plt_show": 322, "skip": [322, 410], "set_ylim": 322, "k_z_plane": [323, 409], "k_z_plane_tol": [323, 409], "rot_symm": [323, 409], "translat": [323, 412], "exportplt": [323, 409, 416], "k_z": [323, 409], "invalid": [323, 398, 409], "background_color": [324, 376, 410], "save_color": [324, 410], "calculate_fermi_spe": [324, 410], "calculate_fermi_veloc": [324, 410], "calculate_effective_mass": [324, 410], "arrow_color": [324, 370, 371, 410], "arrow_s": [324, 370, 371, 372, 376, 377, 382, 410], "015": [324, 388, 410], "only_spin": [324, 410], "savegif": [324, 410], "savemp4": [324, 410], "save3d": [324, 410], "save_meshio": [324, 410], "perspect": [324, 410], "save2d": [324, 410], "show_slic": [324, 410], "show_cross_section_area": [324, 377, 410], "iso_slid": [324, 410], "camera_po": [324, 410], "widget": [324, 377, 410], "simul": [324, 410], "mgb2": [324, 410], "ni_f": [324, 410], "49": [324, 410, 413], "iter": [324, 410], "ones": [324, 407, 410], "14": [324, 353, 356, 360, 371, 391, 403, 410, 412], "15": [324, 353, 360, 371, 391, 392, 398, 403, 410, 416], "17": [324, 353, 360, 372, 376, 383, 391, 392, 403, 410], "kgrid": [324, 410], "5x5x5": [324, 410], "lead": [324, 410], "20x20x20": [324, 410], "uniform": [324, 410], "direect": [324, 410], "rgba": [324, 410], "whena": [324, 410], "recomend": [324, 410], "qualit": [324, 410], "grai": [324, 410], "allow": [324, 398, 403, 404, 409, 410, 416], "web": [324, 410], "page": [324, 398, 399, 402, 410], "http": [324, 375, 398, 400, 410], "org": [324, 375, 398, 410], "user": [324, 338, 351, 353, 354, 355, 358, 360, 361, 362, 388, 398, 403, 404, 407, 409, 410], "html": [324, 398, 410], "surfca": [324, 410], "property_project": [324, 410], "fermi_velocity_vector": [324, 410], "mean": [324, 351, 353, 354, 355, 358, 360, 361, 362, 398, 410], "effective_mass": [324, 410], "collinear": [324, 403, 404, 408, 410, 412], "As": [324, 393, 398, 404, 410, 412], "suggest": [324, 410], "abov": [324, 344, 345, 347, 372, 375, 378, 379, 392, 398, 403, 404, 406, 410], "belov": [324, 410], "fast": [324, 410], "rather": [324, 410, 411, 416], "inaccur": [324, 398, 410], "nearest": [324, 393, 395, 410], "neighbor": [324, 393, 395, 410], "accur": [324, 410], "linear": [324, 410], "gif": [324, 379, 410], "mp4": [324, 410], "video": [324, 410], "export": [324, 410, 412], "stl": [324, 410], "binari": [324, 410], "ply": [324, 410], "ascii": [324, 410], "off": [324, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 397, 410], "obj": [324, 410], "gltf": [324, 410], "collada": [324, 410], "meshio": [324, 410], "illus": [324, 410], "depth": [324, 399, 410], "graphic": [324, 410], "turn": [324, 374, 375, 376, 377, 378, 379, 380, 381, 382, 397, 410], "largest": [324, 410], "show_curvatur": [324, 410], "curvatur": [324, 410], "curvature_typ": [324, 410], "avail": [324, 398, 399, 404, 409, 410, 416], "gaussian": [324, 410], "iso_energi": [324, 410], "view": [324, 398, 410], "camera": [324, 410], "nkx": 325, "nky": 325, "grid_siz": 326, "40": [326, 342, 375, 388, 392, 394, 404], "with_time_revers": 326, "recip": [326, 388, 410], "hpkot": [326, 388], "threshold": [326, 388, 393], "07": [326, 388, 396], "angle_toler": 326, "supercell_matrix": [326, 388, 416], "recepi": 326, "procarrepair": [327, 414], "exist": 328, "pre": [338, 365, 366, 369, 370, 371, 372, 385, 388, 398, 401, 402], "post": [338, 365, 366, 369, 370, 371, 372, 385, 388, 398, 401, 402, 411], "cat": [338, 341, 405, 412], "depend": [338, 400, 407], "mai": [338, 355, 362, 398, 404, 410], "orbitald": 338, "bandsplot_2d": 338, "bandtructur": 338, "combin": [338, 366, 370, 398, 403, 404, 405, 410], "fermi2d": [338, 368, 370, 372, 373, 397, 409], "fermi3d": [338, 344, 345, 374, 383, 397, 410], "generate2dkmesh": [338, 385], "kmesh": [338, 344, 347, 387], "bandgap": [338, 384, 389, 397], "reapir": 338, "abinitoutput": 341, "prtprocar": 341, "nameofoutputfil": 341, "split": [341, 368, 373, 391, 392, 394, 395, 397, 405, 409], "bandlin": 342, "band_": [342, 403, 404], "_a": 342, "obtain": [342, 391, 393, 401, 402, 404, 405, 412], "task": [342, 401, 402], "22": [342, 391, 392, 395], "addition": [342, 408], "spinpol": 342, "These": [342, 348, 357, 364, 365, 366, 368, 374, 384, 390, 397, 398, 403, 404, 410], "join": [342, 350, 359, 370, 376, 391, 392, 393, 394, 395], "plot1d": 342, "gamma": [342, 347, 349, 385, 404, 405, 413, 415, 416], "were": [342, 392, 398], "guid": [343, 345, 347, 351, 353, 354, 355, 358, 360, 361, 362, 399], "prepar": 343, "perper": 343, "fatband": 344, "lobter": 344, "lobstercod": 344, "v6": [344, 345], "variou": [344, 345, 347, 350, 359, 366, 370, 376, 401, 402, 408, 412, 413, 415], "independ": [344, 345, 347, 398], "pw": [344, 345], "your": [344, 345, 398, 399, 410], "bands_dirnam": [344, 345, 347], "dos_dirnam": [344, 345, 347], "bands_mod": [344, 345, 347], "dos_mod": [344, 345, 347], "right": [344, 393, 398, 407, 410, 412], "addit": [344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 412], "wf_collect": 344, "nosym": 344, "noinv": 344, "k_point": [344, 345], "520": 344, "0000000": 344, "1428571": 344, "2857143": 344, "4285714": 344, "0000000000": [344, 345], "0000": 344, "0200000000": 344, "4800000000": 344, "5000000000": [344, 345], "5110420726": 344, "4889579274": 344, "7539676705": 344, "2460323295": 344, "7650097432": 344, "2349902568": 344, "h2": 344, "h0": 344, "2238002446": 344, "meth": 344, "explicitli": [344, 345, 398], "lobster_input_fil": 344, "explicit": [344, 345], "createfatband": 344, "2p_x": 344, "2p_y": 344, "2p_z": 344, "li": [344, 398], "refer": [344, 351, 353, 354, 355, 358, 360, 361, 362, 370, 371, 398, 403, 404, 408, 412, 413, 415], "fe": [344, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388], "lobster_q": 344, "projwfc": 345, "make": [345, 347, 349, 374, 375, 376, 377, 378, 379, 380, 381, 382, 394, 395, 397, 398, 409, 411], "sure": [345, 347, 374, 375, 376, 377, 378, 379, 380, 381, 382, 394, 397, 398], "kresolveddo": 345, "copi": [345, 398, 407], "main": [345, 408, 413, 415], "nscf": 345, "crystal_b": 345, "6250000000": 345, "2500000000": 345, "u": [345, 398, 399, 409], "3750000000": 345, "7500000000": 345, "w": [345, 398, 410], "occur": [345, 398, 404], "269": 345, "0083333333": 345, "0166666667": 345, "0250000000": 345, "0333333333": 345, "0416666667": 345, "4916666667": 345, "5062500000": 345, "0125000000": 345, "6125000000": 345, "2250000000": 345, "6187500000": 345, "2375000000": 345, "3691406250": 345, "7382812500": 345, "3632812500": 345, "7265625000": 345, "3574218750": 345, "7148437500": 345, "0058593750": 345, "0117187500": 345, "starting_magnet": 345, "branch": 345, "instal": [345, 394, 398], "git": [345, 400], "clone": 345, "gitlab": 345, "com": [345, 398, 400], "pietrodeluga": 345, "q": [345, 410], "cd": [345, 400], "checkout": 345, "new_proj": 345, "bin": [345, 393], "side": [345, 366, 394, 398], "noncolin": 345, "lspinorb": 345, "savesigma": 345, "still": [346, 398], "develop": [346, 365, 366, 369, 370, 371, 372, 385, 388, 402], "wavefunct": [347, 412], "lorbit": [347, 416], "11": [347, 353, 360, 377, 383, 391, 398, 403, 412], "unfold": [347, 401, 402, 412], "12": [347, 353, 360, 366, 391, 392, 403, 410, 412, 416], "wave": [347, 412], "ispin": [347, 416], "lnoncollinear": 347, "icharg": 347, "math": [347, 403, 404], "chgcar": 347, "line_mod": 347, "h": [347, 392, 393, 398, 413, 416], "25": [347, 375, 379, 391, 392, 395], "demonstr": [348, 350, 357, 359, 364, 366, 368, 370, 374, 376, 384, 390, 392, 394, 395, 397], "capabl": [348, 357, 364, 368, 374, 384, 397, 401, 402, 404, 410], "download": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397], "illustr": [349, 350, 359, 366, 370, 376, 407, 412], "compound": 349, "hbn": 349, "cncn": 349, "dive": [349, 350, 359, 366, 370, 376, 393, 394], "data_dir": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395], "download_exampl": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388], "save_dir": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388], "cnn": 349, "spin_calc_typ": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388], "calc_typ": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388], "necessari": [349, 398, 404, 412], "librari": [349, 365, 366, 369, 370, 371, 372, 385, 388, 398, 400, 401, 402], "root": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 391, 392, 393, 394, 395], "sep": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 391, 392, 394, 395], "focu": [349, 410], "re": [349, 411], "interest": [349, 398, 410], "96": 349, "97": 349, "42": [349, 392], "44": 349, "clim": [349, 350, 359, 366, 370], "There": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398, 399], "pass": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 398], "overlay_speci": [349, 350, 352, 353, 354, 355, 365, 366], "overlay_orbit": [349, 350, 351, 352, 353, 354, 355, 365, 366], "research": [349, 350, 359, 369, 370, 371, 372, 376, 398, 399], "ebs_plot": [349, 350, 351, 352, 353, 354, 355, 404, 406], "534": 349, "userwarn": 349, "attempt": [349, 398], "ident": 349, "singular": 349, "set_xlim": 349, "246": 349, "98": 349, "0x000002af970d9a00": 349, "minut": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395], "790": [349, 356], "plot_atomic_level": [349, 356], "jupyt": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397], "notebook": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397], "ipynb": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395], "galleri": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397], "sphinx": [349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397], "wai": [350, 359, 366, 370, 376, 393, 398, 399, 411], "explor": [350, 359, 366, 370, 376, 391, 393], "print_plot_op": 350, "config_path": [350, 359, 370, 376], "__path__": [350, 359, 370, 376], "spin_color": [350, 359, 376, 381], "fermi_color": [350, 359, 366], "fermi_linestyl": [350, 359, 366], "fermi_linewidth": [350, 359, 366], "grid_axi": [350, 359], "grid_color": [350, 359], "grid_linestyl": [350, 359], "grid_linewidth": [350, 359], "grid_which": [350, 359], "markers": [350, 359, 366], "weighted_color": [350, 359], "weighted_width": [350, 359], "figure_s": [350, 359, 366], "dpi": [350, 359, 366, 370], "0x000002af935c8ca0": 350, "0x000002af93527a00": 350, "0x000002af94d93460": 350, "0x000002af9492dc70": 350, "566": [350, 356], "plot_bandsplot_configur": [350, 356], "0x000002af95083250": 351, "pleas": [351, 353, 354, 355, 358, 360, 361, 362, 365, 366, 369, 370, 371, 372, 385, 388, 398, 399, 400, 410, 412], "ref": [351, 353, 354, 355, 358, 360, 361, 362], "atomic_project": [351, 353, 354, 355, 358, 360, 361, 362], "0x000002af93059ac0": 351, "0x000002af93079790": 351, "0x000002af94eabd30": 351, "0x000002af970f9520": 351, "0x000002af934fa640": 351, "0x000002af94dd76a0": 351, "058": [351, 356], "plot_colinear": [351, 356], "vasp_data_dir": 352, "qe_data_dir": 352, "0x000002af936e2820": 352, "654": [352, 356], "plot_compare_band": [352, 356], "sphinx_gallery_thumbnail_numb": [353, 375, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388], "0x000002af936e2bb0": 353, "express": [353, 360, 398], "therefor": [353, 360, 398, 403, 416], "0x000002af91bed670": 353, "643": [353, 356, 388, 389], "plot_noncolinear_q": [353, 356], "0x000002af91bc0280": 354, "0x000002af954d0fa0": 354, "325": [354, 356], "plot_noncolinear_vasp": [354, 356], "few": [355, 362], "0x000002af91e91070": 355, "doc": [355, 362], "default_set": [355, 362], "ini": [355, 362], "0x000002af970f8d30": 355, "0x000002af91b3d940": 355, "0x000002af94d55040": 355, "477": [355, 356], "plot_spin_polar": [355, 356], "00": [356, 363, 367, 373, 383, 389, 394, 396], "513": 356, "execut": [356, 363, 367, 373, 383, 389, 396, 398, 404], "examples_00": 356, "03": [356, 363, 392], "mb": [356, 363, 367, 373, 383, 389, 396], "dos_plot": [358, 359, 360, 361, 362], "0x000002af9710caf0": 358, "0x000002af94a22670": 358, "0x000002afa0bfd550": 358, "0x000002afa1515b50": 358, "0x000002afa1302f40": 358, "0x000002af93688640": 358, "26": [358, 363, 381, 383, 391, 392, 395], "475": [358, 363], "plot_colinear_do": [358, 363], "font_siz": [359, 388], "spin_label": 359, "stack_y_label": 359, "x_label": [359, 370], "y_label": [359, 370], "0x000002af970d16d0": 359, "0x000002af91d3fd90": 359, "0x000002afa17e3ac0": 359, "659": [359, 363], "plot_dosplot_configur": [359, 363], "0x000002af94d7b3a0": 360, "21": [360, 363, 372, 391], "748": [360, 363], "plot_noncolinear_dos_q": [360, 363], "0x000002afe7af15b0": 361, "356": [361, 363], "plot_noncolinear_dos_vasp": [361, 363], "0x000002afa1756160": 362, "0x000002afa17c2280": 362, "0x000002afa1506580": 362, "0x000002afa1756a60": 362, "0x000002af91c7a280": 362, "0x000002afa178b6d0": 362, "0x000002af94918580": 362, "047": [362, 363], "plot_spin_polarized_do": [362, 363], "58": [363, 392], "285": 363, "examples_01": 363, "bands_dir": [365, 366], "dos_dir": [365, 366], "____": [365, 366, 369, 370, 371, 372, 385, 388], "_": [365, 366, 369, 370, 371, 372, 385, 388, 412], "__": [365, 366, 369, 370, 371, 372, 385, 388], "___": [365, 366, 369, 370, 371, 372, 385, 388], "jun": [365, 366, 369, 370, 371, 372, 385, 388], "10th": [365, 366, 369, 370, 371, 372, 385, 388], "2021": [365, 366, 369, 370, 371, 372, 385, 388], "cite": [365, 366, 369, 370, 371, 372, 385, 388, 410], "uthpala": [365, 366, 369, 370, 371, 372, 385, 388, 398], "herath": [365, 366, 369, 370, 371, 372, 385, 388, 398], "pedram": [365, 366, 369, 370, 371, 372, 385, 388, 398], "tavadz": [365, 366, 369, 370, 371, 372, 385, 388, 398], "xu": [365, 366, 369, 370, 371, 372, 385, 388, 398], "he": [365, 366, 369, 370, 371, 372, 385, 388, 398], "eric": [365, 366, 369, 370, 371, 372, 385, 388, 398], "bousquet": [365, 366, 369, 370, 371, 372, 385, 388, 398], "sobhit": [365, 366, 369, 370, 371, 372, 385, 388, 398], "singh": [365, 366, 369, 370, 371, 372, 385, 388, 398], "francisco": [365, 366, 369, 370, 371, 372, 385, 388, 398], "mu\u00f1oz": [365, 366, 369, 370, 371, 372, 385, 388, 398], "aldo": [365, 366, 369, 370, 371, 372, 385, 388, 398], "romero": [365, 366, 369, 370, 371, 372, 385, 388, 398], "comput": [365, 366, 369, 370, 371, 372, 385, 388, 398], "physic": [365, 366, 369, 370, 371, 372, 385, 388, 398], "commun": [365, 366, 369, 370, 371, 372, 385, 388, 398], "251": [365, 366, 369, 370, 371, 372, 385, 388, 398], "2020": [365, 366, 369, 370, 371, 372, 385, 388, 398], "107080": [365, 366, 369, 370, 371, 372, 385, 388, 398], "rees": [365, 366, 369, 370, 371, 372, 385, 388, 398], "boucher": [365, 366, 369, 370, 371, 372, 385, 388, 398], "logan": [365, 366, 369, 370, 371, 372, 385, 388, 398], "lang": [365, 366, 369, 370, 371, 372, 385, 388, 398], "freddi": [365, 366, 369, 370, 371, 372, 385, 388, 398], "farah": [365, 366, 369, 370, 371, 372, 385, 388, 398], "417": [365, 367], "plot_bandsdosplot": [365, 367], "appear": [366, 370, 376], "ll": [366, 370, 376, 391, 392, 393, 394, 395], "adjust": [366, 370, 376, 377], "overal": 366, "423": [366, 367], "plot_bandsdosplot_configur": [366, 367], "840": 367, "examples_02": 367, "bands_do": 367, "noncolinear": [368, 373, 397, 403], "rashba": [368, 373, 397, 403, 404, 409], "comp": [369, 370, 371, 372], "rot": [369, 370, 371, 372], "trasl": [369, 370, 371, 372], "_____________________________________________________": [369, 370, 371, 372], "add_legend": [369, 370], "contact": [369, 398], "specfic": [369, 371, 375, 377, 378, 379, 380, 381, 382], "794": [369, 373], "plot_fermi2d": [369, 373], "plain_band": [370, 371, 372], "add_axes_label": 370, "no_arrow": [370, 372], "arrow_dens": [370, 371, 372], "spin_project": [370, 371, 372], "18": [370, 371, 372, 373, 391], "521": [370, 373], "plot_fermi2d_configur": [370, 373], "By": [371, 398, 410, 416], "s_z": [371, 403, 404, 409], "arrow_project": 371, "094": [371, 373], "plot_fermi2d_spin_textur": [371, 373], "paper": [372, 375, 398], "had": [372, 398, 404], "bisb": 372, "60ev": 372, "fermei": 372, "90ev": 372, "bisb_monolay": 372, "20": [372, 385, 388, 391, 392, 395, 398], "19": [372, 391, 392, 395, 396], "48": [372, 373], "727": [372, 373], "plot_rashba_spin_split": [372, 373], "32": [373, 391, 392], "137": 373, "examples_03": 373, "06": [373, 389, 396], "isovalue_gif": [374, 383, 397], "van": [374, 383, 397], "alphen": [374, 383, 397], "fequenc": [374, 383, 397], "cross_sect": [374, 383, 397], "de": [375, 398], "frequenc": [375, 392], "theoret": 375, "freuqenc": 375, "taken": [375, 398], "experiment": 375, "copper": 375, "silver": 375, "gold": 375, "haa": 375, "doi": [375, 388, 398, 410], "1098": 375, "rsta": 375, "1962": 375, "0011": 375, "frac": [375, 412], "hbar": 375, "cg": 375, "768e": 375, "statcoulomb": 375, "0e": 375, "cm": 375, "0546e": 375, "27": [375, 391, 392, 395], "erg": 375, "au": 375, "ensur": [375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 398], "screen": [375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395, 416], "off_screen": [375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 391, 392, 394, 395], "actual": [375, 376, 377, 378, 379, 380, 381, 382, 398], "plot_fermi_cross_section_box_widget": 375, "surface_opac": [375, 376], "1586": 375, "ang": 375, "1586e": 375, "365e": 375, "f_": 375, "exp": 375, "50e": 375, "1596": 375, "1596e": 375, "68e": 375, "3956": 375, "3956e": 375, "61e": 375, "85e": 375, "630": [375, 383], "plot_de_hass_van_alphen": [375, 383], "plot_fermi_surfac": [376, 380, 381, 382], "surface_cmap": [376, 381], "surface_color": 376, "surface_bands_color": 376, "surface_clim": 376, "brillouin_zone_styl": 376, "brillouin_zone_line_width": 376, "brillouin_zone_color": 376, "brillouin_zone_opac": 376, "texture_cmap": 376, "texture_color": 376, "texture_s": 376, "texture_scal": 376, "texture_opac": 376, "add_ax": 376, "x_axes_label": 376, "y_axes_label": 376, "z_axes_label": 376, "axes_label_color": 376, "axes_line_width": 376, "add_scalar_bar": 376, "scalar_bar_label": 376, "scalar_bar_ital": 376, "scalar_bar_bold": 376, "scalar_bar_title_font_s": 376, "scalar_bar_label_font_s": 376, "scalar_bar_position_x": 376, "scalar_bar_position_i": 376, "scalar_bar_color": 376, "orbit_gif_n_point": 376, "orbit_gif_step": 376, "orbit_mp4_n_point": 376, "orbit_mp4_step": 376, "plotter_offscreen": 376, "plotter_camera_po": 376, "isoslider_titl": 376, "isoslider_styl": 376, "isoslider_color": 376, "cross_section_slice_linewidth": [376, 377], "cross_section_slice_show_area": 376, "150": [376, 383], "plot_fermi3d_configur": [376, 383], "outermost": 377, "center": [377, 385, 398, 409, 412], "line_width": [377, 391, 392, 394, 395], "plot_fermi_cross_sect": 377, "2d_slice": 377, "086": [377, 383], "plot_fermi3d_cross_sect": [377, 383], "would": [378, 379, 398, 403, 404, 409, 410], "throughout": [378, 379, 398], "plot_fermi_isoslid": 378, "432": [378, 383], "plot_fermi3d_isoslid": [378, 383], "exact": [379, 398], "create_isovalue_gif": 379, "31": [379, 383, 391], "587": [379, 383], "plot_fermi3d_isovalue_gif": [379, 383], "898": [380, 383], "plot_fermi3d_plain": [380, 383], "918": [381, 383], "plot_fermi3d_spin": [381, 383], "721": [382, 383], "plot_fermi3d_spin_textur": [382, 383], "422": 383, "examples_04": 383, "08": [383, 387], "kmesh_gener": [384, 389, 397, 409], "kpath_gener": [384, 389, 397], "particularli": [385, 405, 409, 414], "command": [385, 398, 400, 405, 406], "num_grids_x": 385, "num_grids_i": 385, "add_mesh": [385, 387, 391, 392, 394, 395], "show_ax": [385, 388], "show_grid": [385, 388], "512": [385, 389], "plot_2dkmesh_gener": [385, 389], "note": [386, 393, 400, 404, 405, 407, 416], "band_gap": 386, "142": [386, 389], "plot_bandgap": [386, 389], "dir": [387, 408, 413, 415], "pv": [387, 391, 392, 394, 395], "e_fermi": 387, "ibz2fbz": [387, 408], "enectron": 387, "3375": 387, "let": [387, 391, 392, 393, 395, 404], "band_0": 387, "atom_0": 387, "orbital_5": 387, "bands_gradi": 387, "filter": [387, 404, 412], "scalar_bar_arg": 387, "band_veloc": 387, "band_spe": 387, "show_scalar_bar": [387, 391, 392, 394, 395], "harmonic_average_effective_mass": 387, "801": [387, 389], "plot_eb": [387, 389], "momentum": [388, 410], "enabl": [388, 398, 409, 410, 416], "suitabl": [388, 398], "suffici": 388, "typic": [388, 398, 414], "retriev": [388, 404], "slight": 388, "modif": [388, 395, 398], "regard": [388, 391, 392, 398, 409, 411], "seek": 388, "seekpath": [388, 400], "hinuma": 388, "et": [388, 410], "al": [388, 410], "pizzi": 388, "kumagai": 388, "oba": 388, "tanaka": 388, "diagram": 388, "crystallographi": 388, "scienc": [388, 398], "128": 388, "2017": 388, "140": 388, "184": 388, "1016": [388, 398], "commatsci": 388, "2016": 388, "k_path": 388, "k_label": 388, "ey": 388, "unique_label": 388, "unique_kpath": 388, "enumer": [388, 391, 393], "append": [388, 393], "ik": 388, "len": [388, 391], "add_lin": 388, "els": 388, "add_point_label": [388, 391, 392, 394, 395], "point_color": 388, "text_color": 388, "always_vis": [388, 391, 392, 394, 395], "view_yz": 388, "plot_kpath_gener": [388, 389], "099": 389, "examples_05": 389, "04": [389, 393], "cluster": [390, 392, 396, 397], "bi2se3": [390, 396, 397], "slab": [390, 396, 397], "defect": [390, 393, 396, 397, 398], "analyz": [390, 396, 397, 409], "radial": [390, 396, 397], "distribut": [390, 396, 397, 398, 399], "rdf": [390, 396, 397], "substitut": [390, 396, 397], "quintupl": 391, "ql": 391, "itertool": [391, 392, 393, 394, 395], "def": [391, 392, 394, 395], "create_gif": [391, 392, 394, 395], "unit_cel": [391, 392, 394, 395], "save_fil": [391, 392, 394, 395], "add_titl": [391, 392, 394, 395], "delaunay_3d": [391, 392, 394, 395], "extract_feature_edg": [391, 392, 394, 395], "render_lines_as_tub": [391, 392, 394, 395], "show_point": [391, 392, 394, 395], "generate_orbital_path": [391, 392, 394, 395], "n_point": [391, 392, 394, 395], "open_gif": [391, 392, 394, 395], "orbit_on_path": [391, 392, 394, 395], "write_fram": [391, 392, 394, 395], "viewup": [391, 392, 394, 395], "close": [391, 392, 394, 395, 398, 410], "clusters_map": 391, "i_atom": 391, "clusters_arrai": 391, "23": [391, 395], "24": 391, "28": [391, 395, 398], "29": [391, 392, 395, 398], "33": [391, 392], "34": 391, "atoms_befor": [391, 392, 394, 395], "labels_befor": [391, 392, 394, 395], "zip": [391, 392, 393, 394, 395, 397], "labels_aft": [391, 392, 394, 395], "unit_cell_comb": [391, 392, 394, 395], "repeat": [391, 392, 394, 395, 412], "comb": [391, 392, 394, 395], "unit_cell_befor": [391, 392, 395], "atoms_before_clust": 391, "atoms_after_clust": 391, "615": [391, 396], "plot_clusters_pyposcar": [391, 396], "agnr": [392, 393, 395], "finddefect": 392, "all_defect": 392, "nthe": 392, "write_defect": 392, "inspect": 392, "subtitut": 392, "0d": 392, "agrn": 392, "edg": 392, "tmp_a": [392, 395], "atoms_aft": [392, 394, 395], "unit_cell_aft": [392, 395], "atoms_before_defect_find": 392, "atoms_after_defect_find": 392, "localmin": 392, "find_forgein_atom": 392, "delimit": 392, "minima": 392, "maxima": 392, "less": 392, "52": [392, 412], "53": 392, "54": [392, 416], "55": 392, "56": 392, "57": 392, "59": 392, "60": [392, 395, 398, 409, 411], "62": 392, "63": 392, "64": [392, 395], "65": [392, 395], "nearest_neighbors_environ": 392, "environ": [392, 393], "cccc": 392, "ccch": 392, "cbcc": 392, "cccn": 392, "hc": 392, "bccn": 392, "nbcc": 392, "abund": 392, "35": 392, "51": 392, "782": [392, 396], "plot_finding_defects_pyposcar": [392, 396], "insight": 393, "probabl": 393, "certain": [393, 398, 403, 404, 409], "anoth": [393, 407, 410], "understand": 393, "gridspec": 393, "my_rdf": 393, "thresholdsp": 393, "neighbor_thresholdsp": 393, "spcurv": 393, "kde_curvesp": 393, "share": [393, 398], "domain": [393, 398], "kde_spac": 393, "cutoff": 393, "inter": 393, "meaaningful": 393, "defen": 393, "larg": [393, 405, 411], "databas": 393, "neighborsclass": 393, "latticeutil": [393, 395], "estimatemaxbonddist": 393, "neighbor_threshold": 393, "d_max": 393, "9500000000000002": 393, "6500000000000001": 393, "95": 393, "4772259999999975": 393, "height_ratio": 393, "ax1": 393, "ax2": 393, "ax3": 393, "kde_curv": 393, "set_titl": [393, 404], "cc": 393, "cycl": 393, "next": [393, 398, 410], "flatten": 393, "histogram": 393, "distance_matrix": 393, "100": 393, "patch": 393, "hist": 393, "edgecolor": 393, "alpha": [393, 412, 415], "set_xlabel": 393, "tolist": 393, "plotlabel": 393, "var_cutoff": 393, "leg1": 393, "loc": 393, "upper": 393, "left": [393, 410, 412], "data_cutoff": 393, "leg2": 393, "color_label": 393, "add_artist": 393, "tight_layout": 393, "7725483399593904": 393, "8348023074035522": 393, "9434419177103412": 393, "7744469683442248": 393, "3036753236814713": 393, "4123149339882604": 393, "2433199846221439": 393, "0520815280171307": 393, "883086578651014": 393, "7140916292848973": 393, "656": [393, 396], "plot_rdf_cutoff_pyposcar": [393, 396], "boron": 394, "nitrogen": 394, "yb6": 394, "nelement": 394, "nposit": 394, "098": 394, "1989": 394, "8011": 394, "nchang": 394, "new_po": 394, "border": 394, "791": [394, 396], "plot_subsitution_pyposcar": [394, 396], "sever": [395, 397, 410], "poscar_util": 395, "9agnr": 395, "much": 395, "shrink": [395, 416], "smaller": [395, 411], "atoms_before_sc": 395, "atoms_after_sc": 395, "3878": 395, "71": 395, "726": 395, "9087": 395, "nnow": 395, "3x1x1": 395, "311": 395, "atoms_before_supercel": 395, "atoms_after_supercel": 395, "nfinal": 395, "respect": [395, 398, 403, 404, 409, 411, 416], "change_el": 395, "without": [395, 398, 407, 410], "atoms_before_defect": 395, "atoms_after_defect": 395, "nn": 395, "nn_list": 395, "323": [395, 396], "plot_utils_pyposcar": [395, 396], "41": 396, "167": 396, "examples_06": 396, "examples_python": 397, "examples_jupyt": 397, "open": [398, 401, 402, 410], "head": [398, 399], "scientif": [398, 399], "visibl": [398, 399], "bibtex": 398, "articl": [398, 410], "herath2020107080": 398, "journal": [398, 410], "year": [398, 410], "issn": 398, "0010": 398, "4655": 398, "cpc": 398, "2019": [398, 410], "url": [398, 410], "www": 398, "sciencedirect": 398, "pii": 398, "s0010465519303935": 398, "condens": 398, "matter": 398, "who": 398, "made": 398, "substanti": 398, "concept": 398, "design": 398, "softwar": [398, 410], "creation": 398, "draft": 398, "substant": 398, "revis": 398, "global": 398, "effort": 398, "team": 398, "thank": 398, "jan": 398, "janssen": 398, "litong": 398, "jiang": 398, "nichola": 398, "pike": 398, "don": [398, 399], "munoz": 398, "departamento": 398, "isica": 398, "facultad": 398, "ciencia": 398, "universidad": 398, "chile": 398, "santiago": 398, "nanosci": 398, "nanotechnologi": 398, "cedenna": 398, "depart": 398, "astronomi": 398, "west": 398, "virginia": 398, "univers": 398, "morgantown": 398, "wv": 398, "26505": 398, "6315": 398, "usa": 398, "rutger": 398, "piscatawai": 398, "nj": 398, "08854": 398, "physiqu": 398, "eoriqu": 398, "mat": 398, "eriaux": 398, "cesam": 398, "universit": 398, "eg": 398, "4000": 398, "sart": 398, "tilman": 398, "belgium": 398, "gnu": 398, "public": [398, 399, 410], "june": 398, "2007": 398, "copyright": 398, "free": 398, "foundat": 398, "inc": 398, "fsf": 398, "everyon": 398, "permit": 398, "verbatim": 398, "document": [398, 407], "preambl": 398, "copyleft": 398, "kind": 398, "practic": 398, "awai": 398, "freedom": 398, "contrast": 398, "guarante": 398, "releas": 398, "speak": 398, "price": 398, "wish": [398, 404], "receiv": 398, "piec": 398, "know": 398, "thing": 398, "protect": 398, "prevent": [398, 414], "deni": 398, "surrend": 398, "respons": 398, "grati": 398, "fee": 398, "recipi": 398, "And": 398, "gpl": 398, "assert": 398, "offer": 398, "give": [398, 409, 412], "legal": 398, "permiss": [398, 414], "clearli": 398, "warranti": 398, "sake": 398, "mark": 398, "erron": [398, 414], "previou": 398, "devic": 398, "although": 398, "manufactur": 398, "fundament": 398, "incompat": 398, "aim": 398, "systemat": 398, "pattern": 398, "abus": 398, "individu": [398, 404], "unaccept": 398, "prohibit": 398, "those": 398, "aris": [398, 414], "stand": 398, "readi": 398, "provis": 398, "futur": [398, 404], "threaten": 398, "constantli": 398, "patent": 398, "restrict": 398, "purpos": [398, 416], "avoid": 398, "danger": 398, "could": [398, 404, 409, 411], "proprietari": 398, "assur": 398, "cannot": 398, "AND": 398, "definit": [398, 410], "law": 398, "semiconductor": 398, "license": 398, "address": 398, "organ": 398, "adapt": 398, "fashion": 398, "earlier": 398, "unmodifi": 398, "propag": 398, "anyth": 398, "directli": 398, "secondarili": 398, "liabl": 398, "infring": 398, "applic": 398, "except": 398, "privat": 398, "countri": 398, "activ": 398, "convei": 398, "parti": 398, "mere": 398, "network": 398, "transfer": 398, "appropri": 398, "notic": 398, "extent": 398, "promin": 398, "tell": 398, "menu": 398, "meet": 398, "criterion": 398, "standard": 398, "offici": 398, "recogn": 398, "bodi": 398, "languag": 398, "wide": 398, "among": 398, "serv": 398, "context": 398, "essenti": [398, 408], "kernel": 398, "compil": 398, "produc": [398, 416], "interpret": 398, "howev": [398, 404, 410], "tool": 398, "associ": 398, "link": [398, 407], "subprogram": 398, "intim": 398, "flow": 398, "regener": 398, "basic": [398, 401, 402, 404, 407], "grant": 398, "irrevoc": 398, "met": 398, "affirm": 398, "unlimit": 398, "constitut": 398, "acknowledg": [398, 399], "fair": 398, "long": [398, 404], "otherwis": 398, "sole": 398, "exclus": 398, "facil": 398, "compli": 398, "thu": [398, 403], "behalf": 398, "outsid": 398, "relationship": 398, "circumst": 398, "sublicens": 398, "unnecessari": 398, "anti": 398, "circumvent": 398, "No": [398, 404], "shall": 398, "deem": 398, "technolog": 398, "measur": 398, "fulfil": 398, "oblig": 398, "wipo": 398, "treati": 398, "adopt": 398, "decemb": 398, "1996": 398, "waiv": 398, "power": 398, "forbid": 398, "exercis": 398, "disclaim": 398, "intent": 398, "against": 398, "medium": 398, "conspicu": 398, "publish": [398, 410], "intact": 398, "absenc": 398, "date": [398, 400, 410], "entir": 398, "anyon": 398, "possess": 398, "regardless": 398, "natur": 398, "aggreg": 398, "beyond": [398, 404, 407], "inclus": 398, "caus": 398, "machin": 398, "readabl": 398, "embodi": 398, "accompani": 398, "durabl": 398, "customarili": 398, "interchang": 398, "valid": 398, "least": 398, "three": [398, 403, 404, 405, 410, 411], "spare": 398, "model": 398, "reason": [398, 404], "cost": 398, "server": 398, "altern": 398, "occasion": 398, "noncommerci": 398, "subsect": 398, "6b": 398, "maintain": 398, "clear": [398, 406], "sai": 398, "host": 398, "satisfi": 398, "peer": 398, "transmiss": 398, "6d": 398, "portion": 398, "whose": 398, "exclud": 398, "consum": 398, "tangibl": 398, "person": 398, "famili": 398, "household": 398, "sold": 398, "incorpor": [398, 404], "dwell": 398, "doubt": 398, "resolv": [398, 403, 404, 407], "favor": 398, "coverag": 398, "common": 398, "statu": 398, "commerci": 398, "industri": 398, "unless": 398, "signific": 398, "procedur": 398, "suffic": 398, "continu": [398, 410], "interf": 398, "been": [398, 410], "transact": 398, "perpetu": 398, "character": 398, "neither": 398, "nor": 398, "abil": 398, "rom": 398, "servic": 398, "itself": [398, 399], "advers": 398, "affect": 398, "violat": 398, "rule": 398, "protocol": 398, "across": [398, 412], "publicli": 398, "password": 398, "unpack": 398, "supplement": 398, "though": 398, "govern": 398, "own": 398, "notwithstand": 398, "holder": 398, "liabil": 398, "preserv": 398, "misrepresent": 398, "licensor": 398, "declin": 398, "trademark": 398, "trade": 398, "indemnif": 398, "contractu": 398, "assumpt": 398, "impos": 398, "relicens": 398, "surviv": 398, "statement": 398, "termin": [398, 400], "expressli": 398, "void": 398, "paragraph": 398, "ceas": 398, "reinstat": 398, "provision": 398, "until": 398, "perman": 398, "fail": 398, "notifi": 398, "dai": 398, "cessat": 398, "moreov": 398, "cure": 398, "receipt": 398, "qualifi": 398, "Not": 398, "ancillari": 398, "consequ": 398, "likewis": 398, "action": [398, 410], "downstream": 398, "subject": 398, "complianc": 398, "entiti": 398, "asset": 398, "subdivid": 398, "whatev": 398, "predecessor": 398, "plu": 398, "royalti": 398, "litig": 398, "claim": 398, "counterclaim": 398, "lawsuit": 398, "alleg": 398, "sell": 398, "sale": 398, "acquir": 398, "hereaft": 398, "manner": [398, 404], "worldwid": 398, "agreement": 398, "commit": 398, "denomin": 398, "coven": 398, "sue": 398, "knowingli": 398, "reli": 398, "readili": 398, "arrang": [398, 403, 404], "depriv": 398, "yourself": 398, "benefit": 398, "knowledg": 398, "identifi": [398, 403, 404, 409], "believ": 398, "pursuant": 398, "procur": 398, "convey": 398, "discriminatori": 398, "scope": 398, "busi": 398, "payment": 398, "primarili": 398, "enter": 398, "march": 398, "constru": 398, "impli": 398, "defens": 398, "court": 398, "contradict": 398, "excus": 398, "simultan": 398, "pertin": 398, "agre": 398, "collect": [398, 410], "whom": 398, "refrain": 398, "affero": 398, "concern": [398, 410], "Such": 398, "spirit": 398, "distinguish": 398, "later": 398, "ever": 398, "proxi": 398, "THERE": 398, "NO": 398, "FOR": 398, "THE": 398, "TO": 398, "BY": 398, "IN": 398, "OR": 398, "AS": 398, "OF": 398, "BUT": 398, "NOT": 398, "merchant": 398, "fit": 398, "risk": 398, "qualiti": 398, "WITH": 398, "prove": 398, "event": 398, "WILL": 398, "BE": 398, "damag": 398, "incident": 398, "consequenti": 398, "inabl": 398, "loss": 398, "BEING": 398, "sustain": 398, "failur": 398, "even": [398, 404], "IF": 398, "SUCH": 398, "advis": 398, "review": 398, "approxim": 398, "absolut": 398, "waiver": 398, "civil": 398, "greatest": 398, "best": 398, "achiev": [398, 414], "redistribut": 398, "safest": 398, "pointer": 398, "brief": 398, "idea": 398, "hope": 398, "mail": 398, "short": 398, "welcom": 398, "hypothet": 398, "Of": 398, "cours": 398, "gui": 398, "employ": 398, "programm": 398, "school": 398, "sign": [398, 414], "subroutin": 398, "lesser": 398, "philosophi": 398, "why": 398, "lgpl": 398, "herein": 398, "subclass": 398, "minim": 398, "isol": 398, "reproduc": 398, "bound": 398, "suppli": [398, 404], "good": [398, 410], "faith": 398, "meaning": [398, 406], "header": 398, "choic": [398, 407, 409], "layout": 398, "accessor": 398, "macro": 398, "inlin": 398, "templat": 398, "ten": 398, "fewer": 398, "engin": 398, "dure": [398, 414], "recombin": 398, "relink": 398, "mechan": 398, "properli": 398, "compat": 398, "4d0": 398, "4d1": 398, "uncombin": 398, "prerequisit": 399, "yet": 399, "simplest": 399, "recommend": [399, 403, 404, 414], "anaconda": 399, "conda": 399, "forg": [399, 400], "pip": 399, "via": 399, "pypi": 399, "instruct": [399, 410], "author": [399, 410], "citat": [399, 410], "elsevi": 399, "ase": 400, "romerogroup": 400, "robust": [401, 402], "manag": [401, 402, 408, 413, 415], "kohn": [401, 402, 412], "sham": [401, 402, 412], "That": [401, 402], "multitud": [401, 402], "partial": [401, 402], "stll": 402, "convent": [403, 404, 407], "s_x": [403, 404, 409, 411], "s_y": [403, 404, 409], "st": [403, 404, 409], "perpendicular": [403, 404, 409], "k_x": [403, 404, 409], "k_y": [403, 404, 409], "seismic": [403, 404], "ion": [403, 404, 411, 412], "five": [403, 404], "_3": [403, 404, 407], "correl": [403, 404], "strongli": [403, 404], "jm": 403, "y_": [403, 404, 412], "site": [403, 404, 412], "logic": [403, 404], "probe": [403, 404], "queri": [403, 404], "portrai": 404, "fine": [404, 409], "usag": [404, 405, 406, 407, 409, 411, 414, 416], "39": 404, "79": 404, "119": 404, "159": 404, "syntax": 404, "bands_up": 404, "block": [404, 412], "meant": 404, "suit": 404, "four": 404, "convers": 404, "199": [404, 413, 416], "239": 404, "279": 404, "319": 404, "scriptbandsplot": 404, "hexagon": [405, 416], "procar_g": 405, "procar_k": 405, "procar_m": 405, "seper": 405, "scriptcat": 405, "acheiv": 406, "elk_dir": 406, "vasp_dir": [406, 407], "srvo_3": 406, "veri": [407, 411], "invlov": 407, "exmpla": 407, "api": 407, "match": 407, "aregumnet": 407, "button": 407, "did": 407, "defalut": 407, "switch": [407, 410], "back": 407, "dos_plain_v": 407, "familiar": 407, "lawngreen": 407, "royalblu": 407, "stach": 407, "variat": 407, "central": 408, "known": [408, 410, 413, 415], "path_to_calcul": [408, 413, 415], "k1": 408, "k2": 408, "k3": 408, "nprincip": 408, "prinicip": 408, "is_non_collinear": 408, "calcuul": 408, "kpoints_cartesian": 408, "kpoints_reduc": 408, "sometim": 408, "infom": 408, "meshgrid": 408, "index_mesh": 408, "kpoints_mesh": 408, "cartesian_mesh": 408, "bands_mesh": 408, "projected_mesh": 408, "project_phase_mesh": 408, "weights_mesh": 408, "bands_gradient_mesh": 408, "bands_hessian_mesh": 408, "ebs_sum": 408, "recov": 408, "broullin": 408, "dresselhau": 409, "topologi": 409, "examin": 409, "lifshitz": 409, "transit": 409, "e_": 409, "noarrow": 409, "heat": 409, "usual": 409, "fault": 409, "solut": 409, "90": 409, "degre": 409, "mostli": 409, "220": 409, "Be": 409, "care": 409, "scriptfermi2d": 409, "extern": 410, "phonon": 410, "divid": 410, "sub": 410, "monkhorst": 410, "pack": 410, "isym": 410, "focus": 410, "polygon": 410, "smooth": 410, "cube": 410, "999999": 410, "000001": 410, "triangl": 410, "assign": 410, "aspect": 410, "handel": 410, "isosurfcac": 410, "fermisurfcae3d": 410, "eigen": 410, "bottom": 410, "amaz": 410, "pyvista_doc": 410, "trimesh_doc": 410, "trimesh_cit": 410, "dawson": 410, "haggerti": 410, "trimsh": 410, "sullivan2019pyvista": 410, "21105": 410, "joss": 410, "01450": 410, "month": 410, "37": 410, "1450": 410, "bane": 410, "sullivan": 410, "alexand": 410, "kaszynski": 410, "streamlin": 410, "toolkit": 410, "vtk": 410, "linux": 410, "mac": 410, "zoom": 410, "isometr": 410, "reset": 410, "click": 410, "middl": 410, "pan": 410, "scene": 410, "cmd": 410, "ctrl": 410, "mous": 410, "wheel": 410, "ctl": 410, "screenhsot": 410, "backgroundplott": 410, "pick": 410, "decreas": 410, "scriptfermi3d": 410, "simpler": 411, "subset": 411, "heterostructur": 411, "enorm": 411, "consider": 411, "faster": 411, "70": 411, "far": 411, "band50": 411, "column": [411, 412], "filtered_sp": 411, "p_x": 411, "especi": 411, "hybrid": 411, "filtered_kpoint": 411, "filtered_spin": 411, "filter_atom": 411, "atom_typ": 411, "scriptfilt": 411, "orbital_nam": 411, "human_atom": 411, "overview": 412, "guidanc": 412, "conduct": 412, "prep": 412, "commonli": 412, "decompos": 412, "224": 412, "12500000": 412, "65660295": 412, "occ": 412, "052": 412, "000": 412, "nion": 412, "report": 412, "spheric": 412, "sphere": 412, "radiu": 412, "phi_": 412, "nk": 412, "sum_": 412, "mu": 412, "nu": 412, "sigma_": 412, "psi_": 412, "sigma": 412, "pauli": 412, "spinor": 412, "bmatrix": 412, "keyboard": 412, "shortcut": 412, "kapth": 413, "nsegment": 413, "belong": 413, "99": 413, "149": 413, "249": 413, "299": 413, "8660254": 413, "70710678": 413, "4330127": 413, "8291562": 413, "ill": 414, "lack": 414, "neg": 414, "5000000": 414, "scriptrepair": 414, "beta": 415, "nspeci": 415, "atomic_numb": 415, "lattice_corn": 415, "cell_convex_hul": 415, "get_space_group_numb": 415, "get_space_group_intern": 415, "get_wyckoff_posit": 415, "get_spglib_symmetry_dataset": 415, "often": 416, "primit": 416, "becom": 416, "quit": 416, "sophist": 416, "fold": 416, "difficult": 416, "scheme": 416, "fat": 416, "proport": 416, "2x2x2": 416, "doubl": 416, "fname": 416, "diag": 416, "shift_efermi": 416, "86": 416, "110": 416, "147": 416, "165": 416, "print_kpt": 416, "show_band": 416, "savetab": 416, "csv": 416, "unfolded_band": 416, "scriptunfold": 416, "elkin": 416, "unfold_mod": 416, "unfold_mask": 416, "old": 416, "unfold_result": 416, "unfol": 416}, "objects": {"pyprocar.core": [[6, 0, 1, "", "BrillouinZone"], [9, 0, 1, "", "DensityOfStates"], [18, 0, 1, "", "ElectronicBandStructure"], [61, 0, 1, "", "FermiSurface"], [70, 0, 1, "", "FermiSurface3D"], [78, 0, 1, "", "Isosurface"], [85, 0, 1, "", "KPath"], [94, 0, 1, "", "Structure"], [120, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[7, 1, 1, "", "__init__"], [8, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[10, 1, 1, "", "__init__"], [11, 1, 1, "", "coupled_to_uncoupled_basis"], [12, 1, 1, "", "dos_sum"], [13, 1, 1, "", "get_current_basis"], [14, 2, 1, "", "is_non_collinear"], [15, 2, 1, "", "n_dos"], [16, 2, 1, "", "n_energies"], [17, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[19, 1, 1, "", "__init__"], [20, 2, 1, "", "bands_gradient"], [21, 2, 1, "", "bands_gradient_mesh"], [22, 2, 1, "", "bands_hessian"], [23, 2, 1, "", "bands_hessian_mesh"], [24, 2, 1, "", "bands_mesh"], [25, 1, 1, "", "calculate_scalar_gradient"], [26, 1, 1, "", "calculate_scalar_integral"], [27, 1, 1, "", "create_nd_mesh"], [28, 1, 1, "", "create_scaler_mesh"], [29, 1, 1, "", "create_vector_mesh"], [30, 1, 1, "", "ebs_sum"], [31, 2, 1, "", "fermi_speed"], [32, 2, 1, "", "fermi_speed_mesh"], [33, 2, 1, "", "fermi_velocity"], [34, 2, 1, "", "fermi_velocity_mesh"], [35, 2, 1, "", "harmonic_average_effective_mass"], [36, 2, 1, "", "harmonic_average_effective_mass_mesh"], [37, 1, 1, "", "ibz2fbz"], [38, 2, 1, "", "index_mesh"], [39, 1, 1, "", "interpolate_mesh_grid"], [40, 2, 1, "", "is_non_collinear"], [41, 2, 1, "", "kpoints_cartesian"], [42, 2, 1, "", "kpoints_cartesian_mesh"], [43, 2, 1, "", "kpoints_mesh"], [44, 2, 1, "", "kpoints_reduced"], [45, 1, 1, "", "mesh_to_array"], [46, 2, 1, "", "n_kx"], [47, 2, 1, "", "n_ky"], [48, 2, 1, "", "n_kz"], [49, 2, 1, "", "natoms"], [50, 2, 1, "", "nbands"], [51, 2, 1, "", "nkpoints"], [52, 2, 1, "", "norbitals"], [53, 2, 1, "", "nprincipals"], [54, 2, 1, "", "nspins"], [55, 1, 1, "", "plot_kpoints"], [56, 2, 1, "", "projected_mesh"], [57, 2, 1, "", "projected_phase_mesh"], [58, 1, 1, "", "ravel_array"], [59, 1, 1, "", "unfold"], [60, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[62, 1, 1, "", "__init__"], [63, 1, 1, "", "add_axes_labels"], [64, 1, 1, "", "add_legend"], [65, 1, 1, "", "find_energy"], [66, 1, 1, "", "plot"], [67, 1, 1, "", "savefig"], [68, 1, 1, "", "show"], [69, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "extend_surface"], [73, 1, 1, "", "project_atomic_projections"], [74, 1, 1, "", "project_fermi_speed"], [75, 1, 1, "", "project_fermi_velocity"], [76, 1, 1, "", "project_harmonic_effective_mass"], [77, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[79, 1, 1, "", "__init__"], [80, 2, 1, "", "dxyz"], [81, 2, 1, "", "nX"], [82, 2, 1, "", "nY"], [83, 2, 1, "", "nZ"], [84, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "get_kpoints_transformed"], [88, 1, 1, "", "get_optimized_kpoints_transformed"], [89, 2, 1, "", "kdistances"], [90, 2, 1, "", "nsegments"], [91, 2, 1, "", "tick_names"], [92, 2, 1, "", "tick_positions"], [93, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[95, 1, 1, "", "__init__"], [96, 2, 1, "", "a"], [97, 2, 1, "", "alpha"], [98, 2, 1, "", "atomic_numbers"], [99, 2, 1, "", "b"], [100, 2, 1, "", "beta"], [101, 2, 1, "", "c"], [102, 2, 1, "", "cell_convex_hull"], [103, 2, 1, "", "density"], [104, 2, 1, "", "gamma"], [105, 1, 1, "", "get_space_group_international"], [106, 1, 1, "", "get_space_group_number"], [107, 1, 1, "", "get_spglib_symmetry_dataset"], [108, 1, 1, "", "get_wyckoff_positions"], [109, 1, 1, "", "is_point_inside"], [110, 2, 1, "", "lattice_corners"], [111, 2, 1, "", "masses"], [112, 2, 1, "", "natoms"], [113, 2, 1, "", "nspecies"], [114, 1, 1, "", "plot_cell_convex_hull"], [115, 2, 1, "", "reciprocal_lattice"], [116, 2, 1, "", "species"], [117, 1, 1, "", "supercell"], [118, 1, 1, "", "transform"], [119, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[121, 1, 1, "", "__init__"], [122, 2, 1, "", "centers"], [123, 1, 1, "", "export"], [124, 2, 1, "", "faces_array"], [125, 1, 1, "", "set_color_with_cmap"], [126, 1, 1, "", "set_scalars"], [127, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[139, 0, 1, "", "AbinitKpoints"], [141, 0, 1, "", "AbinitProcar"], [143, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[140, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[142, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[144, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[145, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[148, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[149, 1, 1, "", "__init__"], [150, 2, 1, "", "dos"], [151, 1, 1, "", "dos_parametric"], [152, 2, 1, "", "dos_projected"], [153, 2, 1, "", "dos_to_dict"], [154, 2, 1, "", "dos_total"], [155, 2, 1, "", "final_structure"], [156, 2, 1, "", "initial_structure"], [157, 1, 1, "", "parse_structure"], [158, 2, 1, "", "species"], [159, 2, 1, "", "structure"], [160, 2, 1, "", "structures"]], "pyprocar.io.qe": [[161, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[162, 1, 1, "", "__init__"], [163, 2, 1, "", "final_structure"], [164, 1, 1, "", "getKpointLabels"], [165, 2, 1, "", "initial_structure"], [166, 1, 1, "", "kpoints_cart"], [167, 2, 1, "", "species"], [168, 2, 1, "", "structure"], [169, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[170, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[171, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[172, 0, 1, "", "Kpoints"], [174, 0, 1, "", "Outcar"], [180, 0, 1, "", "Poscar"], [182, 0, 1, "", "Procar"], [188, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[173, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[175, 1, 1, "", "__init__"], [176, 2, 1, "", "efermi"], [174, 3, 1, "", "file_str"], [174, 3, 1, "", "filename"], [177, 1, 1, "", "get_symmetry_operations"], [178, 2, 1, "", "reciprocal_lattice"], [179, 2, 1, "", "rotations"], [174, 3, 1, "", "variables"]], "pyprocar.io.vasp.Poscar": [[181, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[183, 1, 1, "", "__init__"], [184, 2, 1, "", "kpoints_cartesian"], [185, 2, 1, "", "kpoints_reduced"], [186, 1, 1, "", "repair"], [187, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[189, 1, 1, "", "__init__"], [190, 2, 1, "", "bands"], [191, 2, 1, "", "bands_projected"], [192, 1, 1, "", "conv"], [193, 2, 1, "", "convergence"], [194, 2, 1, "", "convergence_electronic"], [195, 2, 1, "", "convergence_ionic"], [196, 2, 1, "", "dos"], [197, 2, 1, "", "dos_projected"], [198, 2, 1, "", "dos_to_dict"], [199, 2, 1, "", "dos_total"], [200, 2, 1, "", "energies"], [201, 2, 1, "", "energy"], [202, 2, 1, "", "fermi"], [203, 2, 1, "", "final_structure"], [204, 2, 1, "", "forces"], [205, 1, 1, "", "get_general"], [206, 1, 1, "", "get_params"], [207, 1, 1, "", "get_scstep"], [208, 1, 1, "", "get_set"], [209, 1, 1, "", "get_structure"], [210, 1, 1, "", "get_varray"], [211, 2, 1, "", "incar"], [212, 2, 1, "", "initial_structure"], [213, 2, 1, "", "is_finished"], [214, 2, 1, "", "iteration_data"], [215, 2, 1, "", "kpoints"], [216, 2, 1, "", "kpoints_list"], [217, 2, 1, "", "last_energy"], [218, 1, 1, "", "parse_vasprun"], [219, 2, 1, "", "potcar_info"], [220, 1, 1, "", "read"], [221, 2, 1, "", "species"], [222, 2, 1, "", "structure"], [223, 2, 1, "", "structures"], [224, 1, 1, "", "text_to_bool"], [225, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[233, 0, 1, "", "DOSPlot"], [253, 0, 1, "", "EBSPlot"], [273, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "draw_fermi"], [236, 1, 1, "", "grid"], [237, 1, 1, "", "legend"], [238, 1, 1, "", "plot_dos"], [239, 1, 1, "", "plot_parametric"], [240, 1, 1, "", "plot_parametric_line"], [241, 1, 1, "", "plot_stack"], [242, 1, 1, "", "plot_stack_orbitals"], [243, 1, 1, "", "plot_stack_species"], [244, 1, 1, "", "save"], [245, 1, 1, "", "set_xlabel"], [246, 1, 1, "", "set_xlim"], [247, 1, 1, "", "set_xticks"], [248, 1, 1, "", "set_ylabel"], [249, 1, 1, "", "set_ylim"], [250, 1, 1, "", "set_yticks"], [251, 1, 1, "", "show"], [252, 1, 1, "", "update_config"]], "pyprocar.plotter.EBSPlot": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "draw_fermi"], [256, 1, 1, "", "grid"], [257, 1, 1, "", "legend"], [258, 1, 1, "", "plot_atomic_levels"], [259, 1, 1, "", "plot_bands"], [260, 1, 1, "", "plot_parameteric"], [261, 1, 1, "", "plot_parameteric_overlay"], [262, 1, 1, "", "plot_scatter"], [263, 1, 1, "", "save"], [264, 1, 1, "", "set_title"], [265, 1, 1, "", "set_xlabel"], [266, 1, 1, "", "set_xlim"], [267, 1, 1, "", "set_xticks"], [268, 1, 1, "", "set_ylabel"], [269, 1, 1, "", "set_ylim"], [270, 1, 1, "", "set_yticks"], [271, 1, 1, "", "show"], [272, 1, 1, "", "update_config"]], "pyprocar.plotter.ProcarPlot": [[274, 1, 1, "", "__init__"], [275, 1, 1, "", "atomicPlot"], [276, 1, 1, "", "parametricPlot"], [277, 1, 1, "", "plotBands"], [278, 1, 1, "", "scatterPlot"]], "pyprocar.pyposcar": [[283, 0, 1, "", "Poscar"], [291, 4, 1, "", "poscarDiff"], [292, 0, 1, "", "poscar_modify"], [302, 0, 1, "", "poscar_supercell"]], "pyprocar.pyposcar.Poscar": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "add"], [286, 1, 1, "", "parse"], [287, 1, 1, "", "remove"], [288, 1, 1, "", "sort"], [289, 1, 1, "", "write"], [290, 1, 1, "", "xyz"]], "pyprocar.pyposcar.poscar_modify": [[293, 1, 1, "", "__init__"], [294, 1, 1, "", "add"], [295, 1, 1, "", "change_elements"], [296, 1, 1, "", "pos_multiply"], [297, 1, 1, "", "pos_sum"], [298, 1, 1, "", "remove"], [299, 1, 1, "", "scale_lattice"], [300, 1, 1, "", "shift"], [301, 1, 1, "", "write"]], "pyprocar.pyposcar.poscar_supercell": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "supercell"], [305, 1, 1, "", "write"]], "pyprocar": [[407, 5, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[309, 0, 1, "", "FermiHandler"], [317, 4, 1, "", "bandgap"], [318, 4, 1, "", "bandsdosplot"], [319, 4, 1, "", "bandsplot"], [320, 4, 1, "", "bandsplot_2d"], [321, 4, 1, "", "cat"], [322, 4, 1, "", "dosplot"], [323, 4, 1, "", "fermi2D"], [324, 4, 1, "", "fermi3D"], [325, 4, 1, "", "generate2dkmesh"], [326, 4, 1, "", "kpath"], [327, 4, 1, "", "repair"], [404, 5, 0, "-", "scriptBandsplot"], [405, 5, 0, "-", "scriptCat"], [409, 5, 0, "-", "scriptFermi2D"], [410, 5, 0, "-", "scriptFermi3D"], [411, 5, 0, "-", "scriptFilter"], [414, 5, 0, "-", "scriptRepair"], [416, 5, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "create_isovalue_gif"], [312, 1, 1, "", "plot_fermi_cross_section"], [313, 1, 1, "", "plot_fermi_cross_section_box_widget"], [314, 1, 1, "", "plot_fermi_isoslider"], [315, 1, 1, "", "plot_fermi_surface"], [316, 1, 1, "", "print_default_settings"]], "pyprocar.scripts.scriptBandsplot": [[404, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[405, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[409, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[410, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[411, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[414, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[416, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"band": [0, 1, 190, 345, 347, 348, 351, 352, 353, 354, 355, 364, 369, 371, 387, 397, 404, 406, 408, 416], "structur": [0, 1, 94, 136, 159, 160, 168, 169, 222, 223, 345, 347, 348, 351, 352, 353, 354, 355, 394, 397, 404, 408, 415], "plot": [0, 1, 2, 3, 4, 66, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 385, 388, 397, 404, 409, 416], "option": [0, 1, 2, 3, 4], "spin_color": [0, 2, 4], "color": [0, 2, 3, 371], "cmap": [0, 2, 3], "clim": [0, 2, 3], "fermi_color": [0, 2], "fermi_linestyl": [0, 2], "fermi_linewidth": [0, 2], "grid": [0, 2, 236, 256], "grid_axi": [0, 2], "grid_color": [0, 2], "grid_linestyl": [0, 2], "grid_linewidth": [0, 2], "grid_which": [0, 2], "label": 0, "legend": [0, 2, 237, 257], "linestyl": [0, 2, 3], "linewidth": [0, 2, 3], "marker": [0, 2, 3], "markers": [0, 2], "opac": [0, 2], "plot_color_bar": [0, 2, 3], "savefig": [0, 2, 67], "titl": [0, 2], "weighted_color": [0, 2], "weighted_width": [0, 2], "figure_s": [0, 2], "dpi": [0, 2, 3], "2d": [1, 3, 368, 397, 409], "surface_cmap": [1, 4], "surface_color": [1, 4], "surface_spinpol_color": 1, "surface_bands_color": [1, 4], "surface_opac": [1, 4], "surface_clim": [1, 4], "extended_zone_direct": [1, 4], "supercel": [1, 4, 117, 304, 395], "projection_accuraci": [1, 4], "interpolation_factor": [1, 4], "brillouin_zone_styl": [1, 4], "brillouin_zone_line_width": [1, 4], "brillouin_zone_color": [1, 4], "brillouin_zone_opac": [1, 4], "texture_cmap": [1, 4], "texture_color": [1, 4], "texture_s": [1, 4], "texture_scal": [1, 4], "texture_opac": [1, 4], "add_ax": [1, 4], "x_axes_label": [1, 4], "y_axes_label": [1, 4], "z_axes_label": [1, 4], "axes_label_color": [1, 4], "axes_line_width": [1, 4], "add_scalar_bar": [1, 4], "scalar_bar_label": [1, 4], "scalar_bar_ital": [1, 4], "scalar_bar_bold": [1, 4], "scalar_bar_title_font_s": [1, 4], "scalar_bar_label_font_s": [1, 4], "scalar_bar_position_x": [1, 4], "scalar_bar_position_i": [1, 4], "scalar_bar_color": [1, 4], "background_color": [1, 4], "orbit_gif_n_point": [1, 4], "orbit_gif_step": [1, 4], "orbit_mp4_n_point": [1, 4], "orbit_mp4_step": [1, 4], "plotter_offscreen": [1, 4], "plotter_camera_po": [1, 4], "isoslider_titl": [1, 4], "isoslider_styl": [1, 4], "isoslider_color": [1, 4], "cross_section_slice_linewidth": [1, 4], "cross_section_slice_show_area": [1, 4], "do": [2, 150, 196, 360, 361, 364, 397], "font": 2, "font_siz": 2, "plot_bar": 2, "plot_tot": 2, "spin_label": 2, "verbos": 2, "stack_y_label": 2, "x_label": [2, 3], "y_label": [2, 3], "fermi": [3, 4, 202, 345, 347, 368, 374, 375, 387, 397, 410], "surfac": [3, 4, 120, 137, 375, 410], "add_axes_label": [3, 63], "add_legend": [3, 64], "no_arrow": 3, "arrow_color": 3, "arrow_dens": 3, "arrow_s": [3, 4], "spin_project": 3, "3d": [4, 374, 397, 410], "configur": [5, 350, 359, 370, 376], "file": [5, 392, 393, 394, 395], "pyprocar": [6, 9, 18, 61, 70, 78, 85, 94, 120, 139, 141, 143, 145, 148, 161, 170, 172, 174, 180, 182, 188, 233, 253, 273, 283, 292, 302, 309, 350, 359, 370, 376, 398, 399, 401, 402], "core": [6, 9, 18, 61, 70, 78, 85, 94, 120, 133], "brillouinzon": [6, 128], "__init__": [7, 10, 19, 62, 71, 79, 86, 95, 121, 140, 142, 144, 146, 149, 162, 171, 173, 175, 181, 183, 189, 234, 254, 274, 284, 293, 303, 310], "wigner_seitz": 8, "densityofst": [9, 129], "coupled_to_uncoupled_basi": 11, "dos_sum": 12, "get_current_basi": 13, "is_non_collinear": [14, 40], "n_do": 15, "n_energi": 16, "n_spin": 17, "electronicbandstructur": [18, 130, 408], "bands_gradi": 20, "bands_gradient_mesh": 21, "bands_hessian": 22, "bands_hessian_mesh": 23, "bands_mesh": 24, "calculate_scalar_gradi": 25, "calculate_scalar_integr": 26, "create_nd_mesh": 27, "create_scaler_mesh": 28, "create_vector_mesh": 29, "ebs_sum": 30, "fermi_spe": 31, "fermi_speed_mesh": 32, "fermi_veloc": 33, "fermi_velocity_mesh": 34, "harmonic_average_effective_mass": 35, "harmonic_average_effective_mass_mesh": 36, "ibz2fbz": 37, "index_mesh": 38, "interpolate_mesh_grid": 39, "kpoints_cartesian": [41, 184], "kpoints_cartesian_mesh": 42, "kpoints_mesh": 43, "kpoints_reduc": [44, 185], "mesh_to_arrai": 45, "n_kx": 46, "n_ky": 47, "n_kz": 48, "natom": [49, 112], "nband": 50, "nkpoint": 51, "norbit": 52, "nprincip": 53, "nspin": 54, "plot_kpoint": 55, "projected_mesh": 56, "projected_phase_mesh": 57, "ravel_arrai": 58, "unfold": [59, 416], "weights_mesh": 60, "fermisurfac": [61, 131], "find_energi": 65, "show": [68, 251, 271, 375], "spin_textur": [69, 382], "fermisurface3d": [70, 132], "extend_surfac": 72, "project_atomic_project": 73, "project_fermi_spe": 74, "project_fermi_veloc": 75, "project_harmonic_effective_mass": 76, "project_spin_texture_atomic_project": 77, "isosurfac": [78, 134], "dxyz": 80, "nx": 81, "ny": 82, "nz": 83, "surface_boundari": 84, "kpath": [85, 135, 326, 339, 413], "get_kpoints_transform": 87, "get_optimized_kpoints_transform": 88, "kdistanc": 89, "nsegment": 90, "tick_nam": 91, "tick_posit": 92, "write_to_fil": 93, "alpha": 97, "atomic_numb": 98, "b": 99, "beta": 100, "c": 101, "cell_convex_hul": 102, "densiti": [103, 345, 347, 357, 358, 362, 397, 407], "gamma": 104, "get_space_group_intern": 105, "get_space_group_numb": 106, "get_spglib_symmetry_dataset": 107, "get_wyckoff_posit": 108, "is_point_insid": 109, "lattice_corn": 110, "mass": [111, 387], "nspeci": 113, "plot_cell_convex_hul": 114, "reciprocal_lattic": [115, 178], "speci": [116, 158, 167, 221], "transform": 118, "volum": 119, "center": 122, "export": [123, 404, 409, 416], "faces_arrai": 124, "set_color_with_cmap": 125, "set_scalar": 126, "set_vector": 127, "api": [133, 138, 228, 281, 306, 338], "refer": 138, "io": [139, 141, 143, 145, 148, 161, 170, 172, 174, 180, 182, 188, 228], "abinit": [139, 141, 143, 341], "abinitkpoint": 139, "abinitprocar": 141, "output": 143, "bxsf": 145, "bxsfparser": [145, 227], "parse_bxsf": 147, "lobster": [148, 344], "lobsterpars": [148, 229], "dos_parametr": 151, "dos_project": [152, 197], "dos_to_dict": [153, 198], "dos_tot": [154, 199], "final_structur": [155, 163, 203], "initial_structur": [156, 165, 212], "parse_structur": 157, "qe": 161, "qepars": [161, 230], "getkpointlabel": 164, "kpoints_cart": 166, "siesta": [170, 346], "siestapars": [170, 231], "vasp": [172, 174, 180, 182, 188, 347, 354, 361], "kpoint": [172, 215, 409], "outcar": 174, "efermi": 176, "get_symmetry_oper": 177, "rotat": [179, 409], "poscar": [180, 283, 307, 391, 392, 393, 394, 395], "procar": 182, "repair": [186, 327, 414], "symmetr": 187, "vaspxml": 188, "bands_project": 191, "conv": 192, "converg": 193, "convergence_electron": 194, "convergence_ion": 195, "energi": [200, 201, 372], "forc": 204, "get_gener": 205, "get_param": 206, "get_scstep": 207, "get_set": 208, "get_structur": 209, "get_varrai": 210, "incar": 211, "is_finish": 213, "iteration_data": 214, "kpoints_list": 216, "last_energi": 217, "parse_vasprun": 218, "potcar_info": 219, "read": [220, 394], "text_to_bool": 224, "vasp_paramet": 225, "abinitpars": 226, "vasppars": 232, "plotter": [233, 253, 273, 281], "dosplot": [233, 280, 322, 333], "draw_fermi": [235, 255], "plot_do": 238, "plot_parametr": 239, "plot_parametric_lin": 240, "plot_stack": 241, "plot_stack_orbit": 242, "plot_stack_speci": 243, "save": [244, 263, 377], "set_xlabel": [245, 265], "set_xlim": [246, 266], "set_xtick": [247, 267], "set_ylabel": [248, 268], "set_ylim": [249, 269], "set_ytick": [250, 270], "update_config": [252, 272], "ebsplot": [253, 279], "plot_atomic_level": 258, "plot_band": 259, "plot_parameter": 260, "plot_parameteric_overlai": 261, "plot_scatt": 262, "set_titl": 264, "procarplot": [273, 282], "atomicplot": 275, "parametricplot": 276, "plotband": 277, "scatterplot": 278, "pyposcar": [283, 292, 302, 306, 390, 397], "add": [285, 294], "pars": [286, 391, 393, 394], "remov": [287, 298], "sort": 288, "write": [289, 301, 305], "xyz": 290, "poscardiff": 291, "poscar_modifi": 292, "change_el": 295, "pos_multipli": 296, "pos_sum": 297, "scale_lattic": 299, "shift": 300, "poscar_supercel": 302, "poscarutil": 308, "script": [309, 338], "fermihandl": [309, 336], "create_isovalue_gif": 311, "plot_fermi_cross_sect": 312, "plot_fermi_cross_section_box_widget": 313, "plot_fermi_isoslid": 314, "plot_fermi_surfac": 315, "print_default_set": 316, "bandgap": [317, 328, 386, 387], "bandsdosplot": [318, 329, 365, 366], "bandsplot": [319, 330], "bandsplot_2d": [320, 331], "cat": [321, 332], "fermi2d": [323, 334, 369, 371], "fermi3d": [324, 335, 377, 378, 379, 380, 381, 382], "generate2dkmesh": [325, 337], "reapir": 340, "perper": [341, 342, 344, 346], "elk": 342, "dft": 343, "prep": 343, "quantum": [345, 353, 360], "espresso": [345, 353, 360], "prepar": [345, 347, 349, 350, 359, 366, 370, 376], "calcul": [345, 347, 405], "state": [345, 347, 357, 358, 362, 397, 407], "k": [345, 347, 388, 404, 411, 413], "point": [345, 347, 404, 411], "format": [345, 347], "magnet": [345, 347], "atom": [349, 394, 403, 404, 411], "level": 349, "set": 349, "up": 349, "environ": 349, "mode": [349, 351, 353, 354, 355, 358, 360, 361, 362, 365, 369, 378, 379, 380, 381, 382, 407], "plain": [351, 353, 354, 355, 358, 362, 365, 369, 378, 379, 380, 381, 404, 407], "parametr": [351, 353, 354, 355, 358, 360, 361, 362, 369, 380, 381, 407], "parametric_linemod": 351, "scatter": [351, 355], "overlay_speci": 351, "overlay_orbti": 351, "overlai": [351, 358], "orbit": [351, 403, 404, 411], "name": 351, "compar": [352, 406], "non": [353, 354, 360, 361], "colinear": [353, 354, 360, 361], "spin": [355, 362, 371, 372, 381, 382, 403, 404, 409, 411], "polar": [355, 362, 381], "comput": [356, 363, 367, 373, 383, 389, 393, 396], "time": [356, 363, 367, 373, 383, 389, 396], "parametric_lin": [358, 362, 407], "stack_speci": [358, 362, 407], "stack_orbti": [358, 362], "stack": [362, 407], "plain_band": 369, "select": [369, 371, 411], "indic": [369, 371, 402], "noncolinear": 371, "textur": [371, 382, 409], "project": [371, 372, 387, 403, 404], "singl": 371, "rashba": 372, "split": 372, "0": [372, 375], "60": 372, "sx": 372, "arrow": 372, "sy": 372, "sz": 372, "90": 372, "how": 375, "get": [375, 399], "van": 375, "alphen": 375, "fequenc": 375, "from": [375, 404], "maxim": 375, "cross": [375, 377], "section": [375, 377], "area": 375, "along": 375, "1": [375, 403, 404, 407], "minim": 375, "extrem": 375, "cross_sect": 377, "slice": 377, "isoslid": 378, "isovalue_gif": 379, "other": [384, 387, 397], "exampl": [385, 386, 387, 388, 397], "kmesh_gener": 385, "kmesh": 385, "find": [386, 387, 392], "properti": 387, "gradient": 387, "veloc": 387, "effect": 387, "kpath_gener": 388, "path": [388, 404, 413], "visual": [391, 392, 393, 394, 395], "cluster": 391, "bi2se3": 391, "slab": 391, "util": [391, 392, 395], "function": [391, 392, 393, 395], "creat": [391, 392, 394, 395], "gif": [391, 392, 394, 395], "identifi": 391, "defect": [392, 395], "analyz": 393, "radial": 393, "distribut": 393, "rdf": 393, "kde": 393, "curv": 393, "result": 393, "substitut": 394, "modifi": 395, "scale": 395, "vacuum": 395, "space": 395, "lattic": 395, "introduc": 395, "author": 398, "citat": 398, "cite": [398, 399], "contributor": 398, "develop": 398, "licens": 398, "start": 399, "instal": [399, 400], "paper": 399, "support": 399, "pip": 400, "conda": 400, "clone": 400, "through": 400, "github": 400, "after": 400, "why": 401, "tabl": 402, "2": [403, 404, 407], "3": [403, 404, 407], "4": [404, 407], "matplotlib": [404, 409, 416], "pyplot": [404, 409, 416], "object": [404, 409, 416], "convert": 404, "reduc": 404, "cartesian": 404, "coordin": 404, "discontinu": 404, "concaten": 405, "multipl": 405, "5": 407, "6": 407, "stack_orbit": 407, "access": [408, 413, 415], "electron": 408, "translat": 409, "mesh": 409, "keyboard": 410, "shortcut": 410, "filter": 411, "data": 411, "To": 411, "user": 412, "guid": 412, "further": 412, "detail": 412, "inform": [413, 415]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"band structure plotting Options": [[0, "band-structure-plotting-options"]], "spin_colors": [[0, "spin-colors"], [2, "spin-colors"], [4, "spin-colors"]], "color": [[0, "color"], [3, "color"]], "cmap": [[0, "cmap"], [2, "cmap"], [3, "cmap"]], "clim": [[0, "clim"], [2, "clim"], [3, "clim"]], "fermi_color": [[0, "fermi-color"], [2, "fermi-color"]], "fermi_linestyle": [[0, "fermi-linestyle"], [2, "fermi-linestyle"]], "fermi_linewidth": [[0, "fermi-linewidth"], [2, "fermi-linewidth"]], "grid": [[0, "grid"], [2, "grid"], [236, "grid"], [256, "grid"]], "grid_axis": [[0, "grid-axis"], [2, "grid-axis"]], "grid_color": [[0, "grid-color"], [2, "grid-color"]], "grid_linestyle": [[0, "grid-linestyle"], [2, "grid-linestyle"]], "grid_linewidth": [[0, "grid-linewidth"], [2, "grid-linewidth"]], "grid_which": [[0, "grid-which"], [2, "grid-which"]], "label": [[0, "label"]], "legend": [[0, "legend"], [2, "legend"], [237, "legend"], [257, "legend"]], "linestyle": [[0, "linestyle"], [2, "linestyle"], [3, "linestyle"]], "linewidth": [[0, "linewidth"], [2, "linewidth"], [3, "linewidth"]], "marker": [[0, "marker"], [2, "marker"], [3, "marker"]], "markersize": [[0, "markersize"], [2, "markersize"]], "opacity": [[0, "opacity"], [2, "opacity"]], "plot_color_bar": [[0, "plot-color-bar"], [2, "plot-color-bar"], [3, "plot-color-bar"]], "savefig": [[0, "savefig"], [2, "savefig"], [67, "savefig"]], "title": [[0, "title"], [2, "title"]], "weighted_color": [[0, "weighted-color"], [2, "weighted-color"]], "weighted_width": [[0, "weighted-width"], [2, "weighted-width"]], "figure_size": [[0, "figure-size"], [2, "figure-size"]], "dpi": [[0, "dpi"], [2, "dpi"], [3, "dpi"]], "band structure 2d plotting Options": [[1, "band-structure-2d-plotting-options"]], "surface_cmap": [[1, "surface-cmap"], [4, "surface-cmap"]], "surface_color": [[1, "surface-color"], [4, "surface-color"]], "surface_spinpol_colors": [[1, "surface-spinpol-colors"]], "surface_bands_colors": [[1, "surface-bands-colors"], [4, "surface-bands-colors"]], "surface_opacity": [[1, "surface-opacity"], [4, "surface-opacity"]], "surface_clim": [[1, "surface-clim"], [4, "surface-clim"]], "extended_zone_directions": [[1, "extended-zone-directions"], [4, "extended-zone-directions"]], "supercell": [[1, "supercell"], [4, "supercell"], [117, "supercell"], [304, "supercell"]], "projection_accuracy": [[1, "projection-accuracy"], [4, "projection-accuracy"]], "interpolation_factor": [[1, "interpolation-factor"], [4, "interpolation-factor"]], "brillouin_zone_style": [[1, "brillouin-zone-style"], [4, "brillouin-zone-style"]], "brillouin_zone_line_width": [[1, "brillouin-zone-line-width"], [4, "brillouin-zone-line-width"]], "brillouin_zone_color": [[1, "brillouin-zone-color"], [4, "brillouin-zone-color"]], "brillouin_zone_opacity": [[1, "brillouin-zone-opacity"], [4, "brillouin-zone-opacity"]], "texture_cmap": [[1, "texture-cmap"], [4, "texture-cmap"]], "texture_color": [[1, "texture-color"], [4, "texture-color"]], "texture_size": [[1, "texture-size"], [4, "texture-size"]], "texture_scale": [[1, "texture-scale"], [4, "texture-scale"]], "texture_opacity": [[1, "texture-opacity"], [4, "texture-opacity"]], "add_axes": [[1, "add-axes"], [4, "add-axes"]], "x_axes_label": [[1, "x-axes-label"], [4, "x-axes-label"]], "y_axes_label": [[1, "y-axes-label"], [4, "y-axes-label"]], "z_axes_label": [[1, "z-axes-label"], [4, "z-axes-label"]], "axes_label_color": [[1, "axes-label-color"], [4, "axes-label-color"]], "axes_line_width": [[1, "axes-line-width"], [4, "axes-line-width"]], "add_scalar_bar": [[1, "add-scalar-bar"], [4, "add-scalar-bar"]], "scalar_bar_labels": [[1, "scalar-bar-labels"], [4, "scalar-bar-labels"]], "scalar_bar_italic": [[1, "scalar-bar-italic"], [4, "scalar-bar-italic"]], "scalar_bar_bold": [[1, "scalar-bar-bold"], [4, "scalar-bar-bold"]], "scalar_bar_title_font_size": [[1, "scalar-bar-title-font-size"], [4, "scalar-bar-title-font-size"]], "scalar_bar_label_font_size": [[1, "scalar-bar-label-font-size"], [4, "scalar-bar-label-font-size"]], "scalar_bar_position_x": [[1, "scalar-bar-position-x"], [4, "scalar-bar-position-x"]], "scalar_bar_position_y": [[1, "scalar-bar-position-y"], [4, "scalar-bar-position-y"]], "scalar_bar_color": [[1, "scalar-bar-color"], [4, "scalar-bar-color"]], "background_color": [[1, "background-color"], [4, "background-color"]], "orbit_gif_n_points": [[1, "orbit-gif-n-points"], [4, "orbit-gif-n-points"]], "orbit_gif_step": [[1, "orbit-gif-step"], [4, "orbit-gif-step"]], "orbit_mp4_n_points": [[1, "orbit-mp4-n-points"], [4, "orbit-mp4-n-points"]], "orbit_mp4_step": [[1, "orbit-mp4-step"], [4, "orbit-mp4-step"]], "plotter_offscreen": [[1, "plotter-offscreen"], [4, "plotter-offscreen"]], "plotter_camera_pos": [[1, "plotter-camera-pos"], [4, "plotter-camera-pos"]], "isoslider_title": [[1, "isoslider-title"], [4, "isoslider-title"]], "isoslider_style": [[1, "isoslider-style"], [4, "isoslider-style"]], "isoslider_color": [[1, "isoslider-color"], [4, "isoslider-color"]], "cross_section_slice_linewidth": [[1, "cross-section-slice-linewidth"], [4, "cross-section-slice-linewidth"]], "cross_section_slice_show_area": [[1, "cross-section-slice-show-area"], [4, "cross-section-slice-show-area"]], "dos plotting Options": [[2, "dos-plotting-options"]], "colors": [[2, "colors"]], "font": [[2, "font"]], "font_size": [[2, "font-size"]], "plot_bar": [[2, "plot-bar"]], "plot_total": [[2, "plot-total"]], "spin_labels": [[2, "spin-labels"]], "verbose": [[2, "verbose"]], "stack_y_label": [[2, "stack-y-label"]], "x_label": [[2, "x-label"], [3, "x-label"]], "y_label": [[2, "y-label"], [3, "y-label"]], "fermi surface 2d plotting Options": [[3, "fermi-surface-2d-plotting-options"]], "add_axes_labels": [[3, "add-axes-labels"], [63, "add-axes-labels"]], "add_legend": [[3, "add-legend"], [64, "add-legend"]], "no_arrow": [[3, "no-arrow"]], "arrow_color": [[3, "arrow-color"]], "arrow_density": [[3, "arrow-density"]], "arrow_size": [[3, "arrow-size"], [4, "arrow-size"]], "spin_projection": [[3, "spin-projection"]], "fermi surface 3d plotting Options": [[4, "fermi-surface-3d-plotting-options"]], "Configuration Files": [[5, "configuration-files"]], "pyprocar.core.BrillouinZone": [[6, "pyprocar-core-brillouinzone"]], "__init__": [[7, "init"], [10, "init"], [19, "init"], [62, "init"], [71, "init"], [79, "init"], [86, "init"], [95, "init"], [121, "init"], [140, "init"], [142, "init"], [144, "init"], [146, "init"], [149, "init"], [162, "init"], [171, "init"], [173, "init"], [175, "init"], [181, "init"], [183, "init"], [189, "init"], [234, "init"], [254, "init"], [274, "init"], [284, "init"], [293, "init"], [303, "init"], [310, "init"]], "wigner_seitz": [[8, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[9, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[11, "coupled-to-uncoupled-basis"]], "dos_sum": [[12, "dos-sum"]], "get_current_basis": [[13, "get-current-basis"]], "is_non_collinear": [[14, "is-non-collinear"], [40, "is-non-collinear"]], "n_dos": [[15, "n-dos"]], "n_energies": [[16, "n-energies"]], "n_spins": [[17, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[18, "pyprocar-core-electronicbandstructure"]], "bands_gradient": [[20, "bands-gradient"]], "bands_gradient_mesh": [[21, "bands-gradient-mesh"]], "bands_hessian": [[22, "bands-hessian"]], "bands_hessian_mesh": [[23, "bands-hessian-mesh"]], "bands_mesh": [[24, "bands-mesh"]], "calculate_scalar_gradient": [[25, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[26, "calculate-scalar-integral"]], "create_nd_mesh": [[27, "create-nd-mesh"]], "create_scaler_mesh": [[28, "create-scaler-mesh"]], "create_vector_mesh": [[29, "create-vector-mesh"]], "ebs_sum": [[30, "ebs-sum"]], "fermi_speed": [[31, "fermi-speed"]], "fermi_speed_mesh": [[32, "fermi-speed-mesh"]], "fermi_velocity": [[33, "fermi-velocity"]], "fermi_velocity_mesh": [[34, "fermi-velocity-mesh"]], "harmonic_average_effective_mass": [[35, "harmonic-average-effective-mass"]], "harmonic_average_effective_mass_mesh": [[36, "harmonic-average-effective-mass-mesh"]], "ibz2fbz": [[37, "ibz2fbz"]], "index_mesh": [[38, "index-mesh"]], "interpolate_mesh_grid": [[39, "interpolate-mesh-grid"]], "kpoints_cartesian": [[41, "kpoints-cartesian"], [184, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[42, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[43, "kpoints-mesh"]], "kpoints_reduced": [[44, "kpoints-reduced"], [185, "kpoints-reduced"]], "mesh_to_array": [[45, "mesh-to-array"]], "n_kx": [[46, "n-kx"]], "n_ky": [[47, "n-ky"]], "n_kz": [[48, "n-kz"]], "natoms": [[49, "natoms"], [112, "natoms"]], "nbands": [[50, "nbands"]], "nkpoints": [[51, "nkpoints"]], "norbitals": [[52, "norbitals"]], "nprincipals": [[53, "nprincipals"]], "nspins": [[54, "nspins"]], "plot_kpoints": [[55, "plot-kpoints"]], "projected_mesh": [[56, "projected-mesh"]], "projected_phase_mesh": [[57, "projected-phase-mesh"]], "ravel_array": [[58, "ravel-array"]], "unfold": [[59, "unfold"]], "weights_mesh": [[60, "weights-mesh"]], "pyprocar.core.FermiSurface": [[61, "pyprocar-core-fermisurface"]], "find_energy": [[65, "find-energy"]], "plot": [[66, "plot"]], "show": [[68, "show"], [251, "show"], [271, "show"]], "spin_texture": [[69, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[70, "pyprocar-core-fermisurface3d"]], "extend_surface": [[72, "extend-surface"]], "project_atomic_projections": [[73, "project-atomic-projections"]], "project_fermi_speed": [[74, "project-fermi-speed"]], "project_fermi_velocity": [[75, "project-fermi-velocity"]], "project_harmonic_effective_mass": [[76, "project-harmonic-effective-mass"]], "project_spin_texture_atomic_projections": [[77, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[78, "pyprocar-core-isosurface"]], "dxyz": [[80, "dxyz"]], "nX": [[81, "nx"]], "nY": [[82, "ny"]], "nZ": [[83, "nz"]], "surface_boundaries": [[84, "surface-boundaries"]], "pyprocar.core.KPath": [[85, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[87, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[88, "get-optimized-kpoints-transformed"]], "kdistances": [[89, "kdistances"]], "nsegments": [[90, "nsegments"]], "tick_names": [[91, "tick-names"]], "tick_positions": [[92, "tick-positions"]], "write_to_file": [[93, "write-to-file"]], "pyprocar.core.Structure": [[94, "pyprocar-core-structure"]], "a": [[96, "a"]], "alpha": [[97, "alpha"]], "atomic_numbers": [[98, "atomic-numbers"]], "b": [[99, "b"]], "beta": [[100, "beta"]], "c": [[101, "c"]], "cell_convex_hull": [[102, "cell-convex-hull"]], "density": [[103, "density"]], "gamma": [[104, "gamma"]], "get_space_group_international": [[105, "get-space-group-international"]], "get_space_group_number": [[106, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[107, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[108, "get-wyckoff-positions"]], "is_point_inside": [[109, "is-point-inside"]], "lattice_corners": [[110, "lattice-corners"]], "masses": [[111, "masses"]], "nspecies": [[113, "nspecies"]], "plot_cell_convex_hull": [[114, "plot-cell-convex-hull"]], "reciprocal_lattice": [[115, "reciprocal-lattice"], [178, "reciprocal-lattice"]], "species": [[116, "species"], [158, "species"], [167, "species"], [221, "species"]], "transform": [[118, "transform"]], "volume": [[119, "volume"]], "pyprocar.core.Surface": [[120, "pyprocar-core-surface"]], "centers": [[122, "centers"]], "export": [[123, "export"]], "faces_array": [[124, "faces-array"]], "set_color_with_cmap": [[125, "set-color-with-cmap"]], "set_scalars": [[126, "set-scalars"]], "set_vectors": [[127, "set-vectors"]], "BrillouinZone": [[128, "brillouinzone"]], "DensityOfStates": [[129, "densityofstates"]], "ElectronicBandStructure": [[130, "electronicbandstructure"], [408, "electronicbandstructure"]], "FermiSurface": [[131, "fermisurface"]], "FermiSurface3D": [[132, "fermisurface3d"]], "Core API": [[133, "core-api"]], "Isosurface": [[134, "isosurface"]], "KPath": [[135, "kpath"]], "Structure": [[136, "structure"], [415, "structure"]], "Surface": [[137, "surface"]], "API Reference": [[138, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[139, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[141, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[143, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[145, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[147, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[148, "pyprocar-io-lobster-lobsterparser"]], "dos": [[150, "dos"], [196, "dos"]], "dos_parametric": [[151, "dos-parametric"]], "dos_projected": [[152, "dos-projected"], [197, "dos-projected"]], "dos_to_dict": [[153, "dos-to-dict"], [198, "dos-to-dict"]], "dos_total": [[154, "dos-total"], [199, "dos-total"]], "final_structure": [[155, "final-structure"], [163, "final-structure"], [203, "final-structure"]], "initial_structure": [[156, "initial-structure"], [165, "initial-structure"], [212, "initial-structure"]], "parse_structure": [[157, "parse-structure"]], "structure": [[159, "structure"], [168, "structure"], [222, "structure"]], "structures": [[160, "structures"], [169, "structures"], [223, "structures"]], "pyprocar.io.qe.QEParser": [[161, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[164, "getkpointlabels"]], "kpoints_cart": [[166, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[170, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[172, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[174, "pyprocar-io-vasp-outcar"]], "efermi": [[176, "efermi"]], "get_symmetry_operations": [[177, "get-symmetry-operations"]], "rotations": [[179, "rotations"]], "pyprocar.io.vasp.Poscar": [[180, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[182, "pyprocar-io-vasp-procar"]], "repair": [[186, "repair"], [327, "repair"]], "symmetrize": [[187, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[188, "pyprocar-io-vasp-vaspxml"]], "bands": [[190, "bands"]], "bands_projected": [[191, "bands-projected"]], "conv": [[192, "conv"]], "convergence": [[193, "convergence"]], "convergence_electronic": [[194, "convergence-electronic"]], "convergence_ionic": [[195, "convergence-ionic"]], "energies": [[200, "energies"]], "energy": [[201, "energy"]], "fermi": [[202, "fermi"]], "forces": [[204, "forces"]], "get_general": [[205, "get-general"]], "get_params": [[206, "get-params"]], "get_scstep": [[207, "get-scstep"]], "get_set": [[208, "get-set"]], "get_structure": [[209, "get-structure"]], "get_varray": [[210, "get-varray"]], "incar": [[211, "incar"]], "is_finished": [[213, "is-finished"]], "iteration_data": [[214, "iteration-data"]], "kpoints": [[215, "kpoints"]], "kpoints_list": [[216, "kpoints-list"]], "last_energy": [[217, "last-energy"]], "parse_vasprun": [[218, "parse-vasprun"]], "potcar_info": [[219, "potcar-info"]], "read": [[220, "read"]], "text_to_bool": [[224, "text-to-bool"]], "vasp_parameters": [[225, "vasp-parameters"]], "AbinitParser": [[226, "abinitparser"]], "BxsfParser": [[227, "bxsfparser"]], "IO API": [[228, "io-api"]], "LobsterParser": [[229, "lobsterparser"]], "QEParser": [[230, "qeparser"]], "SiestaParser": [[231, "siestaparser"]], "VaspParser": [[232, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[233, "pyprocar-plotter-dosplot"]], "draw_fermi": [[235, "draw-fermi"], [255, "draw-fermi"]], "plot_dos": [[238, "plot-dos"]], "plot_parametric": [[239, "plot-parametric"]], "plot_parametric_line": [[240, "plot-parametric-line"]], "plot_stack": [[241, "plot-stack"]], "plot_stack_orbitals": [[242, "plot-stack-orbitals"]], "plot_stack_species": [[243, "plot-stack-species"]], "save": [[244, "save"], [263, "save"]], "set_xlabel": [[245, "set-xlabel"], [265, "set-xlabel"]], "set_xlim": [[246, "set-xlim"], [266, "set-xlim"]], "set_xticks": [[247, "set-xticks"], [267, "set-xticks"]], "set_ylabel": [[248, "set-ylabel"], [268, "set-ylabel"]], "set_ylim": [[249, "set-ylim"], [269, "set-ylim"]], "set_yticks": [[250, "set-yticks"], [270, "set-yticks"]], "update_config": [[252, "update-config"], [272, "update-config"]], "pyprocar.plotter.EBSPlot": [[253, "pyprocar-plotter-ebsplot"]], "plot_atomic_levels": [[258, "plot-atomic-levels"]], "plot_bands": [[259, "plot-bands"]], "plot_parameteric": [[260, "plot-parameteric"]], "plot_parameteric_overlay": [[261, "plot-parameteric-overlay"]], "plot_scatter": [[262, "plot-scatter"]], "set_title": [[264, "set-title"]], "pyprocar.plotter.ProcarPlot": [[273, "pyprocar-plotter-procarplot"]], "atomicPlot": [[275, "atomicplot"]], "parametricPlot": [[276, "parametricplot"]], "plotBands": [[277, "plotbands"]], "scatterPlot": [[278, "scatterplot"]], "EBSPlot": [[279, "ebsplot"]], "DosPlot": [[280, "dosplot"]], "Plotter API": [[281, "plotter-api"]], "ProcarPlot": [[282, "procarplot"]], "pyprocar.pyposcar.Poscar": [[283, "pyprocar-pyposcar-poscar"]], "add": [[285, "add"], [294, "add"]], "parse": [[286, "parse"]], "remove": [[287, "remove"], [298, "remove"]], "sort": [[288, "sort"]], "write": [[289, "write"], [301, "write"], [305, "write"]], "xyz": [[290, "xyz"]], "poscarDiff": [[291, "poscardiff"]], "pyprocar.pyposcar.poscar_modify": [[292, "pyprocar-pyposcar-poscar-modify"]], "change_elements": [[295, "change-elements"]], "pos_multiply": [[296, "pos-multiply"]], "pos_sum": [[297, "pos-sum"]], "scale_lattice": [[299, "scale-lattice"]], "shift": [[300, "shift"]], "pyprocar.pyposcar.poscar_supercell": [[302, "pyprocar-pyposcar-poscar-supercell"]], "PyPoscar API": [[306, "pyposcar-api"]], "Poscar": [[307, "poscar"]], "poscarUtils": [[308, "poscarutils"]], "pyprocar.scripts.FermiHandler": [[309, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[311, "create-isovalue-gif"]], "plot_fermi_cross_section": [[312, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[313, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[314, "plot-fermi-isoslider"]], "plot_fermi_surface": [[315, "plot-fermi-surface"]], "print_default_settings": [[316, "print-default-settings"]], "bandgap": [[317, "bandgap"], [328, "bandgap"]], "bandsdosplot": [[318, "bandsdosplot"], [329, "bandsdosplot"]], "bandsplot": [[319, "bandsplot"], [330, "bandsplot"]], "bandsplot_2d": [[320, "bandsplot-2d"], [331, "bandsplot-2d"]], "cat": [[321, "cat"], [332, "cat"]], "dosplot": [[322, "dosplot"], [333, "dosplot"]], "fermi2D": [[323, "fermi2d"], [334, "fermi2d"]], "fermi3D": [[324, "fermi3d"], [335, "fermi3d"]], "generate2dkmesh": [[325, "generate2dkmesh"], [337, "generate2dkmesh"]], "kpath": [[326, "kpath"], [339, "kpath"]], "FermiHandler": [[336, "fermihandler"]], "Scripts API": [[338, "scripts-api"]], "reapir": [[340, "reapir"]], "Abinit Perperation": [[341, "abinit-perperation"]], "Elk Perperation": [[342, "elk-perperation"]], "DFT Prep": [[343, "dft-prep"]], "Lobster Perperation": [[344, "lobster-perperation"]], "Quantum Espresso Preparation": [[345, "quantum-espresso-preparation"]], "Preparing Calculations": [[345, "preparing-calculations"], [347, "preparing-calculations"]], "Band Structure": [[345, "band-structure"], [347, "band-structure"], [348, "band-structure"], [397, "band-structure"]], "Density of States": [[345, "density-of-states"], [347, "density-of-states"], [357, "density-of-states"], [397, "density-of-states"], [407, "density-of-states"]], "Band Structure and Density of States": [[345, "band-structure-and-density-of-states"], [347, "band-structure-and-density-of-states"]], "Fermi": [[345, "fermi"], [347, "fermi"]], "K-Points Format": [[345, "k-points-format"], [347, "k-points-format"]], "Magnetic Calculations": [[345, "magnetic-calculations"], [347, "magnetic-calculations"]], "Siesta Perperation": [[346, "siesta-perperation"]], "VASP Preparation": [[347, "vasp-preparation"]], "Plotting Atomic Levels": [[349, "plotting-atomic-levels"]], "Preparation": [[349, "preparation"], [350, "preparation"], [359, "preparation"], [366, "preparation"], [370, "preparation"], [376, "preparation"]], "Setting up the environment": [[349, "setting-up-the-environment"]], "Plotting in Atomic Mode": [[349, "plotting-in-atomic-mode"]], "Plotting with Configurations in pyprocar": [[350, "plotting-with-configurations-in-pyprocar"], [359, "plotting-with-configurations-in-pyprocar"], [370, "plotting-with-configurations-in-pyprocar"], [376, "plotting-with-configurations-in-pyprocar"]], "Plotting band structure": [[351, "plotting-band-structure"]], "Plain mode": [[351, "plain-mode"], [353, "plain-mode"], [354, "plain-mode"], [355, "plain-mode"], [358, "plain-mode"], [362, "plain-mode"], [365, "plain-mode"], [369, "plain-mode"], [378, "plain-mode"], [379, "plain-mode"], [380, "plain-mode"], [381, "plain-mode"]], "Parametric mode": [[351, "parametric-mode"], [353, "parametric-mode"], [354, "parametric-mode"], [355, "parametric-mode"], [358, "parametric-mode"], [360, "parametric-mode"], [361, "parametric-mode"], [362, "parametric-mode"], [380, "parametric-mode"], [381, "parametric-mode"]], "parametric_linemode": [[351, "parametric-linemode"]], "Scatter mode": [[351, "scatter-mode"], [355, "scatter-mode"]], "overlay_species mode": [[351, "overlay-species-mode"]], "overlay_orbtials mode": [[351, "overlay-orbtials-mode"]], "overlay mode": [[351, "overlay-mode"], [358, "overlay-mode"]], "overlay mode by orbital names": [[351, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[352, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[353, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[354, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[355, "plotting-spin-polarized-band-structures"]], "Computation times": [[356, "computation-times"], [363, "computation-times"], [367, "computation-times"], [373, "computation-times"], [383, "computation-times"], [389, "computation-times"], [396, "computation-times"]], "Plotting density of states": [[358, "plotting-density-of-states"]], "parametric_line mode": [[358, "parametric-line-mode"], [362, "parametric-line-mode"]], "stack_species mode": [[358, "stack-species-mode"], [362, "stack-species-mode"]], "stack_orbtials mode": [[358, "stack-orbtials-mode"], [362, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[360, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[361, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[362, "plotting-spin-polarized-density-of-states"]], "stack mode": [[362, "stack-mode"]], "Bands and Dos plot": [[364, "bands-and-dos-plot"], [397, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[365, "plotting-bandsdosplot"], [366, "plotting-bandsdosplot"]], "Fermi 2D": [[368, "fermi-2d"], [397, "fermi-2d"]], "Plotting fermi2d": [[369, "plotting-fermi2d"]], "plain_bands mode": [[369, "plain-bands-mode"]], "parametric mode": [[369, "parametric-mode"]], "Selecting band indices": [[369, "selecting-band-indices"], [371, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[371, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[371, "spin-texture-projection"]], "Spin Texture single color": [[371, "spin-texture-single-color"]], "Plotting rashba spin splitting": [[372, "plotting-rashba-spin-splitting"]], "energy = 0.60 sx projection no arrows": [[372, "energy-0-60-sx-projection-no-arrows"]], "energy = 0.60 sy projection no arrows": [[372, "energy-0-60-sy-projection-no-arrows"]], "energy = 0.60 sz projection no arrows": [[372, "energy-0-60-sz-projection-no-arrows"]], "energy = -0.90 sx projection no arrows": [[372, "energy-0-90-sx-projection-no-arrows"]], "energy = -0.90 sy projection no arrows": [[372, "energy-0-90-sy-projection-no-arrows"]], "energy = -0.90 sz projection no arrows": [[372, "energy-0-90-sz-projection-no-arrows"]], "energy = 0.60 sx projection with arrows": [[372, "energy-0-60-sx-projection-with-arrows"]], "energy = -0.90 sx projection with arrows": [[372, "energy-0-90-sx-projection-with-arrows"]], "Fermi 3D": [[374, "fermi-3d"], [397, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[375, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[375, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[375, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[375, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[377, "plotting-fermi3d-cross-section"]], "Cross section": [[377, "cross-section"]], "Cross section. Save slice": [[377, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[378, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[379, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[380, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[381, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[382, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[382, "spin-texture-mode"]], "Other": [[384, "other"], [397, "other"]], "Example of kmesh_generator": [[385, "example-of-kmesh-generator"]], "Plotting Kmesh": [[385, "plotting-kmesh"]], "Example of finding the bandgap": [[386, "example-of-finding-the-bandgap"], [387, "example-of-finding-the-bandgap"]], "Other properties": [[387, "other-properties"]], "Bands": [[387, "bands"]], "Projections": [[387, "projections"]], "Gradients": [[387, "gradients"]], "Band/Fermi velocities": [[387, "band-fermi-velocities"]], "Effective mass": [[387, "effective-mass"]], "Example of kpath_generator": [[388, "example-of-kpath-generator"]], "Plotting K Path": [[388, "plotting-k-path"]], "PyPoscar": [[390, "pyposcar"], [397, "pyposcar"]], "Visualizing Clusters in Bi2Se3 Slab": [[391, "visualizing-clusters-in-bi2se3-slab"]], "Utility function for creating GIF visualizations": [[391, "utility-function-for-creating-gif-visualizations"], [392, "utility-function-for-creating-gif-visualizations"], [395, "utility-function-for-creating-gif-visualizations"]], "Parsing the POSCAR and Identifying Clusters": [[391, "parsing-the-poscar-and-identifying-clusters"]], "Visualizing the Clusters": [[391, "visualizing-the-clusters"]], "Finding defects in a POSCAR file": [[392, "finding-defects-in-a-poscar-file"]], "Finding defects": [[392, "finding-defects"]], "Analyzing Radial Distribution Functions (RDF)": [[393, "analyzing-radial-distribution-functions-rdf"]], "Parsing the POSCAR file": [[393, "parsing-the-poscar-file"]], "Computing RDF and KDE Curves": [[393, "computing-rdf-and-kde-curves"]], "Visualizing the Results": [[393, "visualizing-the-results"]], "Substituting Atoms in a POSCAR File": [[394, "substituting-atoms-in-a-poscar-file"]], "Reading and Parsing the POSCAR File": [[394, "reading-and-parsing-the-poscar-file"]], "Atom Substitution": [[394, "atom-substitution"]], "Visualization of Atomic Structures": [[394, "visualization-of-atomic-structures"]], "Creating GIFs for Visualization": [[394, "creating-gifs-for-visualization"]], "Modifying a POSCAR File: Scaling, Supercells, and Defects": [[395, "modifying-a-poscar-file-scaling-supercells-and-defects"]], "Scaling Vacuum Space in the Lattice": [[395, "scaling-vacuum-space-in-the-lattice"]], "Creating a Supercell": [[395, "creating-a-supercell"]], "Introducing Defects": [[395, "introducing-defects"]], "Examples": [[397, "examples"]], "Authors & Citation": [[398, "authors-citation"]], "Citing PyProcar": [[398, "citing-pyprocar"], [399, "citing-pyprocar"]], "Authors": [[398, "authors"]], "Contributors": [[398, "contributors"]], "Developers": [[398, "developers"]], "License": [[398, "license"]], "Getting started": [[399, "getting-started"]], "Installation": [[399, "installation"], [400, "installation"]], "Paper": [[399, "paper"]], "Support": [[399, "support"]], "Installing with pip": [[400, "installing-with-pip"]], "Installing with conda": [[400, "installing-with-conda"]], "Cloning through GitHub": [[400, "cloning-through-github"]], "After Installation": [[400, "after-installation"]], "Why PyProcar?": [[401, "why-pyprocar"]], "PyProcar": [[402, "pyprocar"]], "Indices and tables": [[402, "indices-and-tables"]], "Atomic Projections": [[403, "atomic-projections"]], "1. Spin projection": [[403, "spin-projection"]], "2. Atom projection": [[403, "atom-projection"]], "3. Orbital projection": [[403, "orbital-projection"]], "Band structure": [[404, "band-structure"]], "1. Plain band structure": [[404, "plain-band-structure"]], "2. Spin projection": [[404, "spin-projection"]], "3. Atom projection": [[404, "atom-projection"]], "4. Orbital projection": [[404, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[404, "export-plot-as-a-matplotlib-pyplot-object"], [409, "export-plot-as-a-matplotlib-pyplot-object"], [416, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[404, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[404, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[405, "concatenating-multiple-calculations"]], "Compare bands": [[406, "compare-bands"]], "1. mode='plain'": [[407, "mode-plain"]], "2. mode='parametric'": [[407, "mode-parametric"]], "3. mode='parametric_line'": [[407, "mode-parametric-line"]], "4. mode='stack'": [[407, "mode-stack"]], "5. mode='stack_species'": [[407, "mode-stack-species"]], "6. mode='stack_orbitals'": [[407, "mode-stack-orbitals"]], "Accessing Electronic Band Structure": [[408, "accessing-electronic-band-structure"]], "2D spin-texture": [[409, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[409, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[410, "d-fermi-surface"]], "3D surfaces": [[410, "d-surfaces"]], "Keyboard shortcuts": [[410, "keyboard-shortcuts"]], "Filtering data": [[411, "filtering-data"]], "To filter selected orbitals": [[411, "to-filter-selected-orbitals"]], "To filter selected k-points": [[411, "to-filter-selected-k-points"]], "To filter selected spins": [[411, "to-filter-selected-spins"]], "To filter selected atoms": [[411, "to-filter-selected-atoms"]], "User Guide": [[412, "user-guide"]], "Further Details": [[412, "further-details"]], "K Path": [[413, "k-path"]], "Accessing Kpath Information": [[413, "accessing-kpath-information"]], "Repair": [[414, "repair"]], "Accessing Structure Information": [[415, "accessing-structure-information"]], "Band unfolding": [[416, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[6, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[7, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[8, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[9, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[10, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[11, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[12, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[13, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[14, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[15, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[16, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[17, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[18, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient (pyprocar.core.electronicbandstructure property)": [[20, "pyprocar.core.ElectronicBandStructure.bands_gradient"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[21, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian (pyprocar.core.electronicbandstructure property)": [[22, "pyprocar.core.ElectronicBandStructure.bands_hessian"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[23, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[25, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[26, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[27, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[28, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[29, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[30, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "fermi_speed (pyprocar.core.electronicbandstructure property)": [[31, "pyprocar.core.ElectronicBandStructure.fermi_speed"]], "fermi_speed_mesh (pyprocar.core.electronicbandstructure property)": [[32, "pyprocar.core.ElectronicBandStructure.fermi_speed_mesh"]], "fermi_velocity (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.fermi_velocity"]], "fermi_velocity_mesh (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh"]], "harmonic_average_effective_mass (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass"]], "harmonic_average_effective_mass_mesh (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[37, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "interpolate_mesh_grid() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[41, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[42, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[43, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[44, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "mesh_to_array() (pyprocar.core.electronicbandstructure method)": [[45, "pyprocar.core.ElectronicBandStructure.mesh_to_array"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[46, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[47, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[48, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[49, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[50, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[51, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[52, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[54, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[55, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[56, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[57, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "ravel_array() (pyprocar.core.electronicbandstructure method)": [[58, "pyprocar.core.ElectronicBandStructure.ravel_array"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[59, "pyprocar.core.ElectronicBandStructure.unfold"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[60, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[61, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[62, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[63, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[64, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[65, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[66, "pyprocar.core.FermiSurface.plot"]], "savefig() (pyprocar.core.fermisurface method)": [[67, "pyprocar.core.FermiSurface.savefig"]], "show() (pyprocar.core.fermisurface method)": [[68, "pyprocar.core.FermiSurface.show"]], "spin_texture() (pyprocar.core.fermisurface method)": [[69, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[70, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[71, "pyprocar.core.FermiSurface3D.__init__"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[72, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_fermi_speed() (pyprocar.core.fermisurface3d method)": [[74, "pyprocar.core.FermiSurface3D.project_fermi_speed"]], "project_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[75, "pyprocar.core.FermiSurface3D.project_fermi_velocity"]], "project_harmonic_effective_mass() (pyprocar.core.fermisurface3d method)": [[76, "pyprocar.core.FermiSurface3D.project_harmonic_effective_mass"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[77, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[78, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[79, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[80, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[81, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[82, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[83, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[84, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[85, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[86, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[87, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[88, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[89, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[90, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[91, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[92, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[93, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[94, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[95, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[96, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[97, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[101, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[102, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[103, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[104, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[105, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[106, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[107, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[108, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[109, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[110, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[111, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[113, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[114, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[116, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[117, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[118, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[119, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[120, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[121, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[122, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[123, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[124, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[125, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[126, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[127, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[139, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[140, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[141, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[142, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[143, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[144, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[145, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[146, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[147, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[148, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[149, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[150, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[151, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[153, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[156, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[157, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[158, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[159, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[160, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[161, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[162, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[163, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[164, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[165, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[166, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[167, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[168, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[169, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[170, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[171, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[172, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[173, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[174, "pyprocar.io.vasp.Outcar"]], "file_str (pyprocar.io.vasp.outcar attribute)": [[174, "pyprocar.io.vasp.Outcar.file_str"]], "filename (pyprocar.io.vasp.outcar attribute)": [[174, "pyprocar.io.vasp.Outcar.filename"]], "variables (pyprocar.io.vasp.outcar attribute)": [[174, "pyprocar.io.vasp.Outcar.variables"]], "__init__() (pyprocar.io.vasp.outcar method)": [[175, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[176, "pyprocar.io.vasp.Outcar.efermi"]], "get_symmetry_operations() (pyprocar.io.vasp.outcar method)": [[177, "pyprocar.io.vasp.Outcar.get_symmetry_operations"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[178, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[179, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[180, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[181, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[182, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[183, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[184, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[185, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[186, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[187, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[188, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[189, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[191, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[192, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[200, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[201, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[202, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[203, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[204, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[205, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[206, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[207, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[208, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[209, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[210, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[211, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[212, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[213, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[214, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[215, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[218, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[219, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[220, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[221, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[222, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[223, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[224, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[225, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[233, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[234, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[235, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[247, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[248, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[249, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[250, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[251, "pyprocar.plotter.DOSPlot.show"]], "update_config() (pyprocar.plotter.dosplot method)": [[252, "pyprocar.plotter.DOSPlot.update_config"]], "ebsplot (class in pyprocar.plotter)": [[253, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[254, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[255, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.legend"]], "plot_atomic_levels() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.plot_atomic_levels"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[265, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[266, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[267, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[268, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[269, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[270, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[271, "pyprocar.plotter.EBSPlot.show"]], "update_config() (pyprocar.plotter.ebsplot method)": [[272, "pyprocar.plotter.EBSPlot.update_config"]], "procarplot (class in pyprocar.plotter)": [[273, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[274, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[275, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[276, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[277, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[278, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "poscar (class in pyprocar.pyposcar)": [[283, "pyprocar.pyposcar.Poscar"]], "__init__() (pyprocar.pyposcar.poscar method)": [[284, "pyprocar.pyposcar.Poscar.__init__"]], "add() (pyprocar.pyposcar.poscar method)": [[285, "pyprocar.pyposcar.Poscar.add"]], "parse() (pyprocar.pyposcar.poscar method)": [[286, "pyprocar.pyposcar.Poscar.parse"]], "remove() (pyprocar.pyposcar.poscar method)": [[287, "pyprocar.pyposcar.Poscar.remove"]], "sort() (pyprocar.pyposcar.poscar method)": [[288, "pyprocar.pyposcar.Poscar.sort"]], "write() (pyprocar.pyposcar.poscar method)": [[289, "pyprocar.pyposcar.Poscar.write"]], "xyz() (pyprocar.pyposcar.poscar method)": [[290, "pyprocar.pyposcar.Poscar.xyz"]], "poscardiff() (in module pyprocar.pyposcar)": [[291, "pyprocar.pyposcar.poscarDiff"]], "poscar_modify (class in pyprocar.pyposcar)": [[292, "pyprocar.pyposcar.poscar_modify"]], "__init__() (pyprocar.pyposcar.poscar_modify method)": [[293, "pyprocar.pyposcar.poscar_modify.__init__"]], "add() (pyprocar.pyposcar.poscar_modify method)": [[294, "pyprocar.pyposcar.poscar_modify.add"]], "change_elements() (pyprocar.pyposcar.poscar_modify method)": [[295, "pyprocar.pyposcar.poscar_modify.change_elements"]], "pos_multiply() (pyprocar.pyposcar.poscar_modify method)": [[296, "pyprocar.pyposcar.poscar_modify.pos_multiply"]], "pos_sum() (pyprocar.pyposcar.poscar_modify method)": [[297, "pyprocar.pyposcar.poscar_modify.pos_sum"]], "remove() (pyprocar.pyposcar.poscar_modify method)": [[298, "pyprocar.pyposcar.poscar_modify.remove"]], "scale_lattice() (pyprocar.pyposcar.poscar_modify method)": [[299, "pyprocar.pyposcar.poscar_modify.scale_lattice"]], "shift() (pyprocar.pyposcar.poscar_modify method)": [[300, "pyprocar.pyposcar.poscar_modify.shift"]], "write() (pyprocar.pyposcar.poscar_modify method)": [[301, "pyprocar.pyposcar.poscar_modify.write"]], "poscar_supercell (class in pyprocar.pyposcar)": [[302, "pyprocar.pyposcar.poscar_supercell"]], "__init__() (pyprocar.pyposcar.poscar_supercell method)": [[303, "pyprocar.pyposcar.poscar_supercell.__init__"]], "supercell() (pyprocar.pyposcar.poscar_supercell method)": [[304, "pyprocar.pyposcar.poscar_supercell.supercell"]], "write() (pyprocar.pyposcar.poscar_supercell method)": [[305, "pyprocar.pyposcar.poscar_supercell.write"]], "fermihandler (class in pyprocar.scripts)": [[309, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[310, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[311, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[312, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[313, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[314, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[315, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "print_default_settings() (pyprocar.scripts.fermihandler method)": [[316, "pyprocar.scripts.FermiHandler.print_default_settings"]], "bandgap() (in module pyprocar.scripts)": [[317, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[318, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[319, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[320, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[321, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[322, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[323, "pyprocar.scripts.fermi2D"]], "fermi3d() (in module pyprocar.scripts)": [[324, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[325, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[326, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[327, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[404, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[404, "module-pyprocar.scripts.scriptBandsplot"], [405, "module-pyprocar.scripts.scriptCat"], [407, "module-pyprocar.scriptDosplot"], [409, "module-pyprocar.scripts.scriptFermi2D"], [410, "module-pyprocar.scripts.scriptFermi3D"], [411, "module-pyprocar.scripts.scriptFilter"], [414, "module-pyprocar.scripts.scriptRepair"], [416, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[404, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[405, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[405, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[407, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[409, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[409, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[410, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[410, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[411, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[411, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[414, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[414, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[416, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[416, "pyprocar.scripts.scriptUnfold.unfold"]]}})