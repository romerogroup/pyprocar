Search.setIndex({"docnames": ["api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_vector_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_color", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.get_symmetry_operations", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plotting_colinear", "examples/00-band_structure/plotting_compare_bands", "examples/00-band_structure/plotting_noncolinear_qe", "examples/00-band_structure/plotting_noncolinear_vasp", "examples/00-band_structure/plotting_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plotting_colinear_dos", "examples/01-dos/plotting_noncolinear_dos_qe", "examples/01-dos/plotting_noncolinear_dos_vasp", "examples/01-dos/plotting_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plotting_bandsdosplot", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plotting_fermi2d", "examples/03-fermi2d/plotting_fermi2d_spin_texture", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plotting_de_hass_van_alphen", "examples/04-fermi3d/plotting_fermi3d_cross_section", "examples/04-fermi3d/plotting_fermi3d_isoslider", "examples/04-fermi3d/plotting_fermi3d_isovalue_gif", "examples/04-fermi3d/plotting_fermi3d_plain", "examples/04-fermi3d/plotting_fermi3d_spin-polarized", "examples/04-fermi3d/plotting_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plotting_2dkmesh_generation", "examples/05-other/plotting_bandgap", "examples/05-other/plotting_kpath_generation", "examples/05-other/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_vector_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_color.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.get_symmetry_operations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plotting_colinear.rst", "examples\\00-band_structure\\plotting_compare_bands.rst", "examples\\00-band_structure\\plotting_noncolinear_qe.rst", "examples\\00-band_structure\\plotting_noncolinear_vasp.rst", "examples\\00-band_structure\\plotting_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plotting_colinear_dos.rst", "examples\\01-dos\\plotting_noncolinear_dos_qe.rst", "examples\\01-dos\\plotting_noncolinear_dos_vasp.rst", "examples\\01-dos\\plotting_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plotting_bandsdosplot.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plotting_fermi2d.rst", "examples\\03-fermi2d\\plotting_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plotting_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plotting_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plotting_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plotting_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plotting_fermi3d_plain.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plotting_2dkmesh_generation.rst", "examples\\05-other\\plotting_bandgap.rst", "examples\\05-other\\plotting_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient_mesh", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_sum", "ibz2fbz", "index_mesh", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "unfold", "update_bands_gradient_mesh", "update_bands_hessian_mesh", "update_bands_mesh", "update_index_mesh", "update_kpoints_cartesian_mesh", "update_kpoints_mesh", "update_projected_mesh", "update_projected_phase_mesh", "update_weights", "update_weights_mesh", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "calculate_effective_mass", "calculate_fermi_speed", "calculate_fermi_velocity", "calculate_first_and_second_derivative_energy", "calculate_first_and_second_derivative_energy_band", "create_spin_texture", "create_vector_texture", "extend_surface", "project_atomic_projections", "project_color", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "get_symmetry_operations", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting fermi2d noncolinear", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"class": [0, 3, 12, 54, 60, 61, 74, 81, 90, 116, 125, 126, 128, 129, 130, 132, 133, 135, 137, 139, 141, 144, 157, 166, 167, 168, 170, 176, 178, 184, 229, 248, 266, 275, 276, 277, 335, 336, 337, 338, 339, 340, 341, 349, 359, 361, 364, 366], "reciprocal_lattic": [0, 1, 12, 13, 61, 62, 137, 138, 153, 178, 179, 359, 366], "ndarrai": [0, 1, 3, 4, 12, 13, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 69, 72, 74, 75, 83, 84, 85, 104, 105, 106, 111, 113, 114, 116, 117, 122, 123, 153, 162, 175, 178, 179, 180, 181, 186, 187, 193, 211, 254, 255, 256, 285, 286, 355], "transformation_matrix": [0, 1, 39, 42, 83, 84, 114, 367], "option": [0, 1, 3, 4, 6, 12, 13, 22, 39, 42, 54, 55, 59, 60, 61, 62, 69, 70, 72, 74, 75, 82, 89, 101, 102, 103, 104, 105, 114, 116, 117, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 176, 178, 179, 183, 184, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 307, 313, 349, 355, 356, 360, 361, 362, 367], "list": [0, 1, 6, 12, 13, 22, 24, 51, 54, 55, 59, 60, 61, 62, 69, 70, 74, 75, 76, 80, 82, 87, 88, 90, 94, 107, 112, 116, 118, 120, 122, 129, 132, 141, 143, 147, 148, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 196, 210, 219, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 248, 249, 252, 254, 255, 256, 260, 261, 263, 264, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 310, 311, 331, 332, 349, 355, 356, 358, 359, 360, 361, 362], "int": [0, 1, 3, 4, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 60, 61, 62, 67, 70, 74, 75, 77, 78, 79, 86, 102, 108, 109, 147, 153, 154, 163, 178, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 248, 249, 254, 255, 256, 261, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 355, 356, 360, 361, 362], "none": [0, 1, 3, 4, 5, 6, 12, 13, 22, 39, 42, 51, 54, 55, 58, 60, 61, 62, 70, 72, 74, 75, 81, 82, 90, 91, 105, 116, 117, 119, 121, 137, 138, 139, 140, 144, 145, 147, 153, 176, 177, 178, 179, 183, 184, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 331, 332, 349, 355, 356, 360, 361, 362, 367], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 17, 18, 19, 20, 21, 22, 23, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 89, 90, 91, 101, 102, 103, 104, 105, 110, 113, 114, 116, 117, 119, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 157, 158, 160, 162, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 182, 183, 184, 185, 188, 201, 202, 203, 204, 205, 206, 214, 216, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 352, 353, 355, 356, 360, 361, 362, 365, 367], "A": [0, 3, 12, 51, 54, 58, 61, 83, 84, 90, 105, 110, 113, 118, 120, 143, 148, 153, 168, 170, 176, 178, 183, 184, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 308, 328, 331, 332, 335, 344, 346, 349, 354, 355, 356, 360, 361, 362, 367], "surfac": [0, 54, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 80, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 231, 277, 278, 279, 280, 281, 282, 289, 290, 300, 304, 334, 337, 338, 342, 344, 348, 349, 352, 353, 354, 355, 360, 363], "object": [0, 12, 54, 61, 82, 116, 121, 146, 147, 148, 157, 178, 192, 193, 207, 211, 212, 229, 248, 282, 288, 290, 315, 316, 317, 318, 319, 322, 323, 324, 325, 335, 336, 337, 338, 339, 340, 341, 349, 359, 361, 363, 364, 366], "vert": [0, 2, 74, 116, 117], "face": [0, 2, 116, 117, 118, 120, 122, 129, 133, 361], "line": [0, 231, 236, 250, 288, 319, 325, 336, 346, 349, 351, 361, 363, 367], "represent": [0, 27, 28, 43, 44, 45, 47, 48, 49, 50, 52, 74, 359, 361], "repres": [0, 14, 15, 61, 90, 116, 122, 141, 189, 190, 191, 219, 237, 288, 290, 349, 358, 361, 367], "thi": [0, 3, 5, 8, 12, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 59, 60, 61, 68, 69, 74, 80, 116, 119, 128, 129, 130, 133, 134, 135, 137, 139, 141, 143, 147, 157, 160, 188, 201, 202, 203, 204, 209, 215, 220, 221, 224, 274, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 292, 293, 304, 307, 309, 311, 313, 316, 332, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "calcul": [0, 2, 3, 17, 18, 22, 25, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 144, 154, 157, 163, 167, 178, 183, 189, 190, 191, 192, 197, 207, 210, 211, 212, 213, 215, 216, 221, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 304, 307, 308, 309, 310, 319, 325, 340, 345, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "correspond": [0, 51, 54, 69, 74, 111, 289, 349, 354, 355, 360, 362, 367], "reciproc": [0, 12, 39, 61, 70, 111, 124, 126, 129, 139, 153, 174, 178, 313, 355, 367], "lattic": [0, 12, 23, 39, 61, 70, 90, 91, 92, 93, 95, 96, 97, 100, 105, 106, 111, 114, 124, 126, 129, 132, 139, 153, 174, 178, 308, 313, 355, 366, 367], "paramet": [0, 3, 6, 12, 17, 22, 23, 39, 42, 51, 54, 58, 59, 60, 61, 67, 69, 70, 72, 74, 82, 83, 84, 89, 90, 101, 102, 103, 104, 105, 113, 114, 116, 119, 121, 122, 123, 141, 143, 144, 147, 153, 157, 167, 168, 170, 176, 178, 183, 184, 207, 221, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 311, 313, 346, 349, 355, 356, 357, 358, 360, 361, 362, 365, 367], "np": [0, 3, 12, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 69, 72, 74, 83, 84, 85, 104, 105, 106, 111, 113, 114, 123, 153, 162, 174, 175, 178, 180, 181, 186, 187, 193, 211, 254, 255, 256, 285, 286, 288, 345, 346, 355, 367], "us": [0, 42, 54, 61, 74, 80, 116, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 148, 157, 167, 183, 193, 207, 211, 212, 215, 221, 222, 223, 224, 225, 226, 227, 228, 235, 236, 268, 272, 273, 274, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289, 290, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 319, 325, 331, 332, 336, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "gener": [0, 74, 124, 128, 129, 130, 133, 137, 278, 287, 288, 289, 290, 291, 303, 304, 305, 307, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 352, 353, 356, 358, 360, 361, 362, 363], "brillouin": [0, 39, 74, 124, 129, 278, 279, 280, 281, 282, 290, 356, 360, 361, 367], "zone": [0, 39, 74, 124, 129, 278, 279, 280, 281, 282, 290, 356, 359, 360, 361, 367], "usgin": 0, "wigner": [0, 2, 363], "seitz": [0, 2, 363], "3": [0, 3, 5, 6, 12, 14, 15, 17, 27, 28, 42, 61, 74, 90, 116, 118, 147, 278, 288, 290, 310, 331, 335, 339, 340, 346, 349, 351, 360, 361, 362, 363, 367], "float": [0, 6, 12, 13, 22, 39, 51, 58, 61, 62, 74, 75, 76, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 115, 116, 118, 121, 153, 178, 179, 183, 184, 185, 231, 235, 236, 237, 238, 239, 250, 254, 255, 256, 260, 263, 264, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 355, 360, 361], "ani": [0, 3, 4, 61, 201, 204, 288, 290, 349, 355, 357, 360, 361, 365], "transform": [0, 42, 74, 83, 84, 113, 349, 355], "appli": [0, 23, 74, 277, 349, 354, 355, 365], "unit": [0, 115], "cell": [0, 2, 74, 98, 99, 109, 112, 115, 352, 353, 361, 367], "rotat": [0, 23, 90, 91, 176, 177, 289, 331, 332, 359, 361, 363, 366], "supercel": [0, 61, 62, 278, 279, 280, 281, 282, 290, 361, 362, 367], "default": [0, 3, 6, 12, 22, 39, 42, 54, 59, 60, 61, 69, 70, 72, 74, 82, 89, 101, 102, 103, 104, 105, 114, 116, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 176, 178, 183, 184, 229, 231, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 313, 319, 325, 332, 355, 356, 358, 360, 361, 362], "method": [0, 3, 12, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 81, 83, 84, 90, 105, 110, 113, 116, 135, 137, 139, 141, 143, 144, 153, 157, 160, 166, 168, 170, 176, 178, 183, 184, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 335, 336, 337, 338, 339, 340, 341, 349, 355, 359, 363], "attribut": [0, 3, 12, 61, 74, 81, 90, 116, 144, 157, 170, 178, 184, 316, 349, 359], "brillouinzon": [1, 2, 129], "initi": [1, 62, 75, 117, 146, 208, 277, 279, 280, 336, 349], "polydata": [1, 39, 62, 75, 116, 117, 129, 133], "form": [2, 175, 211, 212, 349, 359], "tupl": [2, 61, 70, 80, 116, 278, 279, 280, 281, 282, 288, 290, 361], "contain": [2, 3, 54, 61, 74, 82, 120, 139, 260, 263, 284, 288, 289, 290, 304, 313, 331, 332, 349, 355, 360, 361, 362], "return": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 174, 175, 180, 181, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 229, 231, 232, 233, 234, 240, 241, 244, 247, 248, 253, 281, 282, 283, 288, 289, 290, 291, 316, 349, 360, 361], "type": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 129, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 174, 175, 180, 181, 186, 187, 188, 192, 193, 194, 195, 207, 211, 212, 216, 229, 231, 232, 233, 234, 240, 241, 244, 247, 248, 253, 274, 281, 282, 283, 285, 286, 288, 289, 290, 291, 304, 349, 354, 355, 360, 361], "n_vert": 2, "n_face": 2, "energi": [3, 4, 10, 12, 54, 58, 59, 60, 61, 125, 126, 127, 129, 139, 150, 153, 172, 178, 198, 213, 268, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 313, 331, 332, 335, 336, 337, 338, 339, 340, 341, 352, 353, 355, 359, 360, 361, 363, 367], "dtype": [3, 4], "float64": [3, 4], "total": [3, 4, 125, 129, 149, 150, 194, 195, 235, 237, 238, 239, 288, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 355, 356, 358, 362, 363], "project": [3, 4, 5, 12, 13, 22, 23, 40, 41, 49, 50, 54, 60, 61, 71, 72, 73, 125, 126, 127, 129, 147, 148, 149, 157, 183, 187, 193, 194, 235, 236, 254, 255, 256, 278, 279, 280, 281, 282, 285, 286, 288, 290, 311, 313, 315, 317, 318, 319, 322, 323, 324, 325, 331, 340, 349, 352, 353, 356, 357, 358, 359, 361, 362, 363], "interpolation_factor": [3, 4, 61, 62, 74, 75, 153, 178, 179, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 355, 361, 367], "1": [3, 4, 5, 6, 12, 22, 53, 61, 62, 74, 75, 80, 114, 116, 147, 153, 178, 179, 184, 185, 231, 235, 236, 238, 239, 250, 269, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 310, 311, 315, 317, 318, 319, 322, 323, 324, 325, 331, 332, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 356, 360, 361, 362, 363, 367], "densiti": [3, 6, 125, 129, 134, 144, 149, 150, 157, 194, 224, 229, 234, 235, 274, 284, 288, 289, 295, 299, 304, 309, 310, 326, 352, 353, 354, 355, 360, 362, 363, 366], "state": [3, 6, 74, 125, 129, 134, 144, 149, 150, 194, 229, 234, 235, 274, 284, 288, 289, 295, 299, 304, 310, 326, 349, 352, 353, 354, 355, 360, 363], "function": [3, 61, 74, 80, 119, 137, 147, 188, 201, 202, 203, 204, 220, 224, 283, 284, 285, 286, 288, 289, 290, 298, 300, 304, 307, 309, 313, 349, 352, 353, 355, 357, 358, 360, 361, 363, 367], "theori": [3, 288, 309, 353], "point": [3, 23, 24, 35, 37, 39, 74, 76, 77, 78, 79, 82, 105, 127, 129, 130, 135, 175, 182, 254, 255, 256, 268, 284, 288, 290, 291, 344, 346, 352, 353, 357, 359, 360, 361, 363, 367], "spectrum": 3, "shape": [3, 12, 14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "n_do": 3, "each": [3, 14, 15, 16, 40, 41, 53, 61, 74, 76, 107, 116, 125, 129, 196, 206, 210, 252, 254, 255, 256, 288, 290, 349, 354, 355, 356, 357, 358, 359, 361, 362, 363], "element": [3, 151, 152, 155, 159, 161, 164, 201, 204, 252, 288, 362], "orbit": [3, 5, 6, 7, 12, 22, 36, 60, 61, 147, 235, 236, 237, 238, 239, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 316, 317, 318, 319, 322, 323, 324, 325, 331, 332, 339, 340, 352, 353, 357, 358, 359, 360, 361, 363, 367], "spin": [3, 6, 11, 22, 38, 54, 60, 61, 68, 73, 127, 141, 147, 150, 234, 235, 236, 237, 238, 239, 248, 249, 254, 255, 256, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 304, 308, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 328, 331, 334, 335, 337, 338, 339, 342, 344, 345, 346, 348, 349, 352, 353, 356, 358, 359, 361, 363, 367], "etc": [3, 354, 355], "n_atom": [3, 12, 40, 41, 54], "n_princip": 3, "n_orbit": [3, 40, 41, 54], "n_spin": [3, 12, 40, 41, 54, 125, 129], "i_princip": 3, "work": [3, 61, 290, 328, 331, 349, 350, 355, 360, 361], "like": [3, 60, 349, 354, 355, 359], "princip": [3, 22, 37, 235, 236, 238, 239], "quantum": [3, 6, 22, 37, 157, 223, 224, 225, 226, 227, 235, 236, 238, 239, 309, 310, 314, 320, 321, 326, 348, 353, 354, 355, 359, 363], "number": [3, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 61, 72, 77, 78, 79, 86, 94, 101, 102, 108, 109, 122, 154, 163, 235, 236, 238, 239, 278, 281, 288, 290, 291, 349, 355, 357, 359, 361, 363, 364, 365], "n": [3, 6, 61, 74, 90, 118, 313, 363, 364], "The": [3, 6, 9, 10, 11, 12, 17, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 54, 58, 59, 60, 61, 67, 69, 72, 74, 77, 78, 79, 82, 83, 84, 86, 87, 88, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 141, 144, 150, 153, 157, 167, 168, 170, 175, 176, 178, 180, 181, 183, 184, 186, 187, 192, 194, 222, 223, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 242, 244, 245, 248, 250, 254, 255, 256, 264, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 310, 311, 313, 319, 322, 325, 328, 335, 345, 346, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "last": [3, 151, 155, 159, 164, 172, 174, 190, 197, 213, 218, 355], "index": [3, 6, 24, 46, 54, 67, 147, 282, 289, 353, 354, 355, 359, 360, 362, 363], "should": [3, 22, 84, 122, 182, 202, 287, 288, 345, 349, 354, 355, 356, 360, 362, 367], "0": [3, 5, 6, 39, 60, 61, 62, 74, 80, 114, 116, 147, 182, 184, 185, 235, 250, 270, 278, 279, 280, 281, 282, 288, 289, 290, 292, 308, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 354, 355, 358, 360, 361, 362, 363, 364, 365, 367], "2": [3, 5, 6, 61, 74, 80, 147, 288, 290, 310, 311, 313, 315, 317, 318, 319, 325, 331, 332, 335, 337, 338, 339, 340, 349, 360, 361, 362, 363, 367], "": [3, 5, 6, 134, 147, 288, 290, 307, 335, 346, 349, 354, 358, 360, 361, 362, 363], "p": [3, 5, 288, 290, 313, 315, 354, 358, 361, 362, 364], "d": [3, 5, 14, 15, 288, 290, 315, 349, 354, 355, 357, 358, 361], "i_orbit": 3, "similar": [3, 288, 290, 307, 349, 358, 361], "angular": [3, 363], "l": [3, 5, 311, 354, 355, 363, 367], "same": [3, 6, 84, 90, 122, 284, 290, 295, 304, 308, 310, 311, 313, 319, 325, 349, 354, 355, 357, 358, 360, 361, 362, 363], "follow": [3, 74, 129, 182, 224, 274, 288, 290, 304, 308, 310, 311, 313, 332, 344, 346, 349, 351, 354, 355, 356, 358, 359, 361, 362, 363, 367], "order": [3, 5, 6, 90, 288, 290, 346, 349, 354, 355, 357, 361], "4": [3, 5, 6, 39, 61, 147, 288, 290, 315, 316, 318, 319, 322, 324, 325, 331, 332, 335, 336, 339, 340, 341, 349, 354, 357, 361, 363, 367], "5": [3, 5, 6, 74, 101, 102, 103, 104, 116, 147, 183, 279, 280, 288, 290, 308, 311, 313, 315, 316, 318, 319, 322, 324, 325, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 349, 354, 355, 357, 361, 363, 364, 367], "6": [3, 6, 60, 147, 288, 289, 290, 308, 315, 316, 318, 319, 322, 324, 325, 328, 331, 332, 336, 337, 338, 339, 340, 341, 344, 346, 349, 354, 355, 357, 360, 361, 363, 364], "7": [3, 6, 147, 288, 290, 315, 316, 318, 319, 322, 324, 325, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 349, 354, 355, 357, 358, 361, 363], "8": [3, 6, 147, 288, 290, 311, 315, 316, 317, 318, 319, 322, 323, 324, 325, 331, 332, 335, 336, 337, 338, 339, 340, 341, 354, 355, 357, 358, 361, 363], "py": [3, 6, 147, 288, 290, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 361, 362, 363], "pz": [3, 6, 147, 288, 290, 361, 362, 363], "px": [3, 6, 147, 288, 290, 361, 362, 363], "dxy": [3, 6, 147, 288, 290, 361, 363], "dyz": [3, 6, 147, 288, 290, 361, 363], "dz2": [3, 6, 147, 288, 290, 361, 363], "dxz": [3, 6, 147, 288, 290, 361, 363], "dx2": [3, 363], "y2": [3, 6, 74, 147, 288, 290, 291, 344, 361], "i_spin": 3, "magnet": [3, 354, 355, 363], "m": [3, 5, 115, 308, 354, 355, 356, 363, 367], "up": [3, 141, 150, 182, 288, 319, 325, 351, 355, 358, 361, 362, 367], "down": [3, 150, 288, 319, 325, 355, 358, 361, 362, 367], "increas": [3, 61, 74, 290, 361, 367], "factor": [3, 61, 74, 144, 153, 178, 184, 278, 279, 280, 281, 282, 286, 288, 290, 361, 367], "interpol": [3, 59, 60, 74, 80, 128, 129, 144, 153, 178, 184, 278, 279, 280, 281, 282, 285, 286, 288, 290, 355, 361], "densityofst": [4, 5, 6, 7, 8, 9, 10, 11, 129, 146, 147, 148, 192, 229, 230, 274], "convert": [5, 188, 363], "coupl": [5, 317, 323, 361], "uncoupl": 5, "assum": [5, 349], "ar": [5, 39, 42, 58, 60, 74, 82, 116, 129, 150, 157, 220, 237, 274, 285, 286, 288, 289, 290, 304, 308, 319, 325, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363], "coupled_orbit": 5, "j": [5, 346, 349, 354], "uncoupled_orbit": 5, "ret": [5, 6, 22, 201, 204], "atom": [6, 22, 33, 60, 61, 71, 73, 90, 91, 94, 107, 108, 129, 132, 147, 148, 154, 157, 163, 235, 236, 237, 238, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 304, 315, 317, 318, 319, 322, 323, 324, 325, 331, 332, 339, 340, 352, 353, 358, 359, 360, 361, 363, 366, 367], "principal_q_numb": [6, 22, 235, 236, 238, 239], "sum_noncolinear": [6, 22], "bool": [6, 8, 12, 22, 25, 39, 60, 82, 84, 105, 168, 183, 235, 236, 237, 238, 239, 255, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 355, 356, 360, 361, 362], "true": [6, 22, 39, 81, 82, 135, 136, 168, 169, 183, 209, 235, 236, 237, 238, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 308, 310, 311, 313, 316, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 346, 355, 356, 358, 360, 361, 365, 367], "tabl": [6, 288, 290, 361, 367], "lm": [6, 354, 355, 363], "tot": [6, 355, 363], "x2": [6, 74, 147, 288, 290, 291, 344, 361], "need": [6, 39, 137, 147, 209, 268, 288, 307, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 355, 357, 358, 361, 362, 367], "sume": [6, 147], "over": [6, 17, 22, 147, 290, 349, 350, 352, 353, 358, 359, 361, 363], "count": [6, 288, 290, 354, 355, 360, 361, 362], "from": [6, 60, 61, 116, 119, 124, 129, 130, 133, 137, 139, 144, 147, 157, 284, 287, 288, 290, 334, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367], "zero": [6, 288, 290, 354, 355, 361, 363], "input": [6, 167, 224, 287, 288, 290, 293, 304, 307, 310, 311, 355, 356, 361, 365], "i": [6, 8, 12, 14, 15, 16, 25, 40, 41, 42, 53, 54, 60, 61, 72, 74, 105, 114, 116, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 143, 157, 167, 182, 202, 209, 222, 223, 224, 225, 226, 227, 228, 229, 234, 248, 272, 273, 274, 275, 277, 284, 286, 287, 288, 289, 290, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 316, 319, 325, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367], "sum": [6, 22, 147, 355, 358, 359], "string": [7, 121, 154, 163, 234, 235, 236, 237, 238, 239, 252, 257, 258, 259, 262, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 336, 355, 356, 360], "current": [7, 42, 310, 353, 354, 355], "basi": [7, 26, 29, 30, 31, 32, 39, 42, 317, 323, 354, 359], "str": [7, 39, 54, 59, 60, 61, 62, 69, 72, 74, 75, 89, 90, 101, 112, 119, 121, 122, 123, 144, 147, 153, 157, 158, 166, 167, 168, 170, 176, 178, 179, 183, 184, 220, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 250, 252, 257, 258, 259, 261, 262, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 355, 356, 360, 361, 362, 365], "properti": [8, 9, 10, 11, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 53, 76, 77, 78, 79, 80, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 111, 112, 115, 118, 120, 146, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 172, 174, 175, 180, 181, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 221, 290, 349, 361], "boolean": [8, 12, 25, 39, 84, 105, 168, 183, 231, 235, 236, 237, 238, 239, 255, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 355, 356, 359, 360, 361], "non": [8, 22, 25, 68, 288, 290, 311, 313, 314, 315, 316, 320, 321, 322, 326, 328, 332, 335, 336, 337, 338, 339, 341, 345, 346, 348, 349, 354, 355, 359, 361, 362, 363, 367], "colinear": [8, 22, 25, 68, 287, 308, 311, 313, 314, 319, 320, 321, 325, 326, 331, 332, 336, 340, 341, 346, 348, 354, 355, 356, 362], "calc": [8, 209], "do": [9, 61, 134, 147, 148, 157, 193, 195, 229, 230, 235, 237, 238, 239, 240, 284, 288, 290, 310, 311, 313, 319, 321, 322, 325, 326, 328, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 354, 355, 357, 358, 361], "valu": [9, 10, 61, 74, 121, 123, 126, 128, 129, 130, 183, 235, 236, 237, 254, 255, 256, 278, 279, 280, 281, 282, 285, 286, 288, 289, 290, 291, 332, 338, 355, 356, 358, 360, 361], "channel": [11, 38, 288, 354, 355, 363], "kpoint": [12, 13, 23, 24, 26, 27, 28, 29, 30, 31, 32, 39, 42, 46, 47, 48, 51, 54, 55, 61, 62, 69, 72, 82, 83, 84, 89, 126, 128, 129, 135, 136, 153, 162, 169, 178, 179, 180, 181, 183, 212, 224, 266, 267, 277, 289, 290, 292, 310, 311, 313, 344, 346, 355, 359, 361, 362, 363, 367], "band": [12, 13, 14, 15, 16, 23, 34, 42, 45, 54, 55, 58, 61, 62, 66, 67, 72, 74, 82, 86, 126, 127, 129, 131, 134, 141, 157, 158, 160, 183, 187, 229, 234, 248, 253, 257, 258, 266, 267, 272, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 292, 296, 297, 301, 302, 304, 308, 310, 320, 325, 328, 335, 336, 337, 338, 339, 340, 341, 345, 346, 352, 353, 354, 358, 360, 361, 362, 363, 364], "efermi": [12, 13, 137, 138, 178, 179, 308, 359, 367], "projected_phas": [12, 13, 50, 359], "weight": [12, 13, 42, 51, 52, 53, 126, 129, 212, 254, 255, 256, 310, 359, 362, 363, 367], "kpath": [12, 13, 39, 82, 83, 84, 85, 86, 87, 88, 89, 126, 129, 137, 138, 160, 178, 179, 248, 249, 284, 304, 310, 346, 359, 363], "label": [12, 13, 56, 57, 82, 233, 235, 236, 237, 238, 239, 241, 244, 252, 259, 262, 284, 288, 289, 310, 311, 313, 346, 355, 358, 359, 360, 363, 367], "store": [12, 14, 15, 16, 24, 40, 41, 53, 61, 125, 126, 128, 129, 131, 132, 220, 277, 290, 359, 361, 362], "electron": [12, 126, 129, 134, 153, 186, 189, 190, 196, 210, 229, 248, 272, 274, 328, 331, 332, 344, 346, 349, 352, 353, 354, 355, 361, 363], "structur": [12, 42, 61, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 129, 131, 134, 139, 151, 152, 157, 159, 161, 178, 179, 183, 199, 201, 205, 208, 229, 230, 248, 253, 258, 266, 274, 275, 284, 292, 296, 297, 301, 302, 304, 308, 310, 320, 328, 331, 332, 344, 345, 346, 349, 352, 353, 354, 357, 358, 362, 363, 364, 367], "informomr": 12, "arrai": [12, 14, 15, 16, 40, 41, 53, 54, 60, 61, 69, 72, 85, 114, 125, 127, 129, 130, 132, 148, 193, 206, 288, 290, 292, 346, 354, 355, 359, 361, 367], "Will": 12, "have": [12, 209, 288, 290, 304, 310, 349, 350, 357, 358, 359, 360, 361, 362, 363], "n_kpoint": [12, 54, 60], "n_band": [12, 14, 15, 16, 40, 41, 54, 60], "fermi": [12, 54, 59, 60, 61, 62, 64, 65, 68, 69, 72, 126, 127, 128, 129, 134, 139, 153, 172, 178, 231, 250, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 300, 304, 310, 331, 332, 336, 337, 338, 339, 340, 341, 342, 344, 349, 352, 353, 354, 355, 359, 360, 362, 363, 367], "norbit": [12, 359], "full": [12, 288, 290, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 356, 359, 361], "incud": 12, "complex": [12, 359], "part": [12, 191, 349, 361], "clacul": 12, "name": [12, 69, 72, 87, 122, 123, 144, 153, 157, 241, 243, 244, 246, 257, 259, 261, 262, 277, 278, 279, 280, 281, 283, 284, 285, 286, 290, 349, 354, 355, 361, 362, 367], "vector": [12, 69, 90, 92, 93, 95, 96, 97, 100, 116, 117, 123, 139, 174, 259, 290, 313, 354, 355, 361], "matrix": [12, 39, 42, 74, 83, 84, 90, 105, 111, 113, 114, 124, 129, 132, 153, 175, 178, 289, 360, 361, 367], "shifted_to_efermi": [12, 359], "determin": [12, 22, 25, 39, 60, 82, 84, 105, 168, 289, 349, 360], "shift": [12, 61, 80, 278, 279, 280, 281, 282, 361], "fals": [12, 39, 60, 84, 239, 255, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 311, 316, 331, 332, 336, 355, 356, 357, 360, 361, 362, 367], "electronicbandstructur": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 129, 248, 249, 274, 363, 364], "gradient": [14, 17, 359], "mesh": [14, 15, 16, 17, 24, 27, 28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 69, 279, 280, 303, 313, 344, 352, 353, 359, 361, 363], "numpi": [14, 15, 16, 40, 41, 53, 54, 60, 61, 74, 125, 127, 129, 130, 132, 288, 290, 345, 346, 351, 359, 361, 367], "grid": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 74, 76, 77, 78, 79, 84, 284, 288, 290, 313, 344, 346, 355, 359, 360, 361], "n_kx": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 359], "n_ky": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 359], "n_kz": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 359], "where": [14, 15, 157, 237, 277, 285, 286, 289, 290, 304, 311, 336, 349, 355, 356, 360, 361, 362, 363], "first": [14, 15, 66, 67, 74, 92, 96, 100, 152, 161, 308, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 346, 349, 357, 360, 361, 362, 367], "dimens": [14, 15], "dx": [14, 15], "dy": [14, 15], "dz": [14, 15], "fradient": 14, "hessian": [15, 359], "second": [15, 67, 93, 95, 100, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "scalar_mesh": [17, 18], "scalar": [17, 18, 72, 116, 117, 122, 128, 129, 130], "k": [17, 35, 39, 127, 129, 131, 135, 182, 259, 268, 303, 304, 308, 310, 316, 344, 352, 353, 356, 357, 359, 360, 361, 363, 367], "cartesian": [17, 26, 27, 39, 61, 162, 180, 359, 363], "coordin": [17, 61, 74, 129, 130, 132, 162, 180, 181, 291, 344, 359, 363], "scalar_gradient_mesh": 17, "integr": 18, "nd_list": 19, "scalar_list": 20, "vector_list": 21, "_summary_": [22, 291], "symmetri": [23, 82, 101, 102, 103, 104, 168, 175, 183, 277, 331, 332, 355, 356, 359, 361], "oper": [23, 175, 349, 360], "particular": [24, 290, 310, 349, 359, 360, 361, 362], "rtype": [27, 28], "fraction": [29, 90, 129, 132], "uniqu": [30, 31, 32, 346, 359], "kx": [30, 31], "direct": [30, 31, 32, 61, 70, 74, 76, 77, 78, 79, 278, 279, 280, 281, 282, 288, 290, 291, 344, 349, 354, 355, 356, 359, 360, 361, 362], "reduc": [30, 31, 32, 39, 181, 277, 359, 362, 363], "ky": 32, "numbersk": 37, "show_brillouin_zon": 39, "color": [39, 54, 60, 61, 62, 116, 121, 122, 231, 234, 235, 236, 237, 238, 239, 250, 254, 255, 256, 261, 270, 278, 279, 280, 281, 282, 284, 288, 289, 290, 316, 319, 325, 331, 344, 346, 354, 355, 357, 358, 360, 361, 367], "r": [39, 262, 288, 308, 355, 358, 361], "point_siz": [39, 344, 346], "render_points_as_spher": [39, 344, 346], "move": [39, 313, 361], "core": [39, 42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 178, 183, 192, 193, 211, 212, 219, 229, 248, 332, 361], "updat": [39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 122, 123, 349], "new": [39, 42, 182, 290, 349, 361, 362], "implement": [39, 268, 349, 355], "pyvista": [39, 74, 116, 129, 133, 290, 335, 336, 337, 338, 339, 340, 341, 344, 346, 351, 361], "plot": [39, 54, 56, 57, 60, 110, 127, 129, 131, 134, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 265, 266, 268, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 295, 296, 297, 299, 300, 301, 302, 304, 308, 314, 320, 321, 326, 329, 330, 333, 334, 335, 342, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 365], "wether": 39, "show": [39, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 310, 311, 313, 316, 334, 336, 337, 339, 340, 341, 342, 344, 346, 348, 349, 355, 357, 358, 360, 361, 367], "size": [39, 42, 54, 60, 61, 72, 84, 122, 270, 271, 278, 279, 280, 281, 282, 284, 289, 290, 336, 346, 360, 361, 362, 367], "how": [39, 82, 134, 290, 311, 334, 342, 348, 349, 361], "render": [39, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 361], "phase": [41, 50, 126, 129, 313, 359, 367], "help": [42, 54, 127, 129, 144, 309, 311, 313, 349, 350, 362, 367], "done": [42, 279, 280, 288, 313, 328, 345, 351, 356, 360], "find": [42, 58, 59, 60, 61, 74, 80, 172, 174, 175, 283, 343, 347, 348, 349, 355, 367], "expect": [42, 54, 126, 127, 129, 132, 274, 304, 349], "pyprocar": [42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 183, 192, 193, 222, 223, 224, 225, 226, 227, 228, 272, 273, 274, 275, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "materi": [42, 101, 102, 290, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346, 349, 354, 355, 357, 361], "bands_gradi": 43, "bands_hessian": 44, "spd": [54, 55, 61, 62, 266, 267], "band_indic": [54, 55, 289, 331, 332, 360], "band_color": [54, 55, 289, 331, 332, 360], "cmap": [54, 55, 61, 62, 121, 235, 236, 268, 269, 271, 278, 279, 280, 281, 282, 284, 288, 289, 290, 340, 354, 355, 360, 361], "jet": [54, 55, 235, 236, 269, 278, 279, 280, 281, 282, 284, 288, 289, 290, 340, 355, 357, 360, 361], "loglevel": [54, 55], "30": [54, 55, 288, 311, 349], "2d": [54, 59, 60, 127, 129, 279, 280, 286, 289, 290, 297, 300, 302, 303, 304, 332, 344, 352, 353, 361, 363], "nx3": 54, "alreadi": [54, 60, 349], "substract": 54, "n_kppint": 54, "indic": [54, 288, 289, 290, 315, 317, 318, 319, 322, 323, 324, 325, 349, 355, 360, 361, 367], "given": [54, 58, 127, 129, 147, 289, 331, 335, 340, 344, 346, 349, 352, 353, 355, 358, 360, 367], "_type_": [54, 144, 281, 284, 285, 286, 291, 293, 355, 362, 365], "verbos": [54, 284, 288], "level": [54, 59, 60, 268, 284, 290, 332, 337, 338, 354, 355, 361, 362], "log": 54, "warn": 54, "fermisurfac": [55, 56, 57, 58, 59, 60, 129, 282, 332], "add": [56, 57, 61, 268, 279, 280, 288, 289, 311, 349, 360], "matplotlib": [56, 57, 59, 229, 248, 285, 286, 288, 289, 290, 316, 351, 354, 361, 363], "which": [58, 66, 74, 120, 147, 288, 289, 290, 304, 311, 313, 319, 325, 340, 349, 354, 355, 359, 360, 361, 364, 367], "search": [58, 61, 278, 279, 280, 281, 282, 290, 337, 338, 353, 361], "around": [58, 290, 337, 338, 361, 363], "rais": [58, 59, 60, 114, 184, 281, 289, 360, 362], "runtimeerror": [58, 59, 60, 289, 360, 362], "If": [58, 61, 229, 248, 287, 288, 290, 313, 336, 349, 350, 355, 356, 358, 361, 362], "found": [58, 172, 182, 184, 311, 332, 345, 346, 349, 358, 363], "an": [58, 74, 85, 128, 129, 130, 133, 206, 229, 248, 281, 282, 307, 313, 316, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 354, 355, 358, 361, 363], "error": [58, 59, 60, 114, 182, 209, 356, 360], "mode": [59, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 304, 310, 311, 313, 316, 332, 335, 336, 349, 354, 355, 357, 360, 361, 363, 367], "500": 59, "along": [59, 60, 85, 349, 356, 359, 364], "z": [59, 60, 74, 76, 79, 123, 289, 291, 332, 344, 360, 361, 362, 363], "axi": [59, 288, 360], "onli": [59, 60, 89, 116, 182, 277, 288, 290, 310, 322, 325, 331, 332, 349, 350, 354, 355, 361, 362], "layer": [59, 60, 361], "geometri": [59, 60, 367], "set": [59, 74, 121, 122, 123, 174, 204, 241, 242, 243, 244, 245, 246, 258, 259, 260, 261, 262, 263, 264, 287, 288, 289, 290, 307, 308, 310, 311, 313, 319, 325, 328, 332, 346, 352, 353, 354, 355, 356, 357, 358, 360, 361, 365, 367], "pyplot": [59, 289, 363], "instanc": [59, 304, 354, 355, 365, 367], "wa": [59, 60, 288, 349, 355, 363], "call": [59, 60, 277, 293, 304, 310, 311, 313, 335, 336, 337, 338, 339, 340, 341, 349, 357, 361, 365], "befor": [59, 60, 360, 365, 367], "sx": 60, "sy": 60, "sz": 60, "arrow_project": [60, 289, 332, 360], "no_arrow": [60, 289, 331, 332, 360], "300": 60, "arrow_color": [60, 278, 279, 280, 281, 282, 289, 290, 332, 360, 361], "arrow_s": [60, 278, 279, 280, 281, 282, 289, 290, 332, 336, 341, 360, 361], "05": [60, 101, 102, 103, 104, 183, 292, 333, 342, 346], "arrow_dens": [60, 289, 332, 360], "color_bar": [60, 289, 332, 360], "textur": [60, 68, 73, 127, 278, 279, 280, 281, 282, 290, 344, 349, 354, 355, 361, 363], "It": [60, 141, 182, 268, 288, 349, 354, 355, 360], "enhanc": 60, "version": [60, 307, 328, 331, 332, 344, 346, 349, 350, 351, 358, 361, 362], "nkpoint": [60, 359], "x": [60, 74, 76, 77, 123, 241, 242, 259, 260, 261, 288, 291, 307, 308, 310, 311, 332, 344, 351, 355, 360, 361, 362, 363], "nband": [60, 359, 363], "thei": [60, 182, 349, 357], "also": [60, 290, 307, 311, 319, 325, 331, 332, 349, 354, 355, 360, 361, 367], "other": [60, 74, 201, 288, 290, 346, 347, 349, 355, 359, 360, 361, 362, 363, 365], "compon": [60, 349, 360, 362, 363], "y": [60, 74, 76, 78, 123, 244, 245, 262, 263, 264, 288, 291, 332, 344, 346, 360, 361, 362, 363], "marker": [60, 270, 271], "arrow": [60, 278, 279, 280, 281, 282, 289, 290, 332, 360, 361], "whether": [60, 288, 349, 367], "eb": [61, 62, 157, 248, 249, 319, 325, 359, 364], "bands_to_keep": [61, 62], "spd_spin": [61, 62], "fermi_shift": [61, 62, 278, 279, 280, 281, 282, 290, 361], "fermi_toler": [61, 62, 278, 279, 280, 281, 282, 290, 361], "surface_color": [61, 62], "projection_accuraci": [61, 62, 278, 279, 280, 281, 282, 290, 361], "normal": [61, 62, 116, 121, 235, 236, 254, 255, 256, 278, 279, 280, 281, 282, 285, 286, 290, 349, 355, 360, 361], "viridi": [61, 62, 121], "vmin": [61, 62, 121, 235, 236, 254, 255, 256, 268, 269, 271, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 315, 317, 318, 319, 322, 323, 324, 325, 337, 338, 339, 355, 360, 361, 367], "vmax": [61, 62, 121, 235, 236, 254, 255, 256, 268, 269, 271, 278, 279, 280, 281, 282, 284, 285, 286, 288, 290, 315, 317, 318, 319, 322, 323, 324, 325, 337, 338, 339, 355, 360, 361, 367], "manapul": 61, "3d": [61, 68, 69, 72, 128, 129, 282, 290, 304, 352, 353, 363], "dft": [61, 134, 288, 290, 310, 346, 349, 352, 353, 354, 355, 356, 358, 359, 361, 363, 366, 367], "ha": [61, 74, 129, 137, 167, 168, 221, 224, 274, 288, 290, 304, 307, 310, 311, 313, 316, 335, 349, 361, 367], "being": [61, 288, 349], "differ": [61, 112, 288, 290, 310, 311, 313, 317, 323, 349, 355, 356, 357, 358, 361], "ith": 61, "coorespond": 61, "one": [61, 74, 80, 116, 172, 174, 268, 277, 288, 290, 310, 311, 313, 332, 346, 349, 354, 355, 356, 358, 360, 361, 362], "want": [61, 74, 116, 288, 290, 336, 349, 350, 360, 361, 362], "isosurfac": [61, 75, 76, 77, 78, 79, 80, 128, 129, 278, 279, 280, 281, 282, 337, 338, 361], "inform": [61, 116, 125, 126, 129, 131, 132, 135, 141, 144, 153, 160, 167, 203, 210, 212, 215, 216, 304, 313, 316, 332, 344, 346, 349, 354, 355, 358, 359, 361, 362, 363], "about": [61, 116, 134, 215, 216, 316, 332, 349, 350, 358, 361], "improv": [61, 290, 361], "effienc": [61, 290, 361], "prior": [61, 137, 290, 349, 351, 361], "select": [61, 288, 290, 319, 325, 358, 361, 363], "within": [61, 290, 332, 346, 349, 351, 355, 361, 362, 363, 367], "toler": [61, 101, 102, 103, 104, 278, 279, 280, 281, 282, 290, 346, 361], "everi": [61, 288, 349, 352, 353, 363], "you": [61, 134, 290, 309, 310, 311, 313, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 350, 351, 358, 359, 361, 362, 364, 366, 367], "rgba": [61, 290, 361], "argument": [61, 284, 288, 290, 304, 328, 336, 349, 358, 359, 361, 364, 366], "doe": [61, 288, 290, 331, 349, 358, 360, 361, 362], "whena": [61, 290, 361], "file": [61, 89, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 172, 175, 176, 178, 184, 222, 223, 225, 226, 227, 228, 257, 277, 282, 283, 284, 287, 288, 289, 290, 292, 293, 298, 304, 306, 307, 308, 310, 311, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 349, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 365, 367], "save": [61, 157, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 311, 331, 332, 355, 357, 360, 361, 367], "when": [61, 277, 278, 279, 280, 281, 282, 289, 290, 307, 313, 316, 319, 325, 335, 336, 337, 338, 339, 340, 341, 344, 346, 349, 354, 356, 357, 360, 361, 362, 364], "save3d": [61, 290, 361], "we": [61, 209, 288, 290, 310, 311, 313, 335, 349, 350, 354, 358, 360, 361, 363, 367], "recomend": [61, 290, 361], "qualit": [61, 290, 361], "colormap": [61, 121, 236, 278, 279, 280, 281, 282, 288, 289, 290, 357, 360, 361], "automat": [61, 288, 290, 313, 344, 346, 349, 355, 361], "choos": [61, 288, 290, 349, 361], "e": [61, 74, 172, 262, 288, 290, 311, 335, 349, 355, 358, 360, 361, 362], "g": [61, 74, 288, 290, 310, 311, 335, 346, 355, 356, 360, 361, 362], "red": [61, 288, 290, 332, 340, 346, 355, 361], "blue": [61, 231, 234, 250, 270, 288, 290, 331, 332, 340, 344, 346, 355, 361, 367], "green": [61, 288, 290, 361], "control": [61, 290, 310, 349, 361], "accuraci": [61, 290, 361], "high": [61, 290, 355, 356, 361], "map": [61, 69, 82, 116, 121, 122, 235, 288, 289, 290, 354, 355, 360, 361], "minimum": [61, 116, 121, 235, 236, 254, 255, 256, 278, 279, 280, 281, 282, 285, 286, 288, 290, 355, 360, 361, 362], "maximum": [61, 121, 235, 254, 255, 256, 278, 279, 280, 281, 282, 285, 286, 288, 290, 355, 360, 361, 362], "pad": [61, 74, 75], "assist": [61, 129, 274], "fermisurface3d": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 129, 361], "effect": [63, 278, 279, 280, 281, 282, 290, 335, 349, 360, 361], "mass": [63, 278, 279, 280, 281, 282, 290, 361], "speed": [64, 278, 279, 280, 281, 282], "veloc": [65, 278, 279, 280, 281, 282, 290, 352, 353, 361], "helper": [66, 67, 143], "secoond": 66, "deriv": [66, 67], "all": [66, 74, 147, 172, 200, 219, 221, 287, 288, 290, 348, 349, 355, 356, 358, 360, 361, 362, 363, 367], "iband": 67, "creat": [68, 74, 116, 288, 290, 292, 310, 311, 313, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 346, 355, 361, 362], "case": [68, 157, 288, 290, 304, 349, 355, 356, 361, 362, 367], "vectors_arrai": 69, "vectors_nam": [69, 123], "extended_zone_direct": [70, 278, 279, 280, 281, 282, 290, 361], "extend": [70, 349], "vecctor": 70, "expand": [70, 278, 279, 280, 281, 282], "scalars_arrai": 72, "scalar_nam": [72, 122], "len": [72, 346], "self": [72, 74, 189, 190, 203, 313, 345], "length": [72, 76, 349], "iso": [72, 289, 290, 360, 361], "xyz": [74, 75], "v": [74, 75, 288, 290, 354, 355, 358, 361], "isovalu": [74, 75, 129, 130, 290, 361], "v_matrix": [74, 75], "algorithm": [74, 75], "lewin": [74, 75], "transform_matrix": [74, 75], "boundari": [74, 75], "equat": [74, 361, 363], "f": [74, 220, 310, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346, 349, 354, 355, 360, 361], "must": [74, 290, 304, 310, 311, 336, 346, 349, 355, 361, 367], "between": [74, 76, 82, 93, 96, 100, 116, 349, 355, 365], "x1": [74, 291, 344], "y1": [74, 291, 344], "z1": 74, "z2": 74, "descript": [74, 80, 207, 358], "v1": [74, 288, 290, 361], "v2": 74, "constant": [74, 360], "nx": 74, "ny": 74, "nz": 74, "One": [74, 288, 290, 354, 355, 360, 361], "can": [74, 116, 134, 141, 288, 290, 304, 307, 308, 311, 313, 319, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367], "present": [74, 109, 112, 174, 287, 288, 290, 349, 355, 356, 361], "instead": [74, 338, 349, 355, 360], "togeth": [74, 307, 349, 354, 355], "provid": [74, 121, 229, 248, 277, 287, 288, 290, 304, 307, 313, 349, 352, 353, 354, 355, 356, 358, 359, 361, 363, 364, 366], "scikit": [74, 351], "imag": [74, 290, 335, 336, 337, 338, 339, 340, 341, 344, 346, 351, 355, 361], "possibl": [74, 349, 354, 355, 361], "classic": 74, "modul": [74, 224, 287, 292, 293, 353, 356, 357, 360, 362, 365, 367], "fourier": [74, 290, 361], "dafault": [74, 358], "period": 74, "dataset": [74, 103, 361, 362], "solid": 74, "1st": [74, 290, 361], "bz": [74, 356, 367], "cover": [74, 349], "fulli": 74, "so": [74, 288, 349, 355, 357, 359, 362, 363], "might": [74, 349, 351, 358], "wrap": 74, "look": [74, 290, 340, 361], "afterward": 74, "clip": 74, "easili": [74, 358], "doabl": 74, "trimesh": [74, 119, 121, 290, 351, 361], "goe": [74, 355, 358, 362], "eigen_matrix": 74, "In": [74, 134, 288, 290, 313, 335, 346, 349, 350, 354, 355, 358, 361, 362, 363, 367], "word": [74, 288, 290, 361], "super": [74, 352, 353], "withpad": 74, "vertic": [74, 129, 133, 231, 235, 236, 237, 238, 239, 288, 308, 358, 361], "verts_prim": 74, "t": [74, 220, 268, 310, 349, 350], "exampl": [74, 116, 147, 288, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 349, 350, 354, 355, 358, 360, 361, 362, 363], "space": [76, 101, 102, 337, 338, 346, 360, 361, 365, 367], "tri": [80, 182], "correct": [80, 349], "posit": [80, 88, 104, 243, 246, 261, 278, 279, 280, 281, 282, 290, 336, 361], "abl": [80, 336, 354, 355, 361, 363], "min": 80, "max": 80, "kname": [81, 82, 284, 285, 286, 355, 364, 367], "ktick": [81, 82, 284, 285, 286, 355, 364, 367], "special_kpoint": [81, 82, 364], "ngrid": [81, 82, 364], "has_time_revers": [81, 82, 135, 136, 168, 169], "handl": [82, 224, 277, 361, 365], "tick": [82, 87, 88, 243, 246, 261, 264, 269, 270, 271, 364], "special": [82, 349, 354, 360], "mani": [82, 290, 349, 354, 355, 361, 362], "time": [82, 168, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 367], "revers": [82, 168, 346, 349], "get": [83, 84, 160, 294, 310, 334, 342, 346, 348, 349, 361], "same_grid_s": 84, "optim": 84, "after": [84, 349, 358, 363], "transformm": 84, "retain": [84, 349], "segment": [86, 360, 364], "filenam": [89, 135, 136, 141, 143, 144, 153, 157, 168, 169, 170, 171, 176, 177, 178, 179, 183, 184, 185, 240, 257, 283, 284, 288, 289, 293, 336, 358, 360, 365, 367], "fmt": 89, "vasp": [89, 137, 144, 207, 221, 224, 228, 283, 284, 285, 286, 288, 289, 290, 307, 309, 310, 314, 315, 316, 319, 320, 321, 325, 326, 328, 331, 332, 335, 336, 339, 340, 341, 345, 346, 348, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367], "write": [89, 349, 362], "support": [89, 290, 310, 311, 349, 351, 353, 354, 355, 361], "moment": [89, 363], "_description_": [89, 281, 284, 286, 289, 291, 360, 362], "cartesian_coordin": [90, 91, 366], "fractional_coordin": [90, 91, 366], "defin": [90, 288, 290, 346, 349, 355, 358, 360, 361, 362, 363], "perid": 90, "crystal": [90, 92, 93, 95, 96, 97, 100, 105, 106, 111, 218, 310, 311, 346, 352, 353], "symbol": [90, 129, 132], "natom": [90, 359, 366], "coordinatesd": 90, "magnitud": [92, 95, 97, 290, 354, 355, 361], "angl": [93, 96, 100, 346, 360], "third": [93, 96, 97, 349], "convex": [98, 110], "hull": [98, 110], "scipi": [98, 351], "spatial": 98, "convexhul": 98, "symprec": [101, 102, 103, 104, 183, 292, 346], "1e": [101, 102, 103, 104, 183, 292, 346], "intern": 101, "group": [101, 102, 331, 332], "spglib": [103, 183], "dict": [103, 149, 150, 194, 195, 212, 216, 237, 284, 285, 286, 288, 355, 358], "wyckoff": 104, "insid": [105, 141, 349], "unitcel": 105, "question": 105, "corner": [106, 358], "speci": [109, 239, 288, 358], "crystla": 114, "valueerror": [114, 184], "proper": 114, "face_norm": [116, 117], "vert_norm": [116, 117], "face_color": [116, 117], "vert_color": [116, 117], "hold": 116, "inherit": 116, "To": [116, 287, 288, 290, 307, 308, 310, 311, 313, 335, 349, 351, 355, 356, 358, 360, 361, 363], "requir": [116, 307, 308, 310, 311, 313, 349, 355, 357, 359, 360, 361, 362], "nvert": 116, "vertici": 116, "integ": [116, 278, 279, 280, 281, 282], "nface": 116, "connect": [116, 346, 349, 361], "vertex": 116, "attach": [116, 349], "glyph": 116, "file_obj": 119, "output": [119, 140, 144, 224, 287, 288, 290, 293, 307, 349, 355, 356, 358, 361, 365], "glb": [119, 290, 361], "file_typ": 119, "new_fac": 120, "vectors_x": 123, "vectors_i": 123, "vectors_z": 123, "manipul": [125, 126, 129], "1d": [125, 129, 130], "n_energi": [125, 129], "see": [125, 126, 127, 128, 131, 132, 335, 349, 350, 354, 355, 360, 367], "further": [125, 126, 127, 128, 131, 132, 137, 349, 355, 360, 362, 367], "detail": [125, 126, 127, 128, 131, 132, 288, 315, 317, 318, 319, 322, 323, 324, 325, 346, 349, 355, 361], "plane": [127, 129, 289, 290, 336, 344, 354, 355, 360, 361], "informt": [128, 129], "includ": [128, 129, 134, 147, 175, 232, 233, 235, 237, 278, 279, 280, 281, 282, 304, 310, 313, 349, 352, 353, 354, 355, 363, 367], "extens": [128, 129, 130, 133, 349], "chapter": [129, 274], "intend": [129, 134, 274, 349], "describ": [129, 274, 278, 279, 280, 281, 282], "data": [129, 134, 274, 277, 304, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346, 349, 352, 353, 359, 363, 364, 366], "process": [129, 137, 304, 328, 331, 332, 344, 346, 349, 352, 353, 355, 360, 362, 363, 367], "path": [129, 131, 157, 288, 290, 304, 308, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 352, 353, 356, 357, 361, 363], "tick_label": [129, 131], "tick_posit": [129, 131, 243, 246, 261, 364], "n_segement": [129, 131], "kdistanc": [129, 131, 364], "section": [134, 224, 279, 280, 290, 304, 307, 311, 319, 325, 349, 358, 360, 361, 363], "learn": [134, 350], "more": [134, 172, 174, 268, 278, 279, 280, 281, 282, 290, 304, 319, 325, 332, 346, 349, 350, 354, 355, 358, 361, 362], "pars": [134, 135, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 170, 176, 178, 184, 186, 187, 201, 216, 222, 223, 224, 225, 226, 227, 228, 289, 358, 360], "code": [134, 141, 144, 145, 207, 224, 276, 277, 283, 284, 285, 286, 288, 289, 290, 307, 308, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 366, 367], "highlight": [134, 367], "python": [134, 149, 194, 220, 288, 290, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 361], "interfac": [134, 349, 361], "io": [134, 222, 223, 225, 226, 227, 228, 359, 364, 366], "plotter": [134, 272, 273, 275, 279, 280, 281, 315, 316, 317, 318, 319, 322, 323, 324, 325, 344, 346], "script": [134, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 355, 356, 360, 361, 362, 365, 367], "bandsplot": [134, 284, 304, 310, 311, 313, 315, 316, 317, 318, 319, 325, 328, 355, 357, 358], "dosplot": [134, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 284, 304, 310, 311, 313, 322, 323, 324, 325, 328, 358], "bandsdosplot": [134, 304, 310, 311, 313, 327, 329, 348, 358], "abinitkpoint": [136, 224], "infil": [137, 138, 141, 142, 143, 287, 290, 292, 293, 346, 356, 361, 362, 365], "abinit_output": [137, 138, 139, 140, 287, 290, 307, 355, 356, 361, 367], "procar": [137, 144, 145, 153, 179, 180, 181, 182, 183, 224, 277, 283, 284, 287, 288, 289, 290, 293, 298, 304, 306, 307, 313, 345, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 365, 367], "unlik": 137, "here": [137, 182, 268, 309, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 350, 355], "merg": [137, 287, 307, 349, 356], "fix": [137, 182, 209, 287, 307, 349, 356], "format": [137, 182, 220, 224, 287, 288, 290, 307, 310, 344, 345, 346, 349, 352, 353, 355, 356, 361, 363, 365], "issu": [137, 287, 307, 356, 365], "abinitprocar": [138, 224], "through": [141, 143, 281, 349, 354, 355, 359, 360, 361, 364, 366, 367], "becaus": [141, 349, 355], "some": [141, 182, 290, 304, 311, 349, 354, 361], "multipl": [141, 287, 298, 307, 352, 353, 358, 363], "bsxf": 141, "sown": 141, "bxsfparser": [142, 143, 224], "bxsf": [142, 143, 223, 224, 290, 361], "dirnam": [144, 145, 157, 158, 276, 277, 283, 284, 285, 286, 288, 289, 290, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346, 355, 357, 358, 360, 361, 367], "qe": [144, 145, 224, 225, 226, 288, 310, 311, 313, 316, 317, 322, 323, 337, 338], "lobsterin": [144, 145, 310], "lobsterout": [144, 145, 310], "scfin_filenam": [144, 145], "scf": [144, 145, 157, 158, 310, 311, 313], "outcar": [144, 145, 153, 171, 172, 173, 174, 175, 183, 224, 283, 284, 288, 290, 313, 345, 355, 360, 361, 367], "poscar": [144, 145, 153, 177, 217, 224, 284, 288, 290, 346, 361, 362, 367], "dos_interpolation_factor": [144, 145, 184, 185], "directori": [144, 157, 277, 285, 286, 287, 288, 289, 304, 308, 310, 311, 313, 355, 356, 360], "put": [144, 288, 290, 356, 361], "lobsterpars": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 224], "retrun": 146, "titl": [147, 258, 284, 285, 286, 288, 349, 355, 358, 360, 361, 367], "dos_paramater": 147, "separatli": 147, "pychemia": [147, 199, 207, 208, 211, 212, 219, 351], "visual": [147, 360, 361], "multi": [148, 193], "diment": [148, 193, 361], "per": 148, "complet": [149, 194, 308], "dictionari": [149, 194, 202, 205, 237, 284, 285, 286, 288, 304, 355], "denis": 149, "kei": [150, 237, 285, 286, 288, 349, 355, 361], "sturcutu": 153, "scf_in_filenam": [157, 158], "bands_in_filenam": [157, 158], "pdos_in_filenam": [157, 158], "pdo": [157, 158, 311], "kpdos_in_filenam": [157, 158], "kpdo": [157, 158, 311], "atomic_proj_xml": [157, 158], "atomic_proj": [157, 158, 311], "xml": [157, 158, 184, 185, 188, 209, 216, 284, 288, 311, 358], "expresso": 157, "most": [157, 288, 349, 355, 358], "import": [157, 288, 290, 310, 311, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 351, 359, 360, 361, 364, 366, 367], "come": [157, 349, 352, 353], "parser": [157, 209, 224, 355, 359, 364, 366], "took": 157, "place": [157, 304, 311, 349, 361], "ofstat": 157, "locat": [157, 229, 248, 264, 362], "outdir": 157, "prefix": 157, "qepars": [158, 159, 160, 161, 162, 163, 164, 165, 224], "fdf_file": [166, 167], "siestapars": [167, 224], "siesta": [167, 224, 227, 309], "fdf": 167, "vlaue": 168, "kpioint": 168, "ourcar": 170, "just": [172, 174, 268, 361, 362], "field": 172, "keep": [172, 288, 290, 349, 354, 361, 362], "than": [172, 174, 201, 268, 288, 290, 349, 354, 355, 361, 362, 367], "ndaarai": 174, "them": [175, 220, 349, 355, 363], "matric": [175, 363], "stupid": 182, "problem": [182, 349], "due": [182, 365, 367], "fortran": [182, 365], "now": [182, 310, 311, 360, 362, 363], "separ": [182, 349, 354, 355, 356], "61": 182, "00000000": [182, 363], "50000000": 182, "But": [182, 332, 349, 360], "precis": [183, 349], "vasprun": [184, 185, 214, 216, 284, 288, 358], "vaspxml": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 367], "el": 188, "_type": 188, "text": [188, 220], "specifi": [188, 277, 278, 279, 280, 281, 288, 290, 308, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 355, 358, 361], "attrib": 188, "tree": 188, "boolian": [189, 190, 191, 220, 288], "consist": [189, 190, 203, 313, 345, 349, 354, 355, 363], "ionic": [189, 191, 196, 200, 210, 219], "converg": [190, 191], "step": [196, 200, 203, 210, 218, 219, 311, 313, 349], "system": [197, 213, 310, 349, 356, 360, 367], "final": [199, 349, 355, 356], "xml_tree": [201, 202, 203, 204, 205, 206], "calculatio": 201, "scstep": 201, "dest": 202, "recurc": [202, 204], "check": [202, 287, 350, 356], "spell": 202, "extract": [203, 204, 313, 362], "tage": 204, "varrai": 206, "tag": [206, 355, 360], "vaspincar": 207, "alwai": [209, 360], "accord": [209, 349, 360], "read": [209, 290, 311, 346, 349, 358, 361, 367], "finish": 209, "pseudopotenti": 215, "potcar": 215, "covert": 220, "abinit": [222, 224, 287, 288, 290, 309, 310, 354, 355, 356, 361, 367], "espresso": [223, 224, 225, 226, 227, 309, 310, 314, 320, 321, 326, 348, 353, 354, 355], "decrib": 224, "result": [224, 335, 349, 362, 367], "lobster": [224, 225, 284, 286, 288, 289, 309, 360], "abinitpars": 224, "vasppars": 224, "ax": [229, 230, 248, 249, 268, 269, 270, 271, 284, 285, 286, 288, 289, 316, 355, 357, 360, 367], "kwarg": [229, 230, 248, 249, 284, 285, 286, 355, 367], "mpl": [229, 248], "orient": [231, 234, 235, 236, 237, 238, 239, 284, 288, 336, 354, 355, 358], "horizont": [231, 234, 235, 236, 237, 238, 239, 284, 288, 358], "linestyl": [231, 250], "dot": [231, 250], "linewidth": [231, 250, 269, 284, 288], "draw": [231, 250], "THe": 231, "style": [231, 319, 325], "plain": [234, 253, 284, 285, 286, 288, 289, 290, 310, 311, 313, 316, 334, 342, 348, 352, 353, 357, 360, 361, 363, 367], "spin_color": [235, 236, 237, 238, 239, 278, 279, 280, 281, 282, 284, 288, 340], "spin_label": [235, 236, 237, 238, 239, 284, 288], "plot_tot": [235, 237, 238, 239, 284, 288, 358], "plot_bar": [235, 236, 269], "parametr": [235, 236, 255, 288, 290, 304, 316, 335, 354, 355, 357, 361, 363], "colorba": 235, "mmaximum": 236, "colorbar": 236, "item": [237, 284, 285, 286, 288, 315, 322, 325, 349, 355, 358, 367], "contribut": [237, 238, 239, 288, 290, 349, 350, 354, 355, 358, 361], "stack": [237, 238, 239, 288, 322, 363], "eachoth": 239, "pdf": [240, 257, 288], "interv": [242, 245, 260, 263, 264, 357], "xlim": 242, "tick_nam": [243, 246, 261, 364], "xtick": 243, "ylim": 245, "ytick": 246, "ebsplot": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 274, 315, 316, 317, 318, 319], "fermi_level": 250, "methdo": 252, "width_mask": [254, 256], "color_mask": [254, 256], "width_weight": [254, 256], "color_weight": [254, 256], "scatter": [254, 256, 355], "width": [254, 256, 288, 346, 361, 367], "mask": [254, 256, 269, 271, 285, 286, 349, 355], "plot_color_bar": [255, 284], "overlai": 255, "bar": [255, 284, 288, 289, 290, 360, 361], "fo": [259, 262, 281], "limit": [260, 263, 288, 349, 355], "begin": [260, 263, 291, 363], "end": [260, 263, 291, 349, 358, 363], "black": [261, 357], "_f": 262, "ev": [262, 337, 338, 345, 360], "major": [264, 349], "minor": 264, "depeci": 266, "ot": 266, "procarplot": [267, 268, 269, 270, 271, 274], "hot_r": [268, 271], "handler": 268, "parametricplot": 268, "fake": 268, "shouldn": 268, "invok": [268, 349, 351], "discontinu": [269, 270, 271, 284, 311, 363], "figsiz": [269, 270], "13": [269, 270, 317, 323, 336, 342, 349, 354, 362, 363], "9": [269, 270, 307, 317, 323, 332, 336, 337, 338, 341, 354, 363], "02": [270, 320, 326], "o": [270, 271, 288, 290, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 354, 355, 358, 361], "50": [271, 313, 362], "structutu": 272, "stuctur": 274, "depreci": 275, "repair": [276, 277, 283, 284, 289, 290, 304, 306, 349, 360, 361, 363], "apply_symmetri": [276, 277, 335, 336, 337, 338, 339, 340, 341], "fermihandl": [277, 278, 279, 280, 281, 282, 304, 313, 335, 336, 337, 338, 339, 340, 341], "Then": [277, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 346, 367], "srufac": [277, 281], "iso_rang": [278, 281, 290, 337, 338, 361], "iso_surfac": [278, 281, 290, 337, 338, 361], "10": [278, 288, 290, 317, 323, 332, 335, 346, 349, 354, 361, 362, 363], "iso_valu": [278, 338], "spin_textur": [278, 279, 280, 281, 282, 289, 290, 331, 332, 334, 336, 342, 348, 360, 361], "calculate_fermi_spe": [278, 279, 280, 281, 282, 290, 361], "calculate_fermi_veloc": [278, 279, 280, 281, 282, 290, 361], "calculate_effective_mass": [278, 279, 280, 281, 282, 290, 361], "plot_brillouin_zon": [278, 279, 280, 281, 282], "015": [278, 279, 280, 281, 290, 346, 361], "plot_directional_arrow": [278, 279, 280, 281, 282], "camera_po": [278, 279, 280, 281, 282, 290, 361], "background_color": [278, 279, 280, 281, 282, 290, 361], "white": [278, 279, 280, 281, 282, 290, 361, 365], "save_gif": [278, 282, 338], "genrat": 278, "gif": [278, 282, 290, 338, 361], "chang": [278, 319, 325, 332, 349, 358], "isovlau": 278, "rang": [278, 281, 290, 332, 337, 338, 344, 361, 362, 367], "excat": 278, "ther": [278, 279, 280, 281, 282, 286], "allow": [278, 279, 280, 281, 282, 290, 349, 354, 355, 360, 361, 367], "orlist": [278, 279, 280, 281, 282], "camera": [278, 279, 280, 281, 282, 290, 361], "strortupl": [278, 279, 280, 281, 282], "background": [278, 279, 280, 281, 282, 290, 361], "transparent_mesh": [279, 280, 335], "slice_norm": [279, 280, 290, 335, 336, 361], "slice_origin": [279, 280, 290, 335, 336, 361], "line_width": [279, 280, 335, 336], "perspect": [279, 280, 281, 282, 290, 361], "save_2d": [279, 280, 281, 282], "save_2d_slic": [279, 280, 336], "sruafc": [279, 280], "cross": [279, 280, 290, 349, 361], "slice": [279, 280, 290, 361], "widget": [279, 280, 281, 290, 336, 361], "noraml": [279, 280], "origin": [279, 280, 290, 331, 332, 349, 355, 359, 361, 362], "optionl": [279, 280], "transpar": [279, 280], "linwidth": [279, 280], "screenshot": [279, 280, 281, 282], "show_cross_section_area": [280, 290, 335, 336, 361], "box": [280, 349], "area": [280, 288, 290, 336, 349, 358, 361], "isoslid": [281, 334, 342, 348], "slide": 281, "go": [281, 288, 290, 351, 361], "except": [281, 349], "save_mp4": 282, "save_3d": 282, "boollean": 282, "mp4": [282, 290, 361], "gap": [283, 345], "bands_set": [284, 304, 328], "elimit": [284, 285, 286, 288, 316, 355, 357, 358, 367], "cubic": [284, 285, 286, 288, 355, 367], "interpolation_typ": [284, 285, 286, 355, 367], "projection_mask": [284, 285, 286, 288, 355, 367], "dos_set": [284, 304, 328], "dos_limit": [284, 288], "old": [284, 288, 367], "savefig": [284, 285, 286, 288, 289, 355, 357, 358, 360, 367], "k_limit": 284, "title_fonts": 284, "16": [284, 290, 317, 323, 335, 349, 354, 361], "draw_fermi": 284, "keyword": [284, 304, 319, 325, 328, 331, 332, 336, 349, 359], "window": [284, 285, 286, 288, 349, 355, 361], "structutr": [285, 355], "sting": [285, 355], "custom": [285, 286, 349, 355], "kanem": [285, 355], "decid": [285, 349, 355, 360], "plt": [285, 286, 288, 289, 332, 355, 360, 367], "kdirect": [286, 355, 367], "bandstructur": [286, 295, 349, 356], "kitck": 286, "objext": 286, "outfil": [287, 292, 293, 346, 356, 362, 365], "procar_merg": [287, 356], "gz": [287, 356], "mergeparallel": [287, 356], "fixformat": [287, 356], "nspin": [287, 311, 356, 359], "concaten": [287, 298, 304, 307, 363], "procar_": [287, 356], "compress": [287, 356], "parallel": [287, 307, 356], "detect": [287, 356], "nsppol": [287, 356], "flag": [287, 307, 308, 310, 311, 313, 356, 367], "carri": [288, 349, 355, 358], "out": [288, 290, 307, 308, 310, 311, 349, 361, 367], "srvo3": 288, "perform": [288, 290, 308, 311, 313, 349, 352, 353, 360, 361, 362, 364, 367], "explain": [288, 307, 349, 361], "exmapl": [288, 335, 336, 337, 338, 339, 340, 341, 344, 346], "tutori": [288, 350, 361], "parametric_lin": [288, 363], "stack_orbit": [288, 322, 325, 363], "stack_speci": [288, 363], "multipli": 288, "spline": 288, "ploariz": 288, "These": [288, 308, 314, 321, 327, 328, 330, 334, 343, 348, 349, 354, 355, 361], "chosen": 288, "accept": [288, 349, 359], "rgb": 288, "html": [288, 290, 349, 361], "0000ff": 288, "ff0000": 288, "polar": [288, 314, 315, 316, 320, 321, 322, 326, 328, 331, 334, 335, 337, 338, 339, 342, 345, 346, 348, 354, 355, 356, 363, 367], "two": [288, 290, 349, 355, 361], "even": [288, 349, 355], "disregard": 288, "cation": 288, "fill": [288, 358], "under": [288, 349, 358], "curv": [288, 358], "better": 288, "sens": 288, "refer": [288, 310, 315, 317, 318, 319, 322, 323, 324, 325, 332, 349, 354, 355, 359, 363, 364, 366], "srvo": [288, 290, 354, 355, 358, 361], "magenta": 288, "cyan": 288, "polor": 288, "both": [288, 349, 352, 353, 355, 358, 367], "legend": [288, 289, 360], "packag": [288, 290, 311, 349, 355, 358, 361], "relev": [288, 290, 349, 361], "mind": [288, 290, 361, 362], "start": [288, 290, 349, 354, 355, 360, 361, 362], "oxygen": [288, 290, 358, 361], "sr1": [288, 290, 361], "o3": [288, 290, 361], "900891": [288, 290, 361], "000000": [288, 290, 361, 365], "sr": [288, 290, 354, 355, 358, 361], "500000": [288, 290, 361], "noth": [288, 290, 349, 361], "consid": [288, 290, 322, 325, 349, 350, 352, 353, 354, 355, 361], "indeci": [288, 290, 361], "relav": [288, 290, 361], "while": [288, 290, 349, 358, 361, 362], "ask": [288, 349, 358], "graph": [288, 349], "higher": 288, "web": [288, 290, 361], "page": [288, 290, 349, 350, 353, 361], "http": [288, 290, 335, 349, 351, 361], "org": [288, 290, 335, 349, 361], "user": [288, 290, 304, 315, 317, 318, 319, 322, 323, 324, 325, 331, 332, 346, 349, 354, 355, 358, 360, 361], "plasma": 288, "plote": 288, "flase": 288, "entri": 288, "png": [288, 290, 336, 355, 358, 361, 367], "jpg": 288, "shown": 288, "interact": [288, 349, 361], "ad": [288, 290, 310, 349, 361], "abov": [288, 290, 310, 311, 313, 335, 337, 338, 349, 354, 355, 357, 361], "srvo_": 288, "latex": 288, "well": [288, 331, 332, 349, 355, 356, 361], "cal": 288, "argumnet": [288, 358], "elk": [288, 309, 354, 355, 357, 358, 367], "uparrow": [288, 358, 363], "downarrow": [288, 358, 363], "side": [288, 311, 349], "mean": [288, 290, 315, 317, 318, 319, 322, 323, 324, 325, 349, 361], "treat": [288, 349, 360], "raw": 288, "No": [288, 332, 337, 338, 349, 355], "ack_speci": 288, "base": [288, 290, 346, 349, 355, 359, 361], "For": [288, 304, 313, 315, 317, 318, 319, 322, 323, 324, 325, 332, 344, 349, 354, 355, 358, 360, 361, 362, 363, 367], "clarif": 288, "visit": 288, "specif": [288, 304, 310, 349, 350, 354, 355, 358, 361], "clarifi": 288, "lingo": 288, "equival": [288, 349], "top": [288, 358], "take": [288, 304, 311, 317, 323, 349, 359, 364, 366], "figur": [288, 304, 331, 332, 335, 355, 357, 367], "subplot": 288, "larger": [288, 349], "row": [288, 354, 355, 362], "colomun": 288, "fig": [288, 355], "linspac": 288, "pi": [288, 335], "1000": 288, "sin": 288, "plt_show": 288, "skip": [288, 361], "modifi": [288, 349, 354, 355], "set_ylim": 288, "k_z_plane": [289, 360], "rot_symm": [289, 360], "translat": [289, 363], "add_axes_label": [289, 360], "add_legend": [289, 331, 360], "exportplt": [289, 360, 367], "k_z": [289, 360], "invers": [289, 360], "either": [289, 349, 360], "rbg": [289, 360], "heat": [289, 360], "produc": [289, 349, 360, 367], "invalid": [289, 349, 360], "save_color": [290, 361], "only_spin": [290, 361], "savegif": [290, 361], "savemp4": [290, 361], "save_meshio": [290, 361], "save2d": [290, 361], "show_slic": [290, 361], "iso_slid": [290, 361], "simul": [290, 361], "mgb2": [290, 361], "ni_f": [290, 361], "49": [290, 361, 364], "iter": [290, 361], "ones": [290, 358, 361], "14": [290, 317, 323, 332, 354, 361, 363], "15": [290, 317, 323, 332, 349, 354, 361, 367], "17": [290, 317, 323, 332, 333, 354, 361], "kgrid": [290, 361], "5x5x5": [290, 361], "lead": [290, 361], "20x20x20": [290, 361], "uniform": [290, 361], "direect": [290, 361], "grai": [290, 361], "surfca": [290, 361], "property_project": [290, 361], "fermi_velocity_vector": [290, 361], "fermi_veloc": [290, 361], "harmon": [290, 361, 363], "effective_mass": [290, 361], "collinear": [290, 354, 355, 359, 361, 363], "As": [290, 349, 355, 361, 363], "suggest": [290, 361], "belov": [290, 361], "fast": [290, 361], "rather": [290, 361, 362, 367], "inaccur": [290, 349, 361], "nearest": [290, 361], "neighbor": [290, 361], "accur": [290, 361], "linear": [290, 361], "video": [290, 361], "export": [290, 361, 363], "stl": [290, 361], "binari": [290, 361], "ply": [290, 361], "ascii": [290, 361], "off": [290, 335, 336, 337, 338, 339, 340, 341, 344, 346, 361], "obj": [290, 361], "gltf": [290, 361], "collada": [290, 361], "meshio": [290, 361], "illus": [290, 361], "depth": [290, 350, 361], "graphic": [290, 361], "turn": [290, 361], "featur": [290, 313, 319, 325, 349, 360, 361, 362], "largest": [290, 361], "show_curvatur": [290, 361], "curvatur": [290, 361], "curvature_typ": [290, 361], "avail": [290, 349, 350, 355, 360, 361, 367], "gaussian": [290, 361], "slider": [290, 361], "iso_energi": [290, 361], "view": [290, 349, 361], "whole": [290, 349, 361], "nkx": 291, "nky": 291, "coord": 291, "grid_siz": 292, "40": [292, 308, 346, 355], "with_time_revers": 292, "recip": [292, 346, 361], "hpkot": [292, 346], "threshold": [292, 346], "07": [292, 342, 346], "angle_toler": 292, "supercell_matrix": [292, 346, 367], "recepi": 292, "procarrepair": [293, 365], "exist": 294, "pre": [304, 328, 331, 332, 344, 346, 349, 352, 353], "post": [304, 328, 331, 332, 344, 346, 349, 352, 353, 362], "cat": [304, 307, 356, 363], "depend": [304, 351, 358], "mai": [304, 319, 325, 349, 355, 361], "orbitald": 304, "bandsplot_2d": 304, "bandtructur": 304, "combin": [304, 349, 354, 355, 356, 361], "fermi2d": [304, 330, 333, 348, 360], "fermi3d": [304, 310, 311, 334, 342, 348, 361], "generate2dkmesh": [304, 344], "kmesh": [304, 310, 313], "bandgap": [304, 343, 347, 348], "reapir": 304, "abinitoutput": 307, "prtprocar": 307, "nameofoutputfil": 307, "run": [307, 308, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349, 356, 363], "split": [307, 356, 360], "bandlin": 308, "band_": [308, 354, 355], "_a": 308, "obtain": [308, 352, 353, 355, 356, 363], "task": [308, 352, 353], "22": [308, 322, 326, 337, 342], "addition": [308, 359], "spinpol": 308, "join": 308, "plot1d": 308, "gamma": [308, 313, 344, 355, 356, 364, 366, 367], "were": [308, 332, 349], "guid": [309, 311, 313, 315, 317, 318, 319, 322, 323, 324, 325, 350], "prepar": 309, "perper": 309, "fatband": 310, "lobter": 310, "lobstercod": 310, "v6": [310, 311], "variou": [310, 311, 313, 352, 353, 359, 363, 364, 366], "independ": [310, 311, 313, 349], "pw": [310, 311], "your": [310, 311, 349, 350, 361], "bands_dirnam": [310, 311, 313], "dos_dirnam": [310, 311, 313], "bands_mod": [310, 311, 313], "dos_mod": [310, 311, 313], "right": [310, 349, 358, 361, 363], "addit": [310, 311, 313, 349, 363], "wf_collect": 310, "nosym": 310, "noinv": 310, "k_point": [310, 311], "520": 310, "0000000": 310, "1428571": 310, "2857143": 310, "4285714": 310, "0000000000": [310, 311], "0000": 310, "0200000000": 310, "4800000000": 310, "5000000000": [310, 311], "5110420726": 310, "4889579274": 310, "7539676705": 310, "2460323295": 310, "7650097432": 310, "2349902568": 310, "h2": 310, "h0": 310, "2238002446": 310, "meth": 310, "explicitli": [310, 311, 349], "lobster_input_fil": 310, "explicit": [310, 311], "createfatband": 310, "2p_x": 310, "2p_y": 310, "2p_z": 310, "li": [310, 349], "fe": [310, 315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 336, 337, 338, 339, 340, 341, 345, 346], "lobster_q": 310, "projwfc": 311, "make": [311, 313, 349, 360, 362], "sure": [311, 313, 349], "kresolveddo": 311, "copi": [311, 349, 358], "main": [311, 359, 364, 366], "nscf": 311, "crystal_b": 311, "6250000000": 311, "2500000000": 311, "u": [311, 349, 350, 360], "3750000000": 311, "7500000000": 311, "w": [311, 349, 361], "occur": [311, 349, 355], "269": 311, "0083333333": 311, "0166666667": 311, "0250000000": 311, "0333333333": 311, "0416666667": 311, "4916666667": 311, "5062500000": 311, "0125000000": 311, "6125000000": 311, "2250000000": 311, "6187500000": 311, "2375000000": 311, "3691406250": 311, "7382812500": 311, "3632812500": 311, "7265625000": 311, "3574218750": 311, "7148437500": 311, "0058593750": 311, "0117187500": 311, "starting_magnet": 311, "branch": 311, "print": [311, 367], "instal": [311, 349], "git": [311, 351], "clone": 311, "gitlab": 311, "com": [311, 349, 351], "pietrodeluga": 311, "q": [311, 361], "cd": [311, 351], "checkout": 311, "new_proj": 311, "bin": 311, "noncolin": 311, "lspinorb": 311, "savesigma": 311, "still": [312, 349], "develop": [312, 328, 331, 332, 344, 346], "wavefunct": [313, 363], "written": [313, 344, 346, 349, 367], "lorbit": [313, 367], "11": [313, 317, 323, 349, 354, 363], "incar": [313, 361], "unfold": [313, 352, 353, 363], "12": [313, 317, 323, 354, 361, 363, 367], "wave": [313, 363], "ispin": [313, 367], "lnoncollinear": 313, "icharg": 313, "math": [313, 354, 355], "chgcar": 313, "line_mod": 313, "h": [313, 349, 364, 367], "25": [313, 335, 338], "demonstr": [314, 321, 327, 330, 334, 343, 348], "capabl": [314, 321, 327, 330, 334, 343, 348, 352, 353, 355, 361], "compar": [314, 320, 335, 348, 352, 353, 363, 367], "click": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 361], "download": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348], "below": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 346, 349, 354, 355, 357], "replac": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 346], "data_dir": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "download_exampl": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "save_dir": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "spin_calc_typ": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "calc_typ": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "local": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 349], "project_dir": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "getcwd": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "sep": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 345, 346], "ebs_plot": [315, 316, 317, 318, 319, 355, 357], "0x000001ec24678100": 315, "pleas": [315, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 344, 346, 349, 350, 351, 361, 363], "ref": [315, 317, 318, 319, 322, 323, 324, 325], "atomic_project": [315, 317, 318, 319, 322, 323, 324, 325], "0x000001ec24745490": 315, "0x000001ec2480cfa0": 315, "0x000001ec24e27100": 315, "0x000001ec24965640": 315, "overlay_orbit": 315, "0x000001ec24994bb0": 315, "0x000001ec2516de80": 315, "0x000001ec244d95e0": 315, "minut": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "820": [315, 320], "plotting_colinear": [315, 320], "jupyt": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348], "notebook": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348], "ipynb": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "galleri": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348], "sphinx": [315, 316, 317, 318, 319, 322, 323, 324, 325, 328, 331, 332, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348], "vasp_data_dir": 316, "qe_data_dir": 316, "equal": [316, 337, 338], "0x000001ec2484d340": 316, "616": [316, 320], "plotting_compare_band": [316, 320], "sphinx_gallery_thumbnail_numb": [317, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346], "0x000001ec24ab4100": 317, "express": [317, 323, 349], "therefor": [317, 323, 349, 354, 367], "0x000001ec207914f0": 317, "287": [317, 320], "plotting_noncolinear_q": [317, 320], "0x000001ec24d83e50": 318, "0x000001ec24592f70": 318, "023": [318, 320], "plotting_noncolinear_vasp": [318, 320], "There": [319, 325, 349, 350], "few": [319, 325], "0x000001ec24760910": 319, "doc": [319, 325], "util": [319, 325, 344, 346, 349, 356, 360, 361, 362, 365], "default_set": [319, 325], "ini": [319, 325], "0x000001ec79090d30": 319, "0x000001ec244c3130": 319, "0x000001ec247ee940": 319, "340": [319, 320], "plotting_spin_polar": [319, 320], "00": [320, 326, 329, 333, 342, 347], "09": [320, 342], "086": 320, "execut": [320, 326, 329, 333, 342, 347, 349, 355], "examples_00": 320, "band_structur": 320, "mb": [320, 326, 329, 333, 342, 347], "01": [320, 342, 347], "dos_plot": [322, 323, 324, 325], "0x000001ec246264c0": 322, "0x000001ec2474a9d0": 322, "0x000001ec335511f0": 322, "0x000001ec3356bd00": 322, "0x000001ec33c768e0": 322, "0x000001ec3440cf70": 322, "306": [322, 326], "plotting_colinear_do": [322, 326], "0x000001ec24c6aac0": 323, "19": [323, 326], "730": [323, 326], "plotting_noncolinear_dos_q": [323, 326], "0x000001ec24e1c4c0": 324, "417": [324, 326], "plotting_noncolinear_dos_vasp": [324, 326], "0x000001ec344bacd0": 325, "0x000001ec343c84f0": 325, "0x000001ec24b95af0": 325, "0x000001ec2f5c0070": 325, "0x000001ec26abec70": 325, "0x000001ec26abdd90": 325, "0x000001ec264d3eb0": 325, "405": [325, 326], "plotting_spin_polarized_do": [325, 326], "48": 326, "858": 326, "examples_01": 326, "04": 326, "bands_dir": 328, "dos_dir": 328, "____": [328, 331, 332, 344, 346], "_": [328, 331, 332, 344, 346, 363], "__": [328, 331, 332, 344, 346], "___": [328, 331, 332, 344, 346], "librari": [328, 331, 332, 344, 346, 349, 351, 352, 353], "jun": [328, 331, 332, 344, 346], "10th": [328, 331, 332, 344, 346], "2021": [328, 331, 332, 344, 346], "cite": [328, 331, 332, 344, 346, 361], "uthpala": [328, 331, 332, 344, 346, 349], "herath": [328, 331, 332, 344, 346, 349], "pedram": [328, 331, 332, 344, 346, 349], "tavadz": [328, 331, 332, 344, 346, 349], "xu": [328, 331, 332, 344, 346, 349], "he": [328, 331, 332, 344, 346, 349], "eric": [328, 331, 332, 344, 346, 349], "bousquet": [328, 331, 332, 344, 346, 349], "sobhit": [328, 331, 332, 344, 346, 349], "singh": [328, 331, 332, 344, 346, 349], "francisco": [328, 331, 332, 344, 346, 349], "mu\u00f1oz": [328, 331, 332, 344, 346, 349], "aldo": [328, 331, 332, 344, 346, 349], "romero": [328, 331, 332, 344, 346, 349], "comput": [328, 331, 332, 344, 346, 349], "physic": [328, 331, 332, 344, 346, 349], "commun": [328, 331, 332, 344, 346, 349], "251": [328, 331, 332, 344, 346, 349], "2020": [328, 331, 332, 344, 346, 349], "107080": [328, 331, 332, 344, 346, 349], "rees": [328, 331, 332, 344, 346, 349], "boucher": [328, 331, 332, 344, 346, 349], "logan": [328, 331, 332, 344, 346, 349], "lang": [328, 331, 332, 344, 346, 349], "freddi": [328, 331, 332, 344, 346, 349], "farah": [328, 331, 332, 344, 346, 349], "327": [328, 329], "plotting_bandsdosplot": [328, 329], "examples_02": 329, "bands_do": 329, "noncolinear": [330, 333, 348, 354], "c": [331, 332, 335, 349, 350, 351, 361, 366], "lllang": [331, 332], "desktop": [331, 332], "research": [331, 332, 349, 350], "comp": [331, 332], "rot": [331, 332], "trasl": [331, 332], "_____________________________________________________": [331, 332], "contact": [331, 349], "specfic": [331, 332], "navi": 331, "799": [331, 333], "plotting_fermi2d": [331, 333], "By": [332, 349, 361, 367], "s_z": [332, 354, 355, 360], "326": 332, "userwarn": 332, "contour": 332, "plain_band": 332, "449": [332, 333], "plotting_fermi2d_spin_textur": [332, 333], "23": [333, 338, 342], "248": 333, "examples_03": 333, "isovalue_gif": [334, 342, 348], "van": [334, 342, 348], "alphen": [334, 342, 348], "fequenc": [334, 342, 348], "cross_sect": [334, 342, 348], "de": [335, 349], "frequenc": 335, "term": [335, 349], "theoret": 335, "freuqenc": 335, "taken": [335, 349], "experiment": 335, "paper": [335, 349], "copper": 335, "silver": 335, "gold": 335, "haa": 335, "doi": [335, 346, 349, 361], "1098": 335, "rsta": 335, "1962": 335, "0011": 335, "frac": [335, 363], "hbar": 335, "cg": 335, "768e": 335, "statcoulomb": 335, "0e": 335, "cm": 335, "0546e": 335, "27": 335, "erg": 335, "au": 335, "ensur": [335, 336, 337, 338, 339, 340, 341, 344, 346, 349], "screen": [335, 336, 337, 338, 339, 340, 341, 344, 346, 367], "off_screen": [335, 336, 337, 338, 339, 340, 341, 344, 346], "load": [335, 336, 337, 338, 339, 340, 341], "memori": [335, 336, 337, 338, 339, 340, 341, 362], "plot_fermi_cross_section_box_widget": 335, "5642": 335, "1586": 335, "ang": 335, "1586e": 335, "365e": 335, "f_": 335, "exp": 335, "50e": 335, "1596": 335, "1596e": 335, "68e": 335, "3956": 335, "3956e": 335, "61e": 335, "85e": 335, "997": [335, 342], "plotting_de_hass_van_alphen": [335, 342], "outermost": 336, "center": [336, 344, 349, 360, 363], "adjust": 336, "manual": [336, 346, 355, 356], "plot_fermi_cross_sect": 336, "5922": [336, 341], "2d_slice": 336, "911": [336, 342], "plotting_fermi3d_cross_sect": [336, 342], "would": [337, 338, 349, 354, 355, 360, 361], "throughout": [337, 338, 349], "plot_fermi_isoslid": 337, "18": [337, 338], "239837592692684": [337, 338], "394": [337, 342], "plotting_fermi3d_isoslid": [337, 342], "exact": [338, 349], "create_isovalue_gif": 338, "145": [338, 342], "plotting_fermi3d_isovalue_gif": [338, 342], "plot_fermi_surfac": [339, 340, 341], "6251": 339, "369": [339, 342], "plotting_fermi3d_plain": [339, 342], "599": 340, "932": [340, 342], "plotting_fermi3d_spin": [340, 342], "535": [341, 342], "plotting_fermi3d_spin_textur": [341, 342], "26": 342, "284": 342, "examples_04": 342, "03": 342, "kmesh_gener": [343, 347, 348, 360], "kpath_gener": [343, 347, 348], "particularli": [344, 356, 360, 365], "command": [344, 349, 351, 356, 357], "k_": 344, "num_grids_x": 344, "num_grids_i": 344, "add_mesh": 344, "20": [344, 346, 349], "show_ax": [344, 346], "show_grid": [344, 346], "513": [344, 347], "plotting_2dkmesh_gener": [344, 347], "note": [345, 351, 355, 356, 358, 367], "band_gap": 345, "124": [345, 347], "plotting_bandgap": [345, 347], "desir": [346, 355, 358], "momentum": [346, 361], "enabl": [346, 349, 360, 361, 367], "suitabl": [346, 349], "suffici": 346, "typic": [346, 349, 365], "retriev": [346, 355], "slight": 346, "modif": [346, 349], "regard": [346, 349, 360, 362], "seek": 346, "seekpath": [346, 351], "hinuma": 346, "et": [346, 361], "al": [346, 361], "pizzi": 346, "kumagai": 346, "oba": 346, "tanaka": 346, "diagram": 346, "crystallographi": 346, "scienc": [346, 349], "128": 346, "2017": 346, "140": 346, "184": 346, "1016": [346, 349], "commatsci": 346, "2016": 346, "k_path": 346, "k_label": 346, "ey": 346, "unique_label": 346, "unique_kpath": 346, "enumer": 346, "append": 346, "ik": 346, "add_lin": 346, "els": 346, "add_point_label": 346, "point_color": 346, "text_color": 346, "font_siz": 346, "36": [346, 367], "always_vis": 346, "view_yz": 346, "488": [346, 347], "plotting_kpath_gener": [346, 347], "125": 347, "examples_05": 347, "sever": [348, 361], "what": [348, 349], "examples_python": 348, "zip": 348, "examples_jupyt": 348, "open": [349, 352, 353, 361], "head": [349, 350], "scientif": [349, 350], "our": [349, 350, 360], "visibl": [349, 350], "bibtex": 349, "articl": [349, 361], "herath2020107080": 349, "journal": [349, 361], "volum": [349, 361, 366], "year": [349, 361], "issn": 349, "0010": 349, "4655": 349, "cpc": 349, "2019": [349, 361], "url": [349, 361], "www": 349, "sciencedirect": 349, "pii": 349, "s0010465519303935": 349, "condens": 349, "matter": 349, "who": 349, "made": 349, "substanti": 349, "concept": 349, "design": 349, "softwar": [349, 361], "creation": 349, "draft": 349, "substant": 349, "revis": 349, "global": 349, "effort": 349, "team": 349, "thank": 349, "jan": 349, "janssen": 349, "litong": 349, "jiang": 349, "nichola": 349, "pike": 349, "don": [349, 350], "munoz": 349, "b": [349, 366], "departamento": 349, "isica": 349, "facultad": 349, "ciencia": 349, "universidad": 349, "chile": 349, "santiago": 349, "nanosci": 349, "nanotechnologi": 349, "cedenna": 349, "depart": 349, "astronomi": 349, "west": 349, "virginia": 349, "univers": 349, "morgantown": 349, "wv": 349, "26505": 349, "6315": 349, "usa": 349, "rutger": 349, "piscatawai": 349, "nj": 349, "08854": 349, "physiqu": 349, "th": 349, "eoriqu": 349, "mat": 349, "eriaux": 349, "cesam": 349, "universit": 349, "eg": 349, "4000": 349, "sart": 349, "tilman": 349, "belgium": 349, "gnu": 349, "public": [349, 350, 361], "29": 349, "june": 349, "2007": 349, "copyright": 349, "free": 349, "foundat": 349, "inc": 349, "fsf": 349, "everyon": 349, "permit": 349, "distribut": [349, 350], "verbatim": 349, "document": [349, 358], "preambl": 349, "copyleft": 349, "kind": 349, "practic": 349, "awai": 349, "freedom": 349, "share": 349, "contrast": 349, "guarante": 349, "program": 349, "remain": [349, 363], "its": 349, "releas": 349, "wai": [349, 350, 362], "too": [349, 365], "speak": 349, "price": 349, "charg": 349, "wish": [349, 355], "receiv": 349, "piec": 349, "know": 349, "thing": 349, "protect": 349, "prevent": [349, 365], "deni": 349, "surrend": 349, "certain": [349, 354, 355, 360], "respons": 349, "respect": [349, 354, 355, 360, 362, 367], "grati": 349, "fee": 349, "pass": 349, "recipi": 349, "And": 349, "gpl": 349, "assert": 349, "offer": 349, "give": [349, 360, 363], "legal": 349, "permiss": [349, 365], "clearli": 349, "warranti": 349, "sake": 349, "mark": 349, "erron": [349, 365], "previou": 349, "devic": 349, "access": [349, 354, 363], "although": 349, "manufactur": 349, "fundament": 349, "incompat": 349, "aim": 349, "systemat": 349, "pattern": 349, "abus": 349, "product": 349, "individu": [349, 355], "unaccept": 349, "prohibit": 349, "those": 349, "aris": [349, 365], "domain": 349, "stand": 349, "readi": 349, "provis": 349, "futur": [349, 355], "threaten": 349, "constantli": 349, "patent": 349, "restrict": 349, "purpos": [349, 367], "avoid": 349, "danger": 349, "could": [349, 355, 360, 362], "proprietari": 349, "assur": 349, "cannot": 349, "condit": 349, "AND": 349, "definit": [349, 361], "law": 349, "semiconductor": 349, "license": 349, "address": 349, "organ": 349, "adapt": 349, "fashion": 349, "earlier": 349, "unmodifi": 349, "propag": 349, "anyth": 349, "without": [349, 358, 361], "directli": 349, "secondarili": 349, "liabl": 349, "infring": 349, "applic": 349, "privat": 349, "countri": 349, "activ": 349, "convei": 349, "parti": 349, "mere": 349, "network": 349, "transfer": 349, "displai": [349, 357], "appropri": 349, "notic": 349, "extent": 349, "conveni": 349, "promin": 349, "tell": 349, "menu": 349, "meet": 349, "criterion": 349, "prefer": [349, 350], "standard": 349, "offici": 349, "recogn": 349, "bodi": 349, "languag": 349, "wide": 349, "among": 349, "serv": 349, "context": 349, "essenti": [349, 359], "kernel": 349, "compil": 349, "interpret": 349, "howev": [349, 355, 361], "tool": 349, "associ": 349, "dynam": 349, "link": [349, 358], "subprogram": 349, "intim": 349, "flow": 349, "regener": 349, "basic": [349, 352, 353, 355, 358], "grant": 349, "irrevoc": 349, "met": 349, "affirm": 349, "unlimit": 349, "content": 349, "constitut": 349, "acknowledg": [349, 350], "fair": 349, "long": [349, 355], "otherwis": 349, "forc": 349, "sole": 349, "exclus": 349, "facil": 349, "compli": 349, "thu": [349, 354], "behalf": 349, "outsid": 349, "relationship": 349, "circumst": 349, "sublicens": 349, "unnecessari": 349, "anti": 349, "circumvent": 349, "shall": 349, "deem": 349, "technolog": 349, "measur": 349, "fulfil": 349, "oblig": 349, "wipo": 349, "treati": 349, "adopt": 349, "decemb": 349, "1996": 349, "waiv": 349, "power": 349, "forbid": 349, "exercis": 349, "disclaim": 349, "intent": 349, "enforc": 349, "against": 349, "medium": 349, "conspicu": 349, "publish": [349, 361], "intact": 349, "absenc": 349, "date": [349, 351, 361], "entir": 349, "anyon": 349, "possess": 349, "regardless": 349, "natur": 349, "storag": 349, "aggreg": 349, "beyond": [349, 355, 358], "inclus": 349, "caus": 349, "machin": 349, "readabl": 349, "embodi": 349, "accompani": 349, "durabl": 349, "customarili": 349, "interchang": 349, "valid": 349, "least": 349, "three": [349, 354, 355, 356, 361, 362], "spare": 349, "model": 349, "reason": [349, 355], "cost": 349, "server": 349, "altern": 349, "occasion": 349, "noncommerci": 349, "subsect": 349, "6b": 349, "maintain": 349, "clear": [349, 357], "next": [349, 361], "sai": 349, "host": 349, "satisfi": 349, "peer": 349, "transmiss": 349, "6d": 349, "portion": 349, "whose": 349, "exclud": 349, "consum": 349, "tangibl": 349, "person": 349, "famili": 349, "household": 349, "sold": 349, "incorpor": [349, 355], "dwell": 349, "doubt": 349, "resolv": [349, 354, 355, 358], "favor": 349, "coverag": 349, "common": 349, "statu": 349, "actual": 349, "commerci": 349, "industri": 349, "unless": 349, "signific": 349, "procedur": 349, "suffic": 349, "continu": [349, 361], "interf": 349, "been": [349, 361], "transact": 349, "perpetu": 349, "character": 349, "neither": 349, "nor": 349, "abil": 349, "rom": 349, "servic": 349, "itself": [349, 350], "advers": 349, "affect": 349, "violat": 349, "rule": 349, "protocol": 349, "across": [349, 363], "publicli": 349, "password": 349, "unpack": 349, "supplement": 349, "though": 349, "govern": 349, "remov": 349, "own": 349, "notwithstand": 349, "holder": 349, "liabil": 349, "preserv": 349, "misrepresent": 349, "licensor": 349, "declin": 349, "trademark": 349, "trade": 349, "indemnif": 349, "contractu": 349, "assumpt": 349, "impos": 349, "relicens": 349, "surviv": 349, "statement": 349, "termin": [349, 351], "expressli": 349, "attempt": 349, "void": 349, "paragraph": 349, "ceas": 349, "reinstat": 349, "provision": 349, "until": 349, "perman": 349, "fail": 349, "notifi": 349, "60": [349, 360, 362], "dai": 349, "cessat": 349, "moreov": 349, "cure": 349, "receipt": 349, "qualifi": 349, "Not": 349, "ancillari": 349, "consequ": 349, "likewis": 349, "action": [349, 361], "downstream": 349, "subject": 349, "complianc": 349, "entiti": 349, "asset": 349, "subdivid": 349, "whatev": 349, "predecessor": 349, "interest": [349, 361], "had": [349, 355], "plu": 349, "royalti": 349, "litig": 349, "claim": 349, "counterclaim": 349, "lawsuit": 349, "alleg": 349, "sell": 349, "sale": 349, "acquir": 349, "hereaft": 349, "manner": [349, 355], "worldwid": 349, "agreement": 349, "commit": 349, "denomin": 349, "coven": 349, "sue": 349, "knowingli": 349, "reli": 349, "readili": 349, "arrang": [349, 354, 355], "depriv": 349, "yourself": 349, "benefit": 349, "knowledg": 349, "identifi": [349, 354, 355, 360], "believ": 349, "pursuant": 349, "singl": [349, 356], "procur": 349, "convey": 349, "discriminatori": 349, "scope": 349, "busi": 349, "payment": 349, "primarili": 349, "enter": 349, "28": 349, "march": 349, "constru": 349, "impli": 349, "defens": 349, "court": 349, "contradict": 349, "excus": 349, "simultan": 349, "pertin": 349, "agre": 349, "collect": [349, 361], "whom": 349, "refrain": 349, "affero": 349, "concern": [349, 361], "Such": 349, "spirit": 349, "distinguish": 349, "later": 349, "ever": 349, "proxi": 349, "THERE": 349, "NO": 349, "FOR": 349, "THE": 349, "TO": 349, "BY": 349, "IN": 349, "OR": 349, "AS": 349, "OF": 349, "BUT": 349, "NOT": 349, "merchant": 349, "fit": 349, "risk": 349, "qualiti": 349, "WITH": 349, "prove": 349, "defect": 349, "necessari": [349, 355, 363], "event": 349, "WILL": 349, "BE": 349, "damag": 349, "incident": 349, "consequenti": 349, "inabl": 349, "loss": 349, "BEING": 349, "sustain": 349, "failur": 349, "IF": 349, "SUCH": 349, "advis": 349, "review": 349, "close": [349, 361], "approxim": 349, "absolut": 349, "waiver": 349, "civil": 349, "greatest": 349, "best": 349, "achiev": [349, 365], "redistribut": 349, "safest": 349, "pointer": 349, "brief": 349, "idea": 349, "hope": 349, "mail": 349, "short": 349, "welcom": 349, "hypothet": 349, "Of": 349, "cours": 349, "gui": 349, "employ": 349, "programm": 349, "school": 349, "sign": [349, 365], "subroutin": 349, "lesser": 349, "philosophi": 349, "why": 349, "lgpl": 349, "herein": 349, "subclass": 349, "minim": 349, "isol": 349, "reproduc": 349, "bound": 349, "suppli": [349, 355], "good": [349, 361], "faith": 349, "meaning": [349, 357], "header": 349, "choic": [349, 358, 360], "numer": 349, "layout": 349, "accessor": 349, "small": [349, 361], "macro": 349, "inlin": 349, "templat": 349, "ten": 349, "fewer": 349, "engin": 349, "debug": 349, "dure": [349, 365], "recombin": 349, "relink": 349, "mechan": 349, "properli": 349, "compat": 349, "4d0": 349, "4d1": 349, "uncombin": 349, "prerequisit": 350, "yet": 350, "simplest": 350, "recommend": [350, 354, 355, 365], "anaconda": 350, "conda": 350, "forg": [350, 351], "pip": 350, "via": 350, "pypi": 350, "instruct": [350, 361], "author": [350, 361], "citat": [350, 361], "elsevi": 350, "ase": 351, "romerogroup": 351, "onc": 351, "robust": [352, 353], "manag": [352, 353, 359, 364, 366], "kohn": [352, 353, 363], "sham": [352, 353, 363], "That": [352, 353], "multitud": [352, 353], "partial": [352, 353], "convent": [354, 355, 358], "s_x": [354, 355, 360, 362], "s_y": [354, 355, 360], "st": [354, 355, 360], "perpendicular": [354, 355, 360], "k_x": [354, 355, 360], "k_y": [354, 355, 360], "rashba": [354, 355, 360], "seismic": [354, 355], "onto": [354, 355, 363], "ion": [354, 355, 362, 363], "five": [354, 355], "_3": [354, 355, 358], "correl": [354, 355], "strongli": [354, 355], "jm": 354, "y_": [354, 355, 363], "site": [354, 355, 363], "logic": [354, 355], "probe": [354, 355], "queri": [354, 355], "portrai": 355, "fine": [355, 360], "let": 355, "usag": [355, 356, 357, 358, 360, 362, 365, 367], "39": 355, "79": 355, "119": 355, "159": 355, "filter": [355, 363], "comparison": [355, 357], "syntax": 355, "bands_up": 355, "block": [355, 363], "meant": 355, "suit": 355, "four": 355, "set_titl": 355, "convers": 355, "variabl": 355, "199": [355, 364, 367], "239": 355, "279": 355, "319": 355, "scriptbandsplot": 355, "larg": [356, 362], "hexagon": [356, 367], "procar_g": 356, "procar_k": 356, "procar_m": 356, "seper": 356, "scriptcat": 356, "acheiv": 357, "elk_dir": 357, "vasp_dir": [357, 358], "srvo_3": 357, "veri": [358, 362], "invlov": 358, "exmpla": 358, "api": 358, "match": 358, "aregumnet": 358, "button": 358, "did": 358, "defalut": 358, "switch": [358, 361], "back": 358, "dos_plain_v": 358, "illustr": [358, 363], "familiar": 358, "lawngreen": 358, "orang": 358, "royalblu": 358, "stach": 358, "anoth": [358, 361], "variat": 358, "central": 359, "known": [359, 361, 364, 366], "dir": [359, 364, 366], "path_to_calcul": [359, 364, 366], "relat": [359, 364, 366], "k1": 359, "k2": 359, "k3": 359, "nprincip": 359, "prinicip": 359, "is_non_collinear": 359, "calcuul": 359, "kpoints_cartesian": 359, "kpoints_reduc": 359, "sometim": 359, "infom": 359, "meshgrid": 359, "index_mesh": 359, "kpoints_mesh": 359, "cartesian_mesh": 359, "bands_mesh": 359, "projected_mesh": 359, "project_phase_mesh": 359, "weights_mesh": 359, "bands_gradient_mesh": 359, "bands_hessian_mesh": 359, "ebs_sum": 359, "ibz2fbz": 359, "recov": 359, "broullin": 359, "dresselhau": 360, "analyz": 360, "topologi": 360, "examin": 360, "lifshitz": 360, "transit": 360, "e_": 360, "noarrow": 360, "usual": 360, "fault": 360, "solut": 360, "90": 360, "degre": 360, "mostli": 360, "220": 360, "Be": 360, "care": 360, "scriptfermi2d": 360, "extern": 361, "phonon": 361, "divid": 361, "sub": 361, "monkhorst": 361, "pack": 361, "isym": 361, "focus": 361, "polygon": 361, "smooth": 361, "cube": 361, "999999": 361, "000001": 361, "triangl": 361, "assign": 361, "aspect": 361, "handel": 361, "isosurfcac": 361, "fermisurfcae3d": 361, "eigen": 361, "bottom": 361, "amaz": 361, "pyvista_doc": 361, "trimesh_doc": 361, "trimesh_cit": 361, "dawson": 361, "haggerti": 361, "trimsh": 361, "sullivan2019pyvista": 361, "21105": 361, "joss": 361, "01450": 361, "month": 361, "37": 361, "1450": 361, "bane": 361, "sullivan": 361, "alexand": 361, "kaszynski": 361, "analysi": [361, 362], "streamlin": 361, "toolkit": 361, "vtk": 361, "linux": 361, "mac": 361, "focu": 361, "zoom": 361, "isometr": 361, "wirefram": 361, "reset": 361, "middl": 361, "pan": 361, "scene": 361, "left": [361, 363], "cmd": 361, "ctrl": 361, "mous": 361, "wheel": 361, "ctl": 361, "screenhsot": 361, "backgroundplott": 361, "pick": 361, "decreas": 361, "scriptfermi3d": 361, "simpler": 362, "subset": 362, "heterostructur": 362, "enorm": 362, "consider": 362, "faster": 362, "rel": 362, "smaller": 362, "70": 362, "ignor": 362, "far": 362, "band50": 362, "low": 362, "column": [362, 363], "real": 362, "filtered_sp": 362, "p_x": 362, "especi": 362, "hybrid": 362, "filtered_kpoint": 362, "filtered_spin": 362, "filter_atom": 362, "atom_typ": 362, "scriptfilt": 362, "orbital_nam": 362, "human_atom": 362, "re": 362, "overview": 363, "guidanc": 363, "conduct": 363, "prep": 363, "commonli": 363, "decompos": 363, "224": 363, "12500000": 363, "52": 363, "65660295": 363, "occ": 363, "052": 363, "000": 363, "comment": 363, "nion": 363, "report": 363, "repeat": 363, "spheric": 363, "sphere": 363, "radiu": 363, "alpha": [363, 366], "phi_": 363, "nk": 363, "sum_": 363, "mu": 363, "nu": 363, "sigma_": 363, "psi_": 363, "sigma": 363, "pauli": 363, "spinor": 363, "bmatrix": 363, "keyboard": 363, "shortcut": 363, "kapth": 364, "nsegment": 364, "belong": 364, "99": 364, "149": 364, "249": 364, "299": 364, "distanc": [364, 367], "8660254": 364, "70710678": 364, "4330127": 364, "8291562": 364, "ill": 365, "lack": 365, "neg": 365, "5000000": 365, "scriptrepair": 365, "beta": 366, "nspeci": 366, "atomic_numb": 366, "lattice_corn": 366, "cell_convex_hul": 366, "get_space_group_numb": 366, "get_space_group_intern": 366, "get_wyckoff_posit": 366, "get_spglib_symmetry_dataset": 366, "often": 367, "primit": 367, "becom": 367, "quit": 367, "sophist": 367, "fold": 367, "difficult": 367, "scheme": 367, "fat": 367, "proport": 367, "shrink": 367, "2x2x2": 367, "doubl": 367, "fname": 367, "diag": 367, "shift_efermi": 367, "54": 367, "86": 367, "110": 367, "147": 367, "165": 367, "print_kpt": 367, "show_band": 367, "savetab": 367, "csv": 367, "unfolded_band": 367, "scriptunfold": 367, "elkin": 367, "unfold_mod": 367, "unfold_mask": 367, "unfold_result": 367, "unfol": 367}, "objects": {"pyprocar.core": [[0, 0, 1, "", "BrillouinZone"], [3, 0, 1, "", "DensityOfStates"], [12, 0, 1, "", "ElectronicBandStructure"], [54, 0, 1, "", "FermiSurface"], [61, 0, 1, "", "FermiSurface3D"], [74, 0, 1, "", "Isosurface"], [81, 0, 1, "", "KPath"], [90, 0, 1, "", "Structure"], [116, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[4, 1, 1, "", "__init__"], [5, 1, 1, "", "coupled_to_uncoupled_basis"], [6, 1, 1, "", "dos_sum"], [7, 1, 1, "", "get_current_basis"], [8, 2, 1, "", "is_non_collinear"], [9, 2, 1, "", "n_dos"], [10, 2, 1, "", "n_energies"], [11, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[13, 1, 1, "", "__init__"], [14, 2, 1, "", "bands_gradient_mesh"], [15, 2, 1, "", "bands_hessian_mesh"], [16, 2, 1, "", "bands_mesh"], [17, 1, 1, "", "calculate_scalar_gradient"], [18, 1, 1, "", "calculate_scalar_integral"], [19, 1, 1, "", "create_nd_mesh"], [20, 1, 1, "", "create_scaler_mesh"], [21, 1, 1, "", "create_vector_mesh"], [22, 1, 1, "", "ebs_sum"], [23, 1, 1, "", "ibz2fbz"], [24, 2, 1, "", "index_mesh"], [25, 2, 1, "", "is_non_collinear"], [26, 2, 1, "", "kpoints_cartesian"], [27, 2, 1, "", "kpoints_cartesian_mesh"], [28, 2, 1, "", "kpoints_mesh"], [29, 2, 1, "", "kpoints_reduced"], [30, 2, 1, "", "n_kx"], [31, 2, 1, "", "n_ky"], [32, 2, 1, "", "n_kz"], [33, 2, 1, "", "natoms"], [34, 2, 1, "", "nbands"], [35, 2, 1, "", "nkpoints"], [36, 2, 1, "", "norbitals"], [37, 2, 1, "", "nprincipals"], [38, 2, 1, "", "nspins"], [39, 1, 1, "", "plot_kpoints"], [40, 2, 1, "", "projected_mesh"], [41, 2, 1, "", "projected_phase_mesh"], [42, 1, 1, "", "unfold"], [43, 1, 1, "", "update_bands_gradient_mesh"], [44, 1, 1, "", "update_bands_hessian_mesh"], [45, 1, 1, "", "update_bands_mesh"], [46, 1, 1, "", "update_index_mesh"], [47, 1, 1, "", "update_kpoints_cartesian_mesh"], [48, 1, 1, "", "update_kpoints_mesh"], [49, 1, 1, "", "update_projected_mesh"], [50, 1, 1, "", "update_projected_phase_mesh"], [51, 1, 1, "", "update_weights"], [52, 1, 1, "", "update_weights_mesh"], [53, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "add_axes_labels"], [57, 1, 1, "", "add_legend"], [58, 1, 1, "", "find_energy"], [59, 1, 1, "", "plot"], [60, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[62, 1, 1, "", "__init__"], [63, 1, 1, "", "calculate_effective_mass"], [64, 1, 1, "", "calculate_fermi_speed"], [65, 1, 1, "", "calculate_fermi_velocity"], [66, 1, 1, "", "calculate_first_and_second_derivative_energy"], [67, 1, 1, "", "calculate_first_and_second_derivative_energy_band"], [68, 1, 1, "", "create_spin_texture"], [69, 1, 1, "", "create_vector_texture"], [70, 1, 1, "", "extend_surface"], [71, 1, 1, "", "project_atomic_projections"], [72, 1, 1, "", "project_color"], [73, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[75, 1, 1, "", "__init__"], [76, 2, 1, "", "dxyz"], [77, 2, 1, "", "nX"], [78, 2, 1, "", "nY"], [79, 2, 1, "", "nZ"], [80, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "get_kpoints_transformed"], [84, 1, 1, "", "get_optimized_kpoints_transformed"], [85, 2, 1, "", "kdistances"], [86, 2, 1, "", "nsegments"], [87, 2, 1, "", "tick_names"], [88, 2, 1, "", "tick_positions"], [89, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[91, 1, 1, "", "__init__"], [92, 2, 1, "", "a"], [93, 2, 1, "", "alpha"], [94, 2, 1, "", "atomic_numbers"], [95, 2, 1, "", "b"], [96, 2, 1, "", "beta"], [97, 2, 1, "", "c"], [98, 2, 1, "", "cell_convex_hull"], [99, 2, 1, "", "density"], [100, 2, 1, "", "gamma"], [101, 1, 1, "", "get_space_group_international"], [102, 1, 1, "", "get_space_group_number"], [103, 1, 1, "", "get_spglib_symmetry_dataset"], [104, 1, 1, "", "get_wyckoff_positions"], [105, 1, 1, "", "is_point_inside"], [106, 2, 1, "", "lattice_corners"], [107, 2, 1, "", "masses"], [108, 2, 1, "", "natoms"], [109, 2, 1, "", "nspecies"], [110, 1, 1, "", "plot_cell_convex_hull"], [111, 2, 1, "", "reciprocal_lattice"], [112, 2, 1, "", "species"], [113, 1, 1, "", "supercell"], [114, 1, 1, "", "transform"], [115, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[117, 1, 1, "", "__init__"], [118, 2, 1, "", "centers"], [119, 1, 1, "", "export"], [120, 2, 1, "", "faces_array"], [121, 1, 1, "", "set_color_with_cmap"], [122, 1, 1, "", "set_scalars"], [123, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[135, 0, 1, "", "AbinitKpoints"], [137, 0, 1, "", "AbinitProcar"], [139, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[136, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[138, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[140, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[141, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[144, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[145, 1, 1, "", "__init__"], [146, 2, 1, "", "dos"], [147, 1, 1, "", "dos_parametric"], [148, 2, 1, "", "dos_projected"], [149, 2, 1, "", "dos_to_dict"], [150, 2, 1, "", "dos_total"], [151, 2, 1, "", "final_structure"], [152, 2, 1, "", "initial_structure"], [153, 1, 1, "", "parse_structure"], [154, 2, 1, "", "species"], [155, 2, 1, "", "structure"], [156, 2, 1, "", "structures"]], "pyprocar.io.qe": [[157, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[158, 1, 1, "", "__init__"], [159, 2, 1, "", "final_structure"], [160, 1, 1, "", "getKpointLabels"], [161, 2, 1, "", "initial_structure"], [162, 1, 1, "", "kpoints_cart"], [163, 2, 1, "", "species"], [164, 2, 1, "", "structure"], [165, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[166, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[167, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[168, 0, 1, "", "Kpoints"], [170, 0, 1, "", "Outcar"], [176, 0, 1, "", "Poscar"], [178, 0, 1, "", "Procar"], [184, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[169, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[171, 1, 1, "", "__init__"], [172, 2, 1, "", "efermi"], [173, 1, 1, "", "get_symmetry_operations"], [174, 2, 1, "", "reciprocal_lattice"], [175, 2, 1, "", "rotations"]], "pyprocar.io.vasp.Poscar": [[177, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[179, 1, 1, "", "__init__"], [180, 2, 1, "", "kpoints_cartesian"], [181, 2, 1, "", "kpoints_reduced"], [182, 1, 1, "", "repair"], [183, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[185, 1, 1, "", "__init__"], [186, 2, 1, "", "bands"], [187, 2, 1, "", "bands_projected"], [188, 1, 1, "", "conv"], [189, 2, 1, "", "convergence"], [190, 2, 1, "", "convergence_electronic"], [191, 2, 1, "", "convergence_ionic"], [192, 2, 1, "", "dos"], [193, 2, 1, "", "dos_projected"], [194, 2, 1, "", "dos_to_dict"], [195, 2, 1, "", "dos_total"], [196, 2, 1, "", "energies"], [197, 2, 1, "", "energy"], [198, 2, 1, "", "fermi"], [199, 2, 1, "", "final_structure"], [200, 2, 1, "", "forces"], [201, 1, 1, "", "get_general"], [202, 1, 1, "", "get_params"], [203, 1, 1, "", "get_scstep"], [204, 1, 1, "", "get_set"], [205, 1, 1, "", "get_structure"], [206, 1, 1, "", "get_varray"], [207, 2, 1, "", "incar"], [208, 2, 1, "", "initial_structure"], [209, 2, 1, "", "is_finished"], [210, 2, 1, "", "iteration_data"], [211, 2, 1, "", "kpoints"], [212, 2, 1, "", "kpoints_list"], [213, 2, 1, "", "last_energy"], [214, 1, 1, "", "parse_vasprun"], [215, 2, 1, "", "potcar_info"], [216, 1, 1, "", "read"], [217, 2, 1, "", "species"], [218, 2, 1, "", "structure"], [219, 2, 1, "", "structures"], [220, 1, 1, "", "text_to_bool"], [221, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[229, 0, 1, "", "DOSPlot"], [248, 0, 1, "", "EBSPlot"], [266, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "draw_fermi"], [232, 1, 1, "", "grid"], [233, 1, 1, "", "legend"], [234, 1, 1, "", "plot_dos"], [235, 1, 1, "", "plot_parametric"], [236, 1, 1, "", "plot_parametric_line"], [237, 1, 1, "", "plot_stack"], [238, 1, 1, "", "plot_stack_orbitals"], [239, 1, 1, "", "plot_stack_species"], [240, 1, 1, "", "save"], [241, 1, 1, "", "set_xlabel"], [242, 1, 1, "", "set_xlim"], [243, 1, 1, "", "set_xticks"], [244, 1, 1, "", "set_ylabel"], [245, 1, 1, "", "set_ylim"], [246, 1, 1, "", "set_yticks"], [247, 1, 1, "", "show"]], "pyprocar.plotter.EBSPlot": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "draw_fermi"], [251, 1, 1, "", "grid"], [252, 1, 1, "", "legend"], [253, 1, 1, "", "plot_bands"], [254, 1, 1, "", "plot_parameteric"], [255, 1, 1, "", "plot_parameteric_overlay"], [256, 1, 1, "", "plot_scatter"], [257, 1, 1, "", "save"], [258, 1, 1, "", "set_title"], [259, 1, 1, "", "set_xlabel"], [260, 1, 1, "", "set_xlim"], [261, 1, 1, "", "set_xticks"], [262, 1, 1, "", "set_ylabel"], [263, 1, 1, "", "set_ylim"], [264, 1, 1, "", "set_yticks"], [265, 1, 1, "", "show"]], "pyprocar.plotter.ProcarPlot": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "atomicPlot"], [269, 1, 1, "", "parametricPlot"], [270, 1, 1, "", "plotBands"], [271, 1, 1, "", "scatterPlot"]], "pyprocar": [[358, 3, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[276, 0, 1, "", "FermiHandler"], [283, 4, 1, "", "bandgap"], [284, 4, 1, "", "bandsdosplot"], [285, 4, 1, "", "bandsplot"], [286, 4, 1, "", "bandsplot_2d"], [287, 4, 1, "", "cat"], [288, 4, 1, "", "dosplot"], [289, 4, 1, "", "fermi2D"], [290, 4, 1, "", "fermi3D"], [291, 4, 1, "", "generate2dkmesh"], [292, 4, 1, "", "kpath"], [293, 4, 1, "", "repair"], [355, 3, 0, "-", "scriptBandsplot"], [356, 3, 0, "-", "scriptCat"], [360, 3, 0, "-", "scriptFermi2D"], [361, 3, 0, "-", "scriptFermi3D"], [362, 3, 0, "-", "scriptFilter"], [365, 3, 0, "-", "scriptRepair"], [367, 3, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[277, 1, 1, "", "__init__"], [278, 1, 1, "", "create_isovalue_gif"], [279, 1, 1, "", "plot_fermi_cross_section"], [280, 1, 1, "", "plot_fermi_cross_section_box_widget"], [281, 1, 1, "", "plot_fermi_isoslider"], [282, 1, 1, "", "plot_fermi_surface"]], "pyprocar.scripts.scriptBandsplot": [[355, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[356, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[360, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[361, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[362, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[365, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[367, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pyprocar": [0, 3, 12, 54, 61, 74, 81, 90, 116, 135, 137, 139, 141, 144, 157, 166, 168, 170, 176, 178, 184, 229, 248, 266, 276, 349, 350, 352, 353], "core": [0, 3, 12, 54, 61, 74, 81, 90, 116, 129], "brillouinzon": [0, 124], "__init__": [1, 4, 13, 55, 62, 75, 82, 91, 117, 136, 138, 140, 142, 145, 158, 167, 169, 171, 177, 179, 185, 230, 249, 267, 277], "wigner_seitz": 2, "densityofst": [3, 125], "coupled_to_uncoupled_basi": 5, "dos_sum": 6, "get_current_basi": 7, "is_non_collinear": [8, 25], "n_do": 9, "n_energi": 10, "n_spin": 11, "electronicbandstructur": [12, 126, 359], "bands_gradient_mesh": 14, "bands_hessian_mesh": 15, "bands_mesh": 16, "calculate_scalar_gradi": 17, "calculate_scalar_integr": 18, "create_nd_mesh": 19, "create_scaler_mesh": 20, "create_vector_mesh": 21, "ebs_sum": 22, "ibz2fbz": 23, "index_mesh": 24, "kpoints_cartesian": [26, 180], "kpoints_cartesian_mesh": 27, "kpoints_mesh": 28, "kpoints_reduc": [29, 181], "n_kx": 30, "n_ky": 31, "n_kz": 32, "natom": [33, 108], "nband": 34, "nkpoint": 35, "norbit": 36, "nprincip": 37, "nspin": 38, "plot_kpoint": 39, "projected_mesh": 40, "projected_phase_mesh": 41, "unfold": [42, 367], "update_bands_gradient_mesh": 43, "update_bands_hessian_mesh": 44, "update_bands_mesh": 45, "update_index_mesh": 46, "update_kpoints_cartesian_mesh": 47, "update_kpoints_mesh": 48, "update_projected_mesh": 49, "update_projected_phase_mesh": 50, "update_weight": 51, "update_weights_mesh": 52, "weights_mesh": 53, "fermisurfac": [54, 127], "add_axes_label": 56, "add_legend": 57, "find_energi": 58, "plot": [59, 315, 317, 318, 319, 322, 323, 324, 325, 327, 328, 331, 332, 336, 337, 338, 339, 340, 341, 344, 346, 348, 355, 360, 367], "spin_textur": [60, 341], "fermisurface3d": [61, 128], "calculate_effective_mass": 63, "calculate_fermi_spe": 64, "calculate_fermi_veloc": 65, "calculate_first_and_second_derivative_energi": 66, "calculate_first_and_second_derivative_energy_band": 67, "create_spin_textur": 68, "create_vector_textur": 69, "extend_surfac": 70, "project_atomic_project": 71, "project_color": 72, "project_spin_texture_atomic_project": 73, "isosurfac": [74, 130], "dxyz": 76, "nx": 77, "ny": 78, "nz": 79, "surface_boundari": 80, "kpath": [81, 131, 292, 305, 364], "get_kpoints_transform": 83, "get_optimized_kpoints_transform": 84, "kdistanc": 85, "nsegment": 86, "tick_nam": 87, "tick_posit": 88, "write_to_fil": 89, "structur": [90, 132, 155, 156, 164, 165, 218, 219, 311, 313, 314, 315, 316, 317, 318, 319, 348, 355, 359, 366], "alpha": 93, "atomic_numb": 94, "b": 95, "beta": 96, "c": 97, "cell_convex_hul": 98, "densiti": [99, 311, 313, 321, 322, 325, 348, 358], "gamma": 100, "get_space_group_intern": 101, "get_space_group_numb": 102, "get_spglib_symmetry_dataset": 103, "get_wyckoff_posit": 104, "is_point_insid": 105, "lattice_corn": 106, "mass": 107, "nspeci": 109, "plot_cell_convex_hul": 110, "reciprocal_lattic": [111, 174], "speci": [112, 154, 163, 217], "supercel": 113, "transform": 114, "volum": 115, "surfac": [116, 133, 335, 361], "center": 118, "export": [119, 355, 360, 367], "faces_arrai": 120, "set_color_with_cmap": 121, "set_scalar": 122, "set_vector": 123, "api": [129, 134, 224, 274, 304], "refer": 134, "io": [135, 137, 139, 141, 144, 157, 166, 168, 170, 176, 178, 184, 224], "abinit": [135, 137, 139, 307], "abinitkpoint": 135, "abinitprocar": 137, "output": 139, "bxsf": 141, "bxsfparser": [141, 223], "parse_bxsf": 143, "lobster": [144, 310], "lobsterpars": [144, 225], "do": [146, 192, 323, 324, 327, 348], "dos_parametr": 147, "dos_project": [148, 193], "dos_to_dict": [149, 194], "dos_tot": [150, 195], "final_structur": [151, 159, 199], "initial_structur": [152, 161, 208], "parse_structur": 153, "qe": 157, "qepars": [157, 226], "getkpointlabel": 160, "kpoints_cart": 162, "siesta": [166, 312], "siestapars": [166, 227], "vasp": [168, 170, 176, 178, 184, 313, 318, 324], "kpoint": [168, 211, 360], "outcar": 170, "efermi": 172, "get_symmetry_oper": 173, "rotat": [175, 360], "poscar": 176, "procar": 178, "repair": [182, 293, 365], "symmetr": 183, "vaspxml": 184, "band": [186, 311, 313, 314, 315, 316, 317, 318, 319, 327, 331, 332, 348, 355, 357, 359, 367], "bands_project": 187, "conv": 188, "converg": 189, "convergence_electron": 190, "convergence_ion": 191, "energi": [196, 197], "fermi": [198, 311, 313, 330, 334, 335, 348, 361], "forc": 200, "get_gener": 201, "get_param": 202, "get_scstep": 203, "get_set": 204, "get_structur": 205, "get_varrai": 206, "incar": 207, "is_finish": 209, "iteration_data": 210, "kpoints_list": 212, "last_energi": 213, "parse_vasprun": 214, "potcar_info": 215, "read": 216, "text_to_bool": 220, "vasp_paramet": 221, "abinitpars": 222, "vasppars": 228, "plotter": [229, 248, 266, 274], "dosplot": [229, 273, 288, 299], "draw_fermi": [231, 250], "grid": [232, 251], "legend": [233, 252], "plot_do": 234, "plot_parametr": 235, "plot_parametric_lin": 236, "plot_stack": 237, "plot_stack_orbit": 238, "plot_stack_speci": 239, "save": [240, 257, 336], "set_xlabel": [241, 259], "set_xlim": [242, 260], "set_xtick": [243, 261], "set_ylabel": [244, 262], "set_ylim": [245, 263], "set_ytick": [246, 264], "show": [247, 265, 335], "ebsplot": [248, 272], "plot_band": 253, "plot_parameter": 254, "plot_parameteric_overlai": 255, "plot_scatt": 256, "set_titl": 258, "procarplot": [266, 275], "atomicplot": 268, "parametricplot": 269, "plotband": 270, "scatterplot": 271, "script": [276, 304], "fermihandl": [276, 302], "create_isovalue_gif": 278, "plot_fermi_cross_sect": 279, "plot_fermi_cross_section_box_widget": 280, "plot_fermi_isoslid": 281, "plot_fermi_surfac": 282, "bandgap": [283, 294, 345], "bandsdosplot": [284, 295, 328], "bandsplot": [285, 296], "bandsplot_2d": [286, 297], "cat": [287, 298], "fermi2d": [289, 300, 331, 332], "fermi3d": [290, 301, 336, 337, 338, 339, 340, 341], "generate2dkmesh": [291, 303], "reapir": 306, "perper": [307, 308, 310, 312], "elk": 308, "dft": 309, "prep": 309, "quantum": [311, 317, 323], "espresso": [311, 317, 323], "prepar": [311, 313], "calcul": [311, 313, 356], "state": [311, 313, 321, 322, 325, 348, 358], "k": [311, 313, 346, 355, 362, 364], "point": [311, 313, 355, 362], "format": [311, 313], "magnet": [311, 313], "plain": [315, 317, 318, 319, 322, 325, 328, 331, 337, 338, 339, 340, 355, 358], "mode": [315, 317, 318, 319, 322, 323, 324, 325, 328, 331, 337, 338, 339, 340, 341, 358], "parametr": [315, 317, 318, 319, 322, 323, 324, 325, 331, 339, 340, 358], "parametric_linemod": 315, "scatter": [315, 319], "overlay_speci": 315, "overlay_orbti": 315, "overlai": [315, 322], "orbit": [315, 354, 355, 362], "name": 315, "compar": [316, 357], "non": [317, 318, 323, 324], "colinear": [317, 318, 323, 324], "spin": [319, 325, 332, 340, 341, 354, 355, 360, 362], "polar": [319, 325, 340], "comput": [320, 326, 329, 333, 342, 347], "time": [320, 326, 329, 333, 342, 347], "parametric_lin": [322, 325, 358], "stack_speci": [322, 325, 358], "stack_orbti": [322, 325], "stack": [325, 358], "2d": [330, 348, 360], "plain_band": 331, "select": [331, 332, 362], "indic": [331, 332, 353], "noncolinear": 332, "textur": [332, 341, 360], "project": [332, 354, 355], "singl": 332, "color": 332, "3d": [334, 348, 361], "how": 335, "get": [335, 350], "van": 335, "alphen": 335, "fequenc": 335, "from": [335, 355], "maxim": 335, "cross": [335, 336], "section": [335, 336], "area": 335, "along": 335, "0": 335, "1": [335, 354, 355, 358], "minim": 335, "extrem": 335, "cross_sect": 336, "slice": 336, "isoslid": 337, "isovalue_gif": 338, "other": [343, 348], "exampl": [344, 345, 346, 348], "kmesh_gener": 344, "kmesh": 344, "find": 345, "kpath_gener": 346, "path": [346, 355, 364], "author": 349, "citat": 349, "cite": [349, 350], "contributor": 349, "develop": 349, "licens": 349, "start": 350, "instal": [350, 351], "paper": 350, "support": 350, "pip": 351, "conda": 351, "clone": 351, "through": 351, "github": 351, "after": 351, "why": 352, "tabl": 353, "atom": [354, 355, 362], "2": [354, 355, 358], "3": [354, 355, 358], "4": [355, 358], "matplotlib": [355, 360, 367], "pyplot": [355, 360, 367], "object": [355, 360, 367], "convert": 355, "reduc": 355, "cartesian": 355, "coordin": 355, "discontinu": 355, "concaten": 356, "multipl": 356, "5": 358, "6": 358, "stack_orbit": 358, "access": [359, 364, 366], "electron": 359, "translat": 360, "mesh": 360, "keyboard": 361, "shortcut": 361, "filter": 362, "data": 362, "To": 362, "user": 363, "guid": 363, "further": 363, "detail": 363, "inform": [364, 366]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pyprocar.core.BrillouinZone": [[0, "pyprocar-core-brillouinzone"]], "__init__": [[1, "init"], [4, "init"], [13, "init"], [55, "init"], [62, "init"], [75, "init"], [82, "init"], [91, "init"], [117, "init"], [136, "init"], [138, "init"], [140, "init"], [142, "init"], [145, "init"], [158, "init"], [167, "init"], [169, "init"], [171, "init"], [177, "init"], [179, "init"], [185, "init"], [230, "init"], [249, "init"], [267, "init"], [277, "init"]], "wigner_seitz": [[2, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[3, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[5, "coupled-to-uncoupled-basis"]], "dos_sum": [[6, "dos-sum"]], "get_current_basis": [[7, "get-current-basis"]], "is_non_collinear": [[8, "is-non-collinear"], [25, "is-non-collinear"]], "n_dos": [[9, "n-dos"]], "n_energies": [[10, "n-energies"]], "n_spins": [[11, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[12, "pyprocar-core-electronicbandstructure"]], "bands_gradient_mesh": [[14, "bands-gradient-mesh"]], "bands_hessian_mesh": [[15, "bands-hessian-mesh"]], "bands_mesh": [[16, "bands-mesh"]], "calculate_scalar_gradient": [[17, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[18, "calculate-scalar-integral"]], "create_nd_mesh": [[19, "create-nd-mesh"]], "create_scaler_mesh": [[20, "create-scaler-mesh"]], "create_vector_mesh": [[21, "create-vector-mesh"]], "ebs_sum": [[22, "ebs-sum"]], "ibz2fbz": [[23, "ibz2fbz"]], "index_mesh": [[24, "index-mesh"]], "kpoints_cartesian": [[26, "kpoints-cartesian"], [180, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[27, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[28, "kpoints-mesh"]], "kpoints_reduced": [[29, "kpoints-reduced"], [181, "kpoints-reduced"]], "n_kx": [[30, "n-kx"]], "n_ky": [[31, "n-ky"]], "n_kz": [[32, "n-kz"]], "natoms": [[33, "natoms"], [108, "natoms"]], "nbands": [[34, "nbands"]], "nkpoints": [[35, "nkpoints"]], "norbitals": [[36, "norbitals"]], "nprincipals": [[37, "nprincipals"]], "nspins": [[38, "nspins"]], "plot_kpoints": [[39, "plot-kpoints"]], "projected_mesh": [[40, "projected-mesh"]], "projected_phase_mesh": [[41, "projected-phase-mesh"]], "unfold": [[42, "unfold"]], "update_bands_gradient_mesh": [[43, "update-bands-gradient-mesh"]], "update_bands_hessian_mesh": [[44, "update-bands-hessian-mesh"]], "update_bands_mesh": [[45, "update-bands-mesh"]], "update_index_mesh": [[46, "update-index-mesh"]], "update_kpoints_cartesian_mesh": [[47, "update-kpoints-cartesian-mesh"]], "update_kpoints_mesh": [[48, "update-kpoints-mesh"]], "update_projected_mesh": [[49, "update-projected-mesh"]], "update_projected_phase_mesh": [[50, "update-projected-phase-mesh"]], "update_weights": [[51, "update-weights"]], "update_weights_mesh": [[52, "update-weights-mesh"]], "weights_mesh": [[53, "weights-mesh"]], "pyprocar.core.FermiSurface": [[54, "pyprocar-core-fermisurface"]], "add_axes_labels": [[56, "add-axes-labels"]], "add_legend": [[57, "add-legend"]], "find_energy": [[58, "find-energy"]], "plot": [[59, "plot"]], "spin_texture": [[60, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[61, "pyprocar-core-fermisurface3d"]], "calculate_effective_mass": [[63, "calculate-effective-mass"]], "calculate_fermi_speed": [[64, "calculate-fermi-speed"]], "calculate_fermi_velocity": [[65, "calculate-fermi-velocity"]], "calculate_first_and_second_derivative_energy": [[66, "calculate-first-and-second-derivative-energy"]], "calculate_first_and_second_derivative_energy_band": [[67, "calculate-first-and-second-derivative-energy-band"]], "create_spin_texture": [[68, "create-spin-texture"]], "create_vector_texture": [[69, "create-vector-texture"]], "extend_surface": [[70, "extend-surface"]], "project_atomic_projections": [[71, "project-atomic-projections"]], "project_color": [[72, "project-color"]], "project_spin_texture_atomic_projections": [[73, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[74, "pyprocar-core-isosurface"]], "dxyz": [[76, "dxyz"]], "nX": [[77, "nx"]], "nY": [[78, "ny"]], "nZ": [[79, "nz"]], "surface_boundaries": [[80, "surface-boundaries"]], "pyprocar.core.KPath": [[81, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[83, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[84, "get-optimized-kpoints-transformed"]], "kdistances": [[85, "kdistances"]], "nsegments": [[86, "nsegments"]], "tick_names": [[87, "tick-names"]], "tick_positions": [[88, "tick-positions"]], "write_to_file": [[89, "write-to-file"]], "pyprocar.core.Structure": [[90, "pyprocar-core-structure"]], "a": [[92, "a"]], "alpha": [[93, "alpha"]], "atomic_numbers": [[94, "atomic-numbers"]], "b": [[95, "b"]], "beta": [[96, "beta"]], "c": [[97, "c"]], "cell_convex_hull": [[98, "cell-convex-hull"]], "density": [[99, "density"]], "gamma": [[100, "gamma"]], "get_space_group_international": [[101, "get-space-group-international"]], "get_space_group_number": [[102, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[103, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[104, "get-wyckoff-positions"]], "is_point_inside": [[105, "is-point-inside"]], "lattice_corners": [[106, "lattice-corners"]], "masses": [[107, "masses"]], "nspecies": [[109, "nspecies"]], "plot_cell_convex_hull": [[110, "plot-cell-convex-hull"]], "reciprocal_lattice": [[111, "reciprocal-lattice"], [174, "reciprocal-lattice"]], "species": [[112, "species"], [154, "species"], [163, "species"], [217, "species"]], "supercell": [[113, "supercell"]], "transform": [[114, "transform"]], "volume": [[115, "volume"]], "pyprocar.core.Surface": [[116, "pyprocar-core-surface"]], "centers": [[118, "centers"]], "export": [[119, "export"]], "faces_array": [[120, "faces-array"]], "set_color_with_cmap": [[121, "set-color-with-cmap"]], "set_scalars": [[122, "set-scalars"]], "set_vectors": [[123, "set-vectors"]], "BrillouinZone": [[124, "brillouinzone"]], "DensityOfStates": [[125, "densityofstates"]], "ElectronicBandStructure": [[126, "electronicbandstructure"], [359, "electronicbandstructure"]], "FermiSurface": [[127, "fermisurface"]], "FermiSurface3D": [[128, "fermisurface3d"]], "Core API": [[129, "core-api"]], "Isosurface": [[130, "isosurface"]], "KPath": [[131, "kpath"]], "Structure": [[132, "structure"], [366, "structure"]], "Surface": [[133, "surface"]], "API Reference": [[134, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[135, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[137, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[139, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[141, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[143, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[144, "pyprocar-io-lobster-lobsterparser"]], "dos": [[146, "dos"], [192, "dos"]], "dos_parametric": [[147, "dos-parametric"]], "dos_projected": [[148, "dos-projected"], [193, "dos-projected"]], "dos_to_dict": [[149, "dos-to-dict"], [194, "dos-to-dict"]], "dos_total": [[150, "dos-total"], [195, "dos-total"]], "final_structure": [[151, "final-structure"], [159, "final-structure"], [199, "final-structure"]], "initial_structure": [[152, "initial-structure"], [161, "initial-structure"], [208, "initial-structure"]], "parse_structure": [[153, "parse-structure"]], "structure": [[155, "structure"], [164, "structure"], [218, "structure"]], "structures": [[156, "structures"], [165, "structures"], [219, "structures"]], "pyprocar.io.qe.QEParser": [[157, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[160, "getkpointlabels"]], "kpoints_cart": [[162, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[166, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[168, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[170, "pyprocar-io-vasp-outcar"]], "efermi": [[172, "efermi"]], "get_symmetry_operations": [[173, "get-symmetry-operations"]], "rotations": [[175, "rotations"]], "pyprocar.io.vasp.Poscar": [[176, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[178, "pyprocar-io-vasp-procar"]], "repair": [[182, "repair"], [293, "repair"]], "symmetrize": [[183, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[184, "pyprocar-io-vasp-vaspxml"]], "bands": [[186, "bands"]], "bands_projected": [[187, "bands-projected"]], "conv": [[188, "conv"]], "convergence": [[189, "convergence"]], "convergence_electronic": [[190, "convergence-electronic"]], "convergence_ionic": [[191, "convergence-ionic"]], "energies": [[196, "energies"]], "energy": [[197, "energy"]], "fermi": [[198, "fermi"]], "forces": [[200, "forces"]], "get_general": [[201, "get-general"]], "get_params": [[202, "get-params"]], "get_scstep": [[203, "get-scstep"]], "get_set": [[204, "get-set"]], "get_structure": [[205, "get-structure"]], "get_varray": [[206, "get-varray"]], "incar": [[207, "incar"]], "is_finished": [[209, "is-finished"]], "iteration_data": [[210, "iteration-data"]], "kpoints": [[211, "kpoints"]], "kpoints_list": [[212, "kpoints-list"]], "last_energy": [[213, "last-energy"]], "parse_vasprun": [[214, "parse-vasprun"]], "potcar_info": [[215, "potcar-info"]], "read": [[216, "read"]], "text_to_bool": [[220, "text-to-bool"]], "vasp_parameters": [[221, "vasp-parameters"]], "AbinitParser": [[222, "abinitparser"]], "BxsfParser": [[223, "bxsfparser"]], "IO API": [[224, "io-api"]], "LobsterParser": [[225, "lobsterparser"]], "QEParser": [[226, "qeparser"]], "SiestaParser": [[227, "siestaparser"]], "VaspParser": [[228, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[229, "pyprocar-plotter-dosplot"]], "draw_fermi": [[231, "draw-fermi"], [250, "draw-fermi"]], "grid": [[232, "grid"], [251, "grid"]], "legend": [[233, "legend"], [252, "legend"]], "plot_dos": [[234, "plot-dos"]], "plot_parametric": [[235, "plot-parametric"]], "plot_parametric_line": [[236, "plot-parametric-line"]], "plot_stack": [[237, "plot-stack"]], "plot_stack_orbitals": [[238, "plot-stack-orbitals"]], "plot_stack_species": [[239, "plot-stack-species"]], "save": [[240, "save"], [257, "save"]], "set_xlabel": [[241, "set-xlabel"], [259, "set-xlabel"]], "set_xlim": [[242, "set-xlim"], [260, "set-xlim"]], "set_xticks": [[243, "set-xticks"], [261, "set-xticks"]], "set_ylabel": [[244, "set-ylabel"], [262, "set-ylabel"]], "set_ylim": [[245, "set-ylim"], [263, "set-ylim"]], "set_yticks": [[246, "set-yticks"], [264, "set-yticks"]], "show": [[247, "show"], [265, "show"]], "pyprocar.plotter.EBSPlot": [[248, "pyprocar-plotter-ebsplot"]], "plot_bands": [[253, "plot-bands"]], "plot_parameteric": [[254, "plot-parameteric"]], "plot_parameteric_overlay": [[255, "plot-parameteric-overlay"]], "plot_scatter": [[256, "plot-scatter"]], "set_title": [[258, "set-title"]], "pyprocar.plotter.ProcarPlot": [[266, "pyprocar-plotter-procarplot"]], "atomicPlot": [[268, "atomicplot"]], "parametricPlot": [[269, "parametricplot"]], "plotBands": [[270, "plotbands"]], "scatterPlot": [[271, "scatterplot"]], "EBSPlot": [[272, "ebsplot"]], "DosPlot": [[273, "dosplot"]], "Plotter API": [[274, "plotter-api"]], "ProcarPlot": [[275, "procarplot"]], "pyprocar.scripts.FermiHandler": [[276, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[278, "create-isovalue-gif"]], "plot_fermi_cross_section": [[279, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[280, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[281, "plot-fermi-isoslider"]], "plot_fermi_surface": [[282, "plot-fermi-surface"]], "bandgap": [[283, "bandgap"], [294, "bandgap"]], "bandsdosplot": [[284, "bandsdosplot"], [295, "bandsdosplot"]], "bandsplot": [[285, "bandsplot"], [296, "bandsplot"]], "bandsplot_2d": [[286, "bandsplot-2d"], [297, "bandsplot-2d"]], "cat": [[287, "cat"], [298, "cat"]], "dosplot": [[288, "dosplot"], [299, "dosplot"]], "fermi2D": [[289, "fermi2d"], [300, "fermi2d"]], "fermi3D": [[290, "fermi3d"], [301, "fermi3d"]], "generate2dkmesh": [[291, "generate2dkmesh"], [303, "generate2dkmesh"]], "kpath": [[292, "kpath"], [305, "kpath"]], "FermiHandler": [[302, "fermihandler"]], "Scripts API": [[304, "scripts-api"]], "reapir": [[306, "reapir"]], "Abinit Perperation": [[307, "abinit-perperation"]], "Elk Perperation": [[308, "elk-perperation"]], "DFT Prep": [[309, "dft-prep"]], "Lobster Perperation": [[310, "lobster-perperation"]], "Quantum Espresso Preparation": [[311, "quantum-espresso-preparation"]], "Preparing Calculations": [[311, "preparing-calculations"], [313, "preparing-calculations"]], "Band Structure": [[311, "band-structure"], [313, "band-structure"], [314, "band-structure"], [348, "band-structure"]], "Density of States": [[311, "density-of-states"], [313, "density-of-states"], [321, "density-of-states"], [348, "density-of-states"], [358, "density-of-states"]], "Band Structure and Density of States": [[311, "band-structure-and-density-of-states"], [313, "band-structure-and-density-of-states"]], "Fermi": [[311, "fermi"], [313, "fermi"]], "K-Points Format": [[311, "k-points-format"], [313, "k-points-format"]], "Magnetic Calculations": [[311, "magnetic-calculations"], [313, "magnetic-calculations"]], "Siesta Perperation": [[312, "siesta-perperation"]], "VASP Preparation": [[313, "vasp-preparation"]], "Plotting band structure": [[315, "plotting-band-structure"]], "Plain mode": [[315, "plain-mode"], [317, "plain-mode"], [318, "plain-mode"], [319, "plain-mode"], [322, "plain-mode"], [325, "plain-mode"], [328, "plain-mode"], [331, "plain-mode"], [337, "plain-mode"], [338, "plain-mode"], [339, "plain-mode"], [340, "plain-mode"]], "Parametric mode": [[315, "parametric-mode"], [317, "parametric-mode"], [318, "parametric-mode"], [319, "parametric-mode"], [322, "parametric-mode"], [323, "parametric-mode"], [324, "parametric-mode"], [325, "parametric-mode"], [339, "parametric-mode"], [340, "parametric-mode"]], "parametric_linemode": [[315, "parametric-linemode"]], "Scatter mode": [[315, "scatter-mode"], [319, "scatter-mode"]], "overlay_species mode": [[315, "overlay-species-mode"]], "overlay_orbtials mode": [[315, "overlay-orbtials-mode"]], "overlay mode": [[315, "overlay-mode"], [322, "overlay-mode"]], "overlay mode by orbital names": [[315, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[316, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[317, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[318, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[319, "plotting-spin-polarized-band-structures"]], "Computation times": [[320, "computation-times"], [326, "computation-times"], [329, "computation-times"], [333, "computation-times"], [342, "computation-times"], [347, "computation-times"]], "Plotting density of states": [[322, "plotting-density-of-states"]], "parametric_line mode": [[322, "parametric-line-mode"], [325, "parametric-line-mode"]], "stack_species mode": [[322, "stack-species-mode"], [325, "stack-species-mode"]], "stack_orbtials mode": [[322, "stack-orbtials-mode"], [325, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[323, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[324, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[325, "plotting-spin-polarized-density-of-states"]], "stack mode": [[325, "stack-mode"]], "Bands and Dos plot": [[327, "bands-and-dos-plot"], [348, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[328, "plotting-bandsdosplot"]], "Fermi 2D": [[330, "fermi-2d"], [348, "fermi-2d"]], "Plotting fermi2d": [[331, "plotting-fermi2d"]], "plain_bands mode": [[331, "plain-bands-mode"]], "parametric mode": [[331, "parametric-mode"]], "Selecting band indices": [[331, "selecting-band-indices"], [332, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[332, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[332, "spin-texture-projection"]], "Spin Texture single color": [[332, "spin-texture-single-color"]], "Fermi 3D": [[334, "fermi-3d"], [348, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[335, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[335, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[335, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[335, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[336, "plotting-fermi3d-cross-section"]], "Cross section": [[336, "cross-section"]], "Cross section. Save slice": [[336, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[337, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[338, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[339, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[340, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[341, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[341, "spin-texture-mode"]], "Other": [[343, "other"], [348, "other"]], "Example of kmesh_generator": [[344, "example-of-kmesh-generator"]], "Plotting Kmesh": [[344, "plotting-kmesh"]], "Example of finding the bandgap": [[345, "example-of-finding-the-bandgap"]], "Example of kpath_generator": [[346, "example-of-kpath-generator"]], "Plotting K Path": [[346, "plotting-k-path"]], "Examples": [[348, "examples"]], "Authors & Citation": [[349, "authors-citation"]], "Citing PyProcar": [[349, "citing-pyprocar"], [350, "citing-pyprocar"]], "Authors": [[349, "authors"]], "Contributors": [[349, "contributors"]], "Developers": [[349, "developers"]], "License": [[349, "license"]], "Getting started": [[350, "getting-started"]], "Installation": [[350, "installation"], [351, "installation"]], "Paper": [[350, "paper"]], "Support": [[350, "support"]], "Installing with pip": [[351, "installing-with-pip"]], "Installing with conda": [[351, "installing-with-conda"]], "Cloning through GitHub": [[351, "cloning-through-github"]], "After Installation": [[351, "after-installation"]], "Why PyProcar?": [[352, "why-pyprocar"]], "PyProcar": [[353, "pyprocar"]], "Indices and tables": [[353, "indices-and-tables"]], "Atomic Projections": [[354, "atomic-projections"]], "1. Spin projection": [[354, "spin-projection"]], "2. Atom projection": [[354, "atom-projection"]], "3. Orbital projection": [[354, "orbital-projection"]], "Band structure": [[355, "band-structure"]], "1. Plain band structure": [[355, "plain-band-structure"]], "2. Spin projection": [[355, "spin-projection"]], "3. Atom projection": [[355, "atom-projection"]], "4. Orbital projection": [[355, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[355, "export-plot-as-a-matplotlib-pyplot-object"], [360, "export-plot-as-a-matplotlib-pyplot-object"], [367, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[355, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[355, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[356, "concatenating-multiple-calculations"]], "Compare bands": [[357, "compare-bands"]], "1. mode='plain'": [[358, "mode-plain"]], "2. mode='parametric'": [[358, "mode-parametric"]], "3. mode='parametric_line'": [[358, "mode-parametric-line"]], "4. mode='stack'": [[358, "mode-stack"]], "5. mode='stack_species'": [[358, "mode-stack-species"]], "6. mode='stack_orbitals'": [[358, "mode-stack-orbitals"]], "Accessing Electronic Band Structure": [[359, "accessing-electronic-band-structure"]], "2D spin-texture": [[360, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[360, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[361, "d-fermi-surface"]], "3D surfaces": [[361, "d-surfaces"]], "Keyboard shortcuts": [[361, "keyboard-shortcuts"]], "Filtering data": [[362, "filtering-data"]], "To filter selected orbitals": [[362, "to-filter-selected-orbitals"]], "To filter selected k-points": [[362, "to-filter-selected-k-points"]], "To filter selected spins": [[362, "to-filter-selected-spins"]], "To filter selected atoms": [[362, "to-filter-selected-atoms"]], "User Guide": [[363, "user-guide"]], "Further Details": [[363, "further-details"]], "K Path": [[364, "k-path"]], "Accessing Kpath Information": [[364, "accessing-kpath-information"]], "Repair": [[365, "repair"]], "Accessing Structure Information": [[366, "accessing-structure-information"]], "Band unfolding": [[367, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[0, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[1, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[2, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[3, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[4, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[5, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[6, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[7, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[8, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[9, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[10, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[11, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[12, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[13, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[14, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[15, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[16, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[17, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[18, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[20, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[21, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[22, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[23, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[25, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[26, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[27, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[28, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[29, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[30, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[31, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[32, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[37, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[41, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[42, "pyprocar.core.ElectronicBandStructure.unfold"]], "update_bands_gradient_mesh() (pyprocar.core.electronicbandstructure method)": [[43, "pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh"]], "update_bands_hessian_mesh() (pyprocar.core.electronicbandstructure method)": [[44, "pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh"]], "update_bands_mesh() (pyprocar.core.electronicbandstructure method)": [[45, "pyprocar.core.ElectronicBandStructure.update_bands_mesh"]], "update_index_mesh() (pyprocar.core.electronicbandstructure method)": [[46, "pyprocar.core.ElectronicBandStructure.update_index_mesh"]], "update_kpoints_cartesian_mesh() (pyprocar.core.electronicbandstructure method)": [[47, "pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh"]], "update_kpoints_mesh() (pyprocar.core.electronicbandstructure method)": [[48, "pyprocar.core.ElectronicBandStructure.update_kpoints_mesh"]], "update_projected_mesh() (pyprocar.core.electronicbandstructure method)": [[49, "pyprocar.core.ElectronicBandStructure.update_projected_mesh"]], "update_projected_phase_mesh() (pyprocar.core.electronicbandstructure method)": [[50, "pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh"]], "update_weights() (pyprocar.core.electronicbandstructure method)": [[51, "pyprocar.core.ElectronicBandStructure.update_weights"]], "update_weights_mesh() (pyprocar.core.electronicbandstructure method)": [[52, "pyprocar.core.ElectronicBandStructure.update_weights_mesh"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[54, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[55, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[56, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[57, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[58, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[59, "pyprocar.core.FermiSurface.plot"]], "spin_texture() (pyprocar.core.fermisurface method)": [[60, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[61, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[62, "pyprocar.core.FermiSurface3D.__init__"]], "calculate_effective_mass() (pyprocar.core.fermisurface3d method)": [[63, "pyprocar.core.FermiSurface3D.calculate_effective_mass"]], "calculate_fermi_speed() (pyprocar.core.fermisurface3d method)": [[64, "pyprocar.core.FermiSurface3D.calculate_fermi_speed"]], "calculate_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[65, "pyprocar.core.FermiSurface3D.calculate_fermi_velocity"]], "calculate_first_and_second_derivative_energy() (pyprocar.core.fermisurface3d method)": [[66, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy"]], "calculate_first_and_second_derivative_energy_band() (pyprocar.core.fermisurface3d method)": [[67, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band"]], "create_spin_texture() (pyprocar.core.fermisurface3d method)": [[68, "pyprocar.core.FermiSurface3D.create_spin_texture"]], "create_vector_texture() (pyprocar.core.fermisurface3d method)": [[69, "pyprocar.core.FermiSurface3D.create_vector_texture"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[70, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[71, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_color() (pyprocar.core.fermisurface3d method)": [[72, "pyprocar.core.FermiSurface3D.project_color"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[74, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[75, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[76, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[77, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[78, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[79, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[80, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[81, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[82, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[83, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[84, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[85, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[86, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[87, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[88, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[89, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[90, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[91, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[92, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[93, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[94, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[95, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[96, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[97, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[101, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[102, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[103, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[104, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[105, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[106, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[107, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[108, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[109, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[110, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[111, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[113, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[114, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[116, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[117, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[118, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[119, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[120, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[121, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[122, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[123, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[135, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[136, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[137, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[138, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[139, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[140, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[141, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[142, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[143, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[144, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[145, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[146, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[147, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[148, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[149, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[150, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[151, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[153, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[156, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[157, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[158, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[159, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[160, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[161, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[162, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[163, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[164, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[165, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[166, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[167, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[168, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[169, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[170, "pyprocar.io.vasp.Outcar"]], "__init__() (pyprocar.io.vasp.outcar method)": [[171, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[172, "pyprocar.io.vasp.Outcar.efermi"]], "get_symmetry_operations() (pyprocar.io.vasp.outcar method)": [[173, "pyprocar.io.vasp.Outcar.get_symmetry_operations"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[174, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[175, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[176, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[177, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[178, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[179, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[180, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[181, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[182, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[183, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[184, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[185, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[186, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[187, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[188, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[189, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[191, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[200, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[201, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[202, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[203, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[204, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[205, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[206, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[207, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[208, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[209, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[210, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[211, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[212, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[213, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[214, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[215, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[216, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[219, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[220, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[221, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[229, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[230, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[231, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[232, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[233, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[234, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[235, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[247, "pyprocar.plotter.DOSPlot.show"]], "ebsplot (class in pyprocar.plotter)": [[248, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[249, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[250, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[251, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[252, "pyprocar.plotter.EBSPlot.legend"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[253, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[254, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[255, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[265, "pyprocar.plotter.EBSPlot.show"]], "procarplot (class in pyprocar.plotter)": [[266, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[267, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[268, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[269, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[270, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[271, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "fermihandler (class in pyprocar.scripts)": [[276, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[277, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[278, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[279, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[280, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[281, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[282, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "bandgap() (in module pyprocar.scripts)": [[283, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[284, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[285, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[286, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[287, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[288, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[289, "pyprocar.scripts.fermi2D"]], "fermi3d() (in module pyprocar.scripts)": [[290, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[291, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[292, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[293, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[355, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[355, "module-pyprocar.scripts.scriptBandsplot"], [356, "module-pyprocar.scripts.scriptCat"], [358, "module-pyprocar.scriptDosplot"], [360, "module-pyprocar.scripts.scriptFermi2D"], [361, "module-pyprocar.scripts.scriptFermi3D"], [362, "module-pyprocar.scripts.scriptFilter"], [365, "module-pyprocar.scripts.scriptRepair"], [367, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[355, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[356, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[356, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[358, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[360, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[360, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[361, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[361, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[362, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[362, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[365, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[365, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[367, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[367, "pyprocar.scripts.scriptUnfold.unfold"]]}})