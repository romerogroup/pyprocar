Search.setIndex({"docnames": ["api/cfg/band_structure", "api/cfg/band_structure_2d", "api/cfg/dos", "api/cfg/fermi_surface_2d", "api/cfg/fermi_surface_3d", "api/cfg/index", "api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.mesh_to_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ravel_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface.update_config", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_harmonic_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.get_symmetry_operations", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.parse", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.sort", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.xyz", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscarDiff", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.change_elements", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_multiply", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_sum", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.scale_lattice", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.shift", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.write", "api/pyposcar/index", "api/pyposcar/poscar", "api/pyposcar/poscarutils", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.default_settings", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.process_data", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plotting_colinear", "examples/00-band_structure/plotting_compare_bands", "examples/00-band_structure/plotting_noncolinear_qe", "examples/00-band_structure/plotting_noncolinear_vasp", "examples/00-band_structure/plotting_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plotting_colinear_dos", "examples/01-dos/plotting_noncolinear_dos_qe", "examples/01-dos/plotting_noncolinear_dos_vasp", "examples/01-dos/plotting_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plotting_bandsdosplot", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plotting_fermi2d", "examples/03-fermi2d/plotting_fermi2d_spin_texture", "examples/03-fermi2d/plotting_rashba_spin_spliting", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plotting_de_hass_van_alphen", "examples/04-fermi3d/plotting_fermi3d_cross_section", "examples/04-fermi3d/plotting_fermi3d_isoslider", "examples/04-fermi3d/plotting_fermi3d_isovalue_gif", "examples/04-fermi3d/plotting_fermi3d_plain", "examples/04-fermi3d/plotting_fermi3d_spin-polarized", "examples/04-fermi3d/plotting_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plotting_2dkmesh_generation", "examples/05-other/plotting_bandgap", "examples/05-other/plotting_ebs", "examples/05-other/plotting_kpath_generation", "examples/05-other/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\cfg\\band_structure.rst", "api\\cfg\\band_structure_2d.rst", "api\\cfg\\dos.rst", "api\\cfg\\fermi_surface_2d.rst", "api\\cfg\\fermi_surface_3d.rst", "api\\cfg\\index.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.mesh_to_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ravel_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.update_config.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_harmonic_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.get_symmetry_operations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.parse.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.sort.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.xyz.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscarDiff.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.change_elements.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_multiply.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_sum.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.scale_lattice.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.shift.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.write.rst", "api\\pyposcar\\index.rst", "api\\pyposcar\\poscar.rst", "api\\pyposcar\\poscarutils.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.default_settings.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.process_data.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plotting_colinear.rst", "examples\\00-band_structure\\plotting_compare_bands.rst", "examples\\00-band_structure\\plotting_noncolinear_qe.rst", "examples\\00-band_structure\\plotting_noncolinear_vasp.rst", "examples\\00-band_structure\\plotting_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plotting_colinear_dos.rst", "examples\\01-dos\\plotting_noncolinear_dos_qe.rst", "examples\\01-dos\\plotting_noncolinear_dos_vasp.rst", "examples\\01-dos\\plotting_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plotting_bandsdosplot.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plotting_fermi2d.rst", "examples\\03-fermi2d\\plotting_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\plotting_rashba_spin_spliting.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plotting_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plotting_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plotting_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plotting_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plotting_fermi3d_plain.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plotting_2dkmesh_generation.rst", "examples\\05-other\\plotting_bandgap.rst", "examples\\05-other\\plotting_ebs.rst", "examples\\05-other\\plotting_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["band structure plotting Options", "band structure 2d plotting Options", "dos plotting Options", "fermi surface 2d plotting Options", "fermi surface 3d plotting Options", "Configuration Files", "pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient", "bands_gradient_mesh", "bands_hessian", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_sum", "fermi_speed", "fermi_speed_mesh", "fermi_velocity", "fermi_velocity_mesh", "harmonic_average_effective_mass", "harmonic_average_effective_mass_mesh", "ibz2fbz", "index_mesh", "interpolate_mesh_grid", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "mesh_to_array", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "ravel_array", "unfold", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "spin_texture", "update_config", "pyprocar.core.FermiSurface3D", "__init__", "extend_surface", "project_atomic_projections", "project_fermi_speed", "project_fermi_velocity", "project_harmonic_effective_mass", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "get_symmetry_operations", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.pyposcar.Poscar", "__init__", "add", "parse", "remove", "sort", "write", "xyz", "poscarDiff", "pyprocar.pyposcar.poscar_modify", "__init__", "add", "change_elements", "pos_multiply", "pos_sum", "remove", "scale_lattice", "shift", "write", "pyprocar.pyposcar.poscar_supercell", "__init__", "supercell", "write", "PyPoscar API", "Poscar", "poscarUtils", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "default_settings", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "process_data", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting fermi2d noncolinear", "Plotting rashba spin splitting", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"descript": [0, 1, 2, 3, 4, 5, 77, 83, 210, 393], "The": [0, 2, 3, 4, 5, 9, 12, 15, 16, 17, 18, 25, 30, 37, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 61, 65, 66, 67, 69, 77, 80, 81, 82, 85, 86, 87, 89, 90, 91, 95, 96, 98, 99, 100, 103, 104, 105, 107, 108, 114, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 144, 147, 153, 156, 160, 170, 171, 173, 174, 178, 179, 181, 183, 184, 186, 187, 189, 190, 195, 197, 225, 226, 228, 229, 230, 231, 232, 234, 236, 237, 238, 243, 244, 245, 247, 248, 252, 254, 258, 259, 260, 268, 277, 278, 281, 282, 288, 289, 296, 298, 299, 302, 305, 306, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344, 346, 352, 355, 358, 361, 369, 379, 380, 381, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "line": [0, 2, 3, 4, 6, 234, 239, 254, 288, 352, 358, 370, 381, 384, 386, 396, 398, 402], "valu": [0, 1, 2, 3, 4, 15, 16, 69, 77, 124, 126, 129, 131, 132, 133, 173, 186, 240, 289, 318, 319, 321, 322, 323, 324, 365, 372, 390, 391, 393, 395, 396], "blue": [0, 2, 3, 234, 237, 254, 275, 323, 364, 365, 374, 378, 380, 381, 390, 396, 402], "red": [0, 2, 3, 323, 365, 374, 381, 390, 396], "black": [0, 1, 2, 4, 265, 392], "colormap": [0, 1, 2, 3, 4, 124, 323, 392, 396], "us": [0, 2, 3, 5, 6, 59, 61, 69, 77, 83, 119, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 144, 151, 160, 170, 173, 186, 196, 210, 214, 215, 218, 224, 225, 226, 227, 228, 229, 230, 231, 273, 277, 278, 279, 281, 284, 286, 305, 306, 308, 317, 318, 321, 322, 323, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 346, 352, 358, 364, 365, 366, 369, 370, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "jet": [0, 1, 2, 3, 4, 61, 274, 323, 374, 390, 392, 396], "scale": [0, 1, 2, 3, 4, 281, 290, 294, 297, 380], "bar": [0, 1, 2, 3, 4, 317, 323, 396], "none": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 18, 19, 30, 55, 59, 61, 62, 65, 67, 71, 77, 78, 84, 85, 93, 94, 108, 119, 120, 122, 124, 140, 141, 142, 143, 147, 148, 150, 156, 179, 180, 181, 182, 186, 187, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 257, 258, 259, 260, 264, 265, 267, 268, 271, 272, 273, 274, 275, 276, 282, 283, 284, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 364, 365, 366, 369, 380, 384, 390, 391, 395, 396, 397, 402], "fermi": [0, 2, 5, 18, 31, 32, 34, 61, 66, 67, 69, 70, 73, 129, 130, 131, 132, 137, 142, 156, 175, 181, 234, 254, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 333, 337, 343, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 384, 387, 388, 389, 390, 394, 395, 397, 398, 402], "dot": [0, 2, 234, 254], "1": [0, 1, 2, 3, 4, 9, 10, 11, 12, 18, 30, 60, 69, 70, 77, 78, 83, 117, 119, 150, 156, 181, 182, 187, 188, 234, 238, 239, 241, 242, 254, 274, 281, 296, 298, 311, 312, 317, 318, 319, 320, 321, 322, 323, 325, 343, 344, 350, 352, 358, 361, 364, 365, 366, 370, 371, 372, 374, 375, 378, 379, 380, 381, 384, 391, 395, 396, 397, 398, 402], "If": [0, 2, 65, 173, 174, 232, 252, 281, 284, 289, 298, 320, 321, 323, 346, 370, 384, 385, 390, 391, 393, 396, 397], "true": [0, 1, 2, 3, 4, 12, 30, 55, 84, 85, 138, 139, 171, 172, 186, 212, 240, 274, 283, 287, 292, 293, 294, 295, 296, 298, 299, 303, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 321, 323, 325, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 390, 391, 393, 395, 396, 400, 402], "shown": [0, 2, 321], "fals": [0, 1, 2, 3, 4, 18, 55, 87, 281, 282, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 344, 349, 364, 369, 370, 371, 372, 373, 374, 375, 380, 390, 391, 392, 395, 396, 397, 402], "which": [0, 2, 65, 77, 123, 150, 321, 322, 323, 337, 344, 346, 352, 358, 374, 384, 389, 390, 394, 395, 396, 399, 402], "axi": [0, 1, 2, 4, 66, 298, 321, 395], "both": [0, 2, 289, 321, 384, 387, 388, 390, 393, 402], "should": [0, 1, 2, 4, 9, 30, 87, 125, 185, 205, 294, 295, 297, 299, 320, 321, 379, 384, 389, 390, 391, 395, 397, 402], "drawn": [0, 2], "grei": [0, 2], "solid": [0, 2, 3, 77], "draw": [0, 2, 234, 254], "major": [0, 2, 268, 384], "minor": [0, 2, 268], "uparrow": [0, 2, 393, 398], "downarrow": [0, 2, 393, 398], "dash": [0, 2, 3], "0": [0, 1, 2, 3, 4, 9, 11, 12, 55, 69, 70, 77, 83, 117, 119, 150, 185, 187, 188, 254, 275, 281, 285, 289, 293, 296, 298, 311, 312, 321, 322, 323, 325, 341, 343, 344, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 389, 390, 393, 395, 396, 397, 398, 399, 400, 402], "style": [0, 1, 2, 4, 234, 352, 358], "point": [0, 1, 2, 4, 9, 37, 38, 51, 53, 55, 77, 79, 80, 81, 82, 85, 108, 130, 132, 133, 138, 178, 185, 258, 259, 260, 273, 317, 321, 323, 324, 378, 381, 387, 388, 392, 394, 395, 396, 398, 402], "o": [0, 2, 275, 276, 321, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 389, 390, 393, 396], "v": [0, 2, 77, 78, 321, 323, 389, 390, 393, 396], "d": [0, 2, 9, 11, 20, 21, 22, 23, 33, 34, 321, 323, 348, 384, 389, 390, 392, 393, 396], "size": [0, 1, 2, 3, 4, 55, 59, 61, 67, 87, 125, 275, 276, 293, 302, 317, 323, 370, 381, 396, 397, 402], "2": [0, 2, 3, 9, 11, 12, 39, 69, 77, 83, 150, 321, 323, 343, 344, 346, 350, 351, 352, 364, 365, 369, 370, 371, 372, 373, 374, 384, 395, 396, 397, 398, 402], "file": [0, 2, 92, 140, 142, 144, 146, 147, 156, 160, 163, 170, 171, 173, 174, 175, 178, 179, 181, 187, 225, 226, 228, 229, 230, 231, 261, 281, 282, 284, 287, 288, 289, 299, 303, 305, 306, 308, 316, 317, 320, 321, 323, 325, 326, 331, 337, 339, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 384, 387, 388, 389, 390, 391, 393, 396, 397, 398, 400, 402], "name": [0, 2, 18, 90, 125, 126, 147, 156, 160, 244, 246, 247, 249, 261, 263, 265, 266, 283, 287, 288, 299, 303, 308, 316, 317, 318, 319, 323, 384, 389, 390, 396, 397, 402], "save": [0, 2, 3, 160, 281, 303, 317, 318, 319, 321, 322, 323, 344, 364, 365, 366, 390, 392, 395, 396, 402], "figur": [0, 2, 3, 321, 337, 364, 365, 366, 369, 390, 392, 402], "null": [0, 2], "displai": [0, 2, 384, 392], "weight": [0, 2, 18, 19, 59, 60, 129, 132, 215, 258, 259, 260, 343, 394, 397, 398, 402], "width": [0, 2, 258, 260, 381, 396, 402], "height": [0, 2], "inch": [0, 2], "9": [0, 2, 274, 275, 340, 350, 356, 365, 366, 380, 389, 398], "6": [0, 1, 2, 4, 9, 12, 150, 321, 323, 341, 348, 349, 351, 352, 355, 357, 358, 361, 364, 365, 366, 373, 374, 378, 381, 384, 389, 390, 392, 396, 398, 399], "resolut": [0, 2], "per": [0, 1, 2, 4, 151, 282, 286], "": [0, 2, 9, 11, 12, 137, 150, 285, 293, 321, 323, 340, 369, 380, 381, 384, 389, 393, 395, 396, 397, 398], "control": [1, 3, 4, 5, 69, 323, 343, 384, 396], "surfac": [1, 5, 6, 61, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 83, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 234, 308, 309, 311, 312, 313, 314, 322, 323, 333, 337, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 383, 384, 387, 388, 389, 390, 395, 398], "color": [1, 4, 55, 61, 67, 119, 124, 125, 234, 237, 254, 258, 260, 265, 275, 317, 322, 323, 349, 352, 358, 364, 378, 380, 381, 389, 390, 392, 393, 395, 396, 402], "spin": [1, 2, 3, 4, 9, 12, 17, 30, 54, 61, 67, 74, 76, 130, 144, 150, 153, 237, 238, 239, 240, 241, 242, 252, 253, 258, 259, 260, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 337, 341, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 361, 363, 364, 367, 368, 369, 371, 372, 373, 376, 378, 379, 380, 381, 383, 384, 387, 388, 391, 393, 394, 396, 398, 402], "polar": [1, 347, 348, 349, 353, 354, 355, 359, 361, 364, 368, 369, 371, 372, 373, 376, 379, 380, 381, 383, 389, 390, 391, 398, 402], "opac": [1, 4], "wirefram": [1, 4, 396], "brillouin": [1, 4, 6, 55, 77, 127, 132, 323, 391, 395, 396, 402], "zone": [1, 4, 6, 55, 77, 127, 132, 323, 391, 394, 395, 396, 402], "3": [1, 3, 4, 6, 9, 11, 12, 18, 20, 21, 22, 23, 25, 33, 34, 42, 43, 59, 77, 93, 119, 121, 150, 283, 294, 295, 321, 323, 343, 348, 358, 364, 365, 366, 369, 380, 381, 384, 386, 395, 396, 397, 398, 402], "5": [1, 4, 9, 11, 12, 77, 104, 105, 106, 107, 119, 150, 186, 321, 323, 341, 344, 346, 348, 349, 351, 352, 355, 357, 358, 364, 365, 369, 370, 371, 372, 373, 374, 378, 384, 389, 390, 392, 396, 398, 399, 402], "linewidth": [1, 4, 234, 254, 274], "textur": [1, 3, 4, 67, 74, 76, 130, 309, 311, 312, 313, 314, 323, 366, 378, 384, 389, 390, 396, 398], "direct": [1, 4, 46, 47, 48, 69, 71, 77, 79, 80, 81, 82, 281, 282, 283, 287, 292, 294, 295, 297, 298, 299, 321, 323, 324, 378, 384, 389, 390, 391, 394, 395, 396, 397], "ax": [1, 3, 4, 232, 233, 252, 253, 273, 274, 275, 276, 317, 318, 319, 321, 349, 390, 392, 402], "kx": [1, 4, 46, 47], "label": [1, 2, 3, 4, 18, 19, 63, 64, 85, 236, 244, 247, 256, 263, 266, 343, 344, 346, 381, 390, 393, 394, 398, 402], "ky": [1, 4, 48], "kz": [1, 4], "linewdith": [1, 4], "th": [1, 4, 384], "i": [1, 4, 5, 12, 14, 18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 40, 56, 57, 59, 60, 61, 67, 69, 77, 108, 117, 119, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 144, 146, 160, 170, 185, 205, 212, 225, 226, 227, 228, 229, 230, 231, 232, 237, 252, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 317, 319, 320, 321, 322, 323, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402], "colorbar": [1, 2, 4], "scalar": [1, 4, 25, 26, 119, 120, 125, 131, 132, 133, 380], "ital": [1, 4], "bold": [1, 4], "titl": [1, 4, 150, 262, 317, 319, 380, 384, 393, 395, 396, 402], "font": [1, 4], "4": [1, 4, 9, 11, 12, 55, 150, 321, 323, 348, 349, 351, 352, 355, 357, 358, 364, 365, 369, 373, 374, 380, 384, 389, 392, 396, 398, 402], "x": [1, 2, 3, 4, 67, 77, 79, 80, 126, 244, 245, 263, 264, 265, 292, 294, 298, 321, 324, 340, 341, 343, 344, 365, 366, 378, 386, 390, 395, 396, 397, 398], "posit": [1, 4, 83, 91, 107, 246, 249, 265, 281, 283, 290, 292, 294, 295, 298, 303, 323, 370, 396], "01": [1, 4, 289, 322, 353, 359, 367, 376, 395], "y": [1, 2, 3, 4, 67, 77, 79, 81, 126, 247, 248, 266, 267, 268, 292, 294, 298, 321, 324, 365, 366, 378, 381, 395, 396, 397, 398], "outlin": [1, 4], "white": [1, 4, 323, 396, 400], "background": [1, 4, 323, 396], "36": [1, 4, 381, 402], "number": [1, 4, 9, 12, 15, 16, 17, 30, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 80, 81, 82, 89, 97, 104, 105, 111, 112, 125, 157, 166, 238, 239, 241, 242, 282, 294, 295, 309, 313, 321, 323, 324, 380, 384, 390, 392, 394, 396, 398, 399, 400], "orbit": [1, 4, 9, 11, 12, 13, 18, 30, 52, 67, 150, 238, 239, 240, 241, 242, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 349, 350, 351, 352, 355, 356, 357, 358, 364, 365, 366, 373, 374, 380, 387, 388, 392, 393, 394, 395, 396, 398, 402], "05": [1, 4, 104, 105, 106, 107, 186, 325, 376, 381, 382], "step": [1, 4, 173, 199, 203, 206, 213, 221, 222, 344, 346, 384], "whether": [1, 4, 321, 384, 402], "plotter": [1, 4, 137, 277, 278, 280, 348, 349, 350, 351, 352, 355, 356, 357, 358, 378, 380, 381], "render": [1, 4, 55, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 396], "offscreen": [1, 4], "caemera": [1, 4], "energi": [1, 2, 4, 9, 10, 16, 18, 61, 65, 66, 67, 69, 128, 129, 130, 132, 142, 153, 156, 175, 181, 201, 216, 273, 309, 313, 316, 317, 318, 319, 321, 322, 323, 346, 364, 365, 371, 372, 374, 387, 388, 390, 394, 395, 396, 398, 402], "iso": [1, 4, 322, 323, 395, 396], "isoslid": [1, 4, 368, 376, 383], "modern": [1, 4], "slice": [1, 4, 323, 396], "wheather": [1, 4], "show": [1, 4, 55, 309, 311, 312, 313, 314, 317, 318, 319, 321, 323, 343, 344, 346, 349, 368, 370, 371, 373, 374, 375, 376, 378, 380, 381, 383, 384, 390, 392, 393, 395, 396, 402], "cross": [1, 4, 323, 384, 396], "section": [1, 4, 137, 227, 323, 337, 340, 344, 352, 358, 384, 393, 395, 396, 398], "area": [1, 4, 321, 323, 370, 384, 393, 396], "list": [2, 6, 7, 12, 18, 19, 20, 22, 30, 31, 33, 35, 38, 45, 61, 62, 66, 67, 69, 70, 71, 77, 78, 79, 83, 85, 90, 91, 93, 97, 110, 115, 119, 121, 123, 125, 132, 135, 144, 146, 150, 151, 154, 155, 157, 158, 159, 162, 164, 166, 167, 168, 199, 213, 222, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 252, 253, 256, 258, 259, 260, 264, 265, 267, 268, 282, 285, 290, 292, 293, 294, 295, 296, 298, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 325, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 390, 391, 393, 394, 395, 396, 397], "green": [2, 323, 396], "cyan": 2, "magenta": 2, "yellow": 2, "orang": [2, 393], "purpl": 2, "brown": 2, "navi": [2, 364], "maroon": 2, "oliv": 2, "text": [2, 191, 223], "arial": 2, "16": [2, 317, 323, 350, 356, 366, 369, 373, 376, 384, 389, 396], "total": [2, 9, 10, 128, 132, 152, 153, 197, 198, 282, 321, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 390, 391, 393, 397, 398], "up": [2, 9, 144, 153, 185, 289, 352, 358, 386, 390, 393, 396, 397, 402], "down": [2, 9, 153, 352, 358, 390, 393, 396, 397, 402], "program": [2, 384], "print": [2, 318, 322, 344, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 380, 390, 395, 402], "detail": [2, 128, 129, 130, 131, 134, 135, 173, 321, 348, 350, 351, 352, 355, 356, 357, 358, 381, 384, 390, 396], "inform": [2, 119, 128, 129, 132, 134, 135, 138, 144, 147, 156, 163, 170, 173, 206, 213, 215, 218, 219, 287, 337, 346, 349, 365, 378, 380, 381, 384, 389, 390, 393, 394, 396, 397, 398], "rang": [2, 309, 313, 323, 371, 372, 378, 396, 397, 402], "stack": [2, 240, 241, 242, 321, 355, 356, 357, 361, 398], "mode": [2, 66, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 337, 343, 344, 346, 349, 365, 366, 369, 370, 384, 389, 390, 392, 395, 396, 398, 402], "ev": [2, 266, 371, 372, 379, 395], "boolean": [3, 14, 18, 40, 55, 87, 108, 171, 186, 234, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 390, 391, 394, 395, 396], "add": [3, 63, 64, 69, 273, 281, 286, 290, 295, 344, 384], "legend": 3, "arrow": [3, 4, 67, 322, 323, 365, 380, 395, 396], "repres": [3, 6, 20, 21, 22, 23, 33, 34, 93, 119, 125, 144, 192, 193, 194, 222, 240, 321, 323, 384, 393, 396, 402], "densiti": [3, 5, 9, 12, 128, 132, 137, 147, 152, 153, 160, 197, 227, 232, 237, 238, 279, 317, 321, 328, 332, 337, 342, 343, 359, 387, 388, 389, 390, 397, 398, 401], "10": [3, 321, 323, 350, 356, 365, 369, 380, 381, 384, 389, 396, 397, 398], "project": [3, 9, 10, 11, 18, 19, 30, 37, 56, 57, 61, 67, 69, 72, 74, 75, 76, 128, 129, 130, 132, 150, 151, 152, 160, 186, 190, 196, 197, 318, 319, 321, 323, 344, 346, 348, 350, 351, 352, 355, 356, 357, 358, 364, 374, 384, 387, 388, 391, 392, 393, 394, 396, 397, 398], "z": [3, 66, 67, 77, 79, 82, 126, 292, 294, 298, 322, 324, 365, 366, 378, 395, 396, 397, 398], "imag": [3, 77, 323, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 386, 390, 396], "k_": [3, 378], "aa": 3, "band": [4, 5, 18, 19, 20, 21, 22, 23, 24, 37, 50, 59, 61, 62, 65, 69, 77, 85, 89, 129, 130, 132, 134, 137, 144, 160, 161, 163, 186, 190, 232, 237, 252, 257, 261, 262, 271, 272, 277, 279, 280, 309, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 329, 330, 334, 335, 337, 341, 343, 353, 358, 361, 366, 369, 374, 379, 381, 387, 388, 389, 393, 395, 396, 397, 398, 399], "pyprocar": [5, 59, 86, 87, 116, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 159, 162, 164, 167, 168, 186, 195, 196, 225, 226, 227, 228, 229, 230, 231, 277, 278, 279, 280, 289, 304, 305, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "cfg": [5, 137], "help": [5, 59, 61, 130, 132, 147, 342, 344, 346, 384, 385, 397, 402], "custom": [5, 318, 319, 384, 390], "plot": [5, 55, 61, 63, 64, 67, 113, 130, 132, 134, 137, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 255, 256, 257, 258, 259, 260, 261, 269, 271, 273, 277, 278, 279, 280, 308, 309, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 325, 328, 329, 330, 332, 333, 334, 335, 337, 341, 347, 349, 353, 354, 359, 362, 363, 367, 368, 369, 376, 380, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 400], "option": [5, 9, 12, 18, 30, 55, 59, 61, 66, 67, 69, 71, 85, 92, 104, 105, 106, 107, 108, 117, 122, 124, 126, 144, 147, 150, 156, 160, 171, 173, 174, 179, 181, 186, 187, 232, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 340, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 390, 391, 395, 396, 397, 402], "our": [5, 366, 384, 385, 395], "code": [5, 137, 144, 147, 148, 210, 227, 307, 308, 316, 317, 318, 319, 321, 322, 323, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402], "base": [5, 285, 293, 323, 381, 384, 390, 394, 396], "each": [5, 9, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 77, 79, 110, 119, 128, 132, 199, 209, 213, 256, 258, 259, 260, 281, 282, 290, 294, 295, 298, 321, 323, 384, 389, 390, 391, 392, 393, 394, 396, 397, 398], "yaml": 5, "contain": [5, 8, 9, 61, 77, 85, 123, 142, 264, 267, 317, 321, 322, 323, 337, 346, 364, 365, 384, 390, 395, 396, 397], "set": [5, 66, 77, 124, 125, 126, 177, 207, 244, 245, 246, 247, 248, 249, 262, 263, 264, 265, 266, 267, 268, 281, 320, 321, 322, 323, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381, 387, 388, 389, 390, 391, 392, 393, 395, 396, 400, 402], "relat": [5, 286, 380, 394, 399, 401], "properti": [5, 14, 15, 16, 17, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 60, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 114, 115, 118, 121, 123, 149, 151, 152, 153, 154, 155, 157, 158, 159, 162, 164, 166, 167, 168, 173, 175, 177, 178, 183, 184, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 290, 291, 323, 384, 396], "below": [5, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381, 384, 389, 390, 392], "ar": [5, 11, 55, 59, 65, 67, 77, 85, 119, 132, 153, 160, 223, 240, 279, 281, 283, 289, 290, 292, 298, 318, 319, 321, 322, 323, 337, 341, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "some": [5, 144, 185, 323, 337, 344, 380, 384, 389, 396], "kei": [5, 153, 173, 240, 289, 318, 319, 321, 384, 390, 396], "you": [5, 137, 282, 303, 323, 342, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 385, 386, 393, 394, 396, 397, 399, 401, 402], "might": [5, 77, 384, 386, 393], "find": [5, 59, 65, 66, 67, 77, 83, 175, 177, 178, 316, 377, 382, 383, 384, 390, 402], "thi": [5, 6, 9, 11, 14, 18, 39, 40, 55, 59, 61, 66, 67, 69, 77, 83, 119, 122, 131, 132, 133, 136, 137, 138, 140, 142, 144, 146, 150, 160, 163, 191, 204, 205, 206, 207, 212, 218, 223, 224, 227, 279, 284, 286, 293, 299, 301, 302, 304, 308, 317, 319, 320, 321, 322, 323, 325, 326, 337, 340, 342, 344, 346, 349, 365, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "chapter": [5, 132, 279, 304], "intend": [5, 132, 137, 279, 304, 384], "describ": [5, 132, 279, 304], "data": [5, 132, 137, 173, 279, 281, 304, 308, 337, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 384, 387, 388, 394, 398, 399, 401], "type": [5, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 66, 69, 77, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 123, 132, 137, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 173, 175, 177, 178, 183, 184, 189, 190, 191, 195, 196, 197, 198, 210, 214, 215, 219, 232, 234, 235, 236, 237, 243, 244, 247, 250, 252, 257, 279, 289, 302, 304, 316, 318, 319, 322, 323, 324, 337, 384, 389, 390, 395, 396], "assist": [5, 69, 132, 279], "process": [5, 132, 140, 337, 361, 364, 365, 366, 378, 381, 384, 387, 388, 390, 395, 397, 398, 402], "electron": [5, 18, 129, 132, 137, 156, 173, 189, 192, 193, 199, 213, 232, 252, 277, 279, 305, 306, 361, 364, 365, 366, 378, 380, 381, 384, 387, 388, 389, 390, 396, 398], "structur": [5, 18, 59, 85, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 129, 132, 134, 137, 142, 154, 155, 160, 162, 164, 173, 181, 182, 186, 202, 204, 208, 211, 232, 233, 252, 257, 262, 271, 279, 280, 281, 304, 306, 317, 325, 329, 330, 334, 335, 337, 341, 343, 353, 361, 364, 365, 366, 378, 379, 380, 381, 384, 387, 388, 389, 392, 393, 397, 398, 399, 402], "ha": [5, 77, 132, 140, 170, 171, 224, 227, 279, 304, 321, 323, 337, 340, 343, 344, 346, 349, 369, 384, 396, 402], "follow": [5, 9, 77, 132, 185, 227, 279, 304, 321, 323, 337, 341, 343, 344, 346, 365, 378, 381, 384, 386, 389, 390, 391, 393, 394, 396, 397, 398, 402], "band_structur": [5, 353], "yml": 5, "band_structure_2d": 5, "2d": [5, 61, 66, 67, 130, 132, 319, 322, 323, 330, 333, 335, 336, 337, 365, 378, 387, 388, 396, 398], "do": [5, 15, 69, 137, 150, 151, 160, 196, 198, 232, 233, 240, 241, 242, 243, 303, 317, 321, 323, 343, 344, 346, 352, 354, 355, 358, 359, 361, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 389, 390, 392, 393, 396], "state": [5, 9, 12, 77, 128, 132, 137, 147, 152, 153, 197, 232, 237, 238, 279, 317, 321, 322, 328, 332, 337, 343, 359, 384, 387, 388, 389, 390, 395, 398], "fermi_surface_3d": 5, "3d": [5, 39, 69, 131, 132, 309, 311, 312, 313, 314, 323, 337, 387, 388, 398], "fermi_surface_2d": 5, "class": [6, 9, 18, 61, 67, 69, 77, 84, 93, 119, 128, 129, 131, 132, 133, 135, 136, 138, 140, 142, 144, 147, 160, 169, 170, 171, 173, 179, 181, 187, 232, 252, 271, 280, 281, 283, 284, 287, 290, 291, 299, 300, 301, 302, 305, 306, 307, 308, 369, 370, 371, 372, 373, 374, 375, 384, 394, 396, 399, 401], "reciprocal_lattic": [6, 7, 18, 19, 140, 141, 156, 181, 182, 394, 401], "ndarrai": [6, 7, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 55, 56, 57, 59, 60, 61, 67, 77, 78, 86, 87, 88, 107, 108, 109, 114, 116, 117, 119, 120, 125, 126, 156, 165, 178, 181, 182, 183, 184, 189, 190, 196, 214, 258, 259, 260, 282, 283, 293, 294, 295, 296, 297, 298, 302, 318, 319, 390], "transformation_matrix": [6, 7, 55, 59, 86, 87, 117, 402], "int": [6, 7, 9, 10, 12, 15, 16, 17, 18, 19, 30, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 69, 70, 71, 77, 78, 80, 81, 82, 89, 105, 111, 112, 150, 156, 157, 166, 181, 182, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 252, 253, 258, 259, 260, 265, 282, 285, 293, 296, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 390, 391, 395, 396, 397], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 25, 26, 27, 28, 29, 30, 37, 39, 45, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 92, 93, 94, 104, 105, 106, 107, 108, 113, 116, 117, 119, 120, 122, 124, 125, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 156, 160, 161, 163, 165, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 185, 186, 187, 188, 191, 204, 205, 206, 207, 208, 209, 217, 219, 223, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 395, 396, 397, 400, 402], "A": [6, 9, 18, 61, 65, 86, 87, 93, 108, 113, 116, 121, 123, 146, 151, 156, 171, 173, 179, 181, 186, 187, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 281, 297, 302, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 341, 361, 364, 365, 366, 369, 378, 381, 384, 389, 390, 391, 395, 396, 397, 402], "object": [6, 18, 61, 69, 85, 119, 124, 149, 150, 151, 160, 174, 181, 195, 196, 210, 214, 215, 232, 252, 289, 290, 291, 292, 293, 296, 302, 306, 321, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 369, 370, 371, 372, 373, 374, 375, 380, 384, 394, 396, 398, 399, 401], "vert": [6, 8, 77, 119, 120], "face": [6, 8, 119, 120, 121, 123, 125, 132, 136, 396], "represent": [6, 42, 43, 77, 394, 396], "calcul": [6, 8, 9, 25, 26, 30, 40, 69, 72, 73, 74, 75, 76, 77, 147, 157, 160, 166, 170, 181, 186, 192, 193, 194, 195, 200, 210, 213, 214, 215, 216, 218, 219, 224, 305, 306, 308, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 337, 340, 341, 342, 343, 352, 358, 368, 369, 370, 371, 372, 373, 374, 375, 379, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "correspond": [6, 20, 22, 31, 33, 35, 45, 61, 77, 114, 322, 384, 389, 390, 395, 397, 402], "reciproc": [6, 18, 55, 71, 114, 127, 129, 132, 142, 156, 177, 181, 346, 390, 402], "lattic": [6, 18, 37, 55, 71, 93, 94, 95, 96, 98, 99, 100, 103, 108, 109, 114, 117, 127, 129, 132, 135, 142, 156, 177, 181, 281, 282, 288, 289, 290, 297, 302, 341, 346, 390, 401, 402], "paramet": [6, 9, 12, 18, 25, 30, 37, 39, 45, 55, 59, 61, 65, 66, 67, 69, 71, 77, 85, 86, 87, 92, 93, 104, 105, 106, 107, 108, 116, 117, 119, 122, 124, 125, 126, 144, 146, 147, 150, 156, 160, 170, 171, 173, 174, 179, 181, 186, 187, 210, 224, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 344, 346, 381, 384, 390, 391, 392, 393, 395, 396, 397, 400, 402], "np": [6, 9, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 55, 56, 57, 59, 60, 61, 67, 77, 86, 87, 88, 107, 108, 109, 114, 116, 117, 126, 156, 165, 177, 178, 181, 183, 184, 189, 190, 196, 214, 258, 259, 260, 282, 283, 292, 293, 294, 295, 296, 297, 298, 318, 319, 321, 379, 380, 381, 390, 402], "gener": [6, 77, 127, 131, 132, 133, 136, 140, 300, 304, 306, 320, 321, 322, 323, 324, 336, 337, 338, 340, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 387, 388, 391, 393, 395, 396, 397, 398], "usgin": 6, "wigner": [6, 8, 398], "seitz": [6, 8, 398], "float": [6, 12, 18, 19, 30, 55, 65, 69, 70, 77, 78, 79, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 110, 118, 119, 121, 124, 156, 181, 182, 186, 187, 188, 234, 254, 264, 267, 268, 282, 289, 292, 294, 295, 298, 309, 311, 312, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 390, 395, 396], "ani": [6, 9, 10, 204, 207, 323, 384, 390, 392, 395, 396, 400], "transform": [6, 59, 77, 86, 87, 116, 384, 390], "appli": [6, 37, 77, 298, 308, 380, 384, 389, 390, 400], "unit": [6, 118, 281], "cell": [6, 8, 77, 101, 102, 112, 115, 118, 387, 388, 396, 402], "rotat": [6, 37, 93, 94, 179, 180, 322, 364, 365, 366, 380, 394, 396, 398, 401], "supercel": [6, 69, 70, 300, 301, 306, 323, 396, 397, 402], "default": [6, 9, 12, 18, 30, 55, 59, 61, 66, 67, 69, 71, 77, 85, 92, 104, 105, 106, 107, 108, 117, 119, 122, 124, 126, 144, 147, 150, 156, 160, 171, 173, 174, 179, 181, 186, 187, 232, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 283, 284, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 346, 352, 358, 365, 390, 391, 393, 395, 396, 397], "method": [6, 9, 18, 55, 59, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 84, 86, 87, 93, 108, 113, 116, 119, 138, 140, 142, 144, 146, 147, 156, 160, 163, 169, 171, 173, 174, 179, 181, 186, 187, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 281, 286, 290, 299, 300, 301, 303, 307, 308, 309, 311, 312, 313, 314, 369, 370, 371, 372, 373, 374, 375, 384, 390, 394, 398], "attribut": [6, 9, 18, 69, 77, 84, 93, 119, 147, 160, 173, 181, 187, 282, 349, 384, 394], "brillouinzon": [7, 8, 132], "initi": [7, 70, 78, 120, 149, 174, 211, 308, 370, 380, 384], "polydata": [7, 55, 70, 78, 119, 120, 132, 136, 380], "form": [8, 178, 214, 215, 384, 394], "tupl": [8, 71, 83, 119, 311, 312, 323, 396], "return": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 65, 66, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 123, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 175, 177, 178, 183, 184, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 224, 232, 234, 235, 236, 237, 243, 244, 247, 250, 252, 257, 289, 302, 316, 321, 322, 323, 324, 349, 384, 395, 396], "n_vert": 8, "n_face": 8, "dtype": [9, 10], "float64": [9, 10], "interpolation_factor": [9, 10, 39, 69, 70, 77, 78, 156, 181, 182, 317, 318, 319, 321, 323, 390, 396, 402], "function": [9, 39, 77, 83, 122, 140, 150, 191, 204, 205, 206, 207, 223, 227, 306, 316, 317, 318, 319, 321, 322, 323, 331, 333, 337, 340, 342, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 387, 388, 390, 392, 393, 395, 396, 398, 402], "theori": [9, 321, 342, 388], "spectrum": 9, "shape": [9, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 38, 42, 43, 56, 57, 60, 380], "n_do": 9, "element": [9, 154, 155, 158, 162, 164, 167, 204, 207, 256, 281, 282, 283, 286, 289, 290, 292, 293, 321, 397], "etc": [9, 297, 389, 390], "n_atom": [9, 18, 56, 57, 61], "n_princip": 9, "n_orbit": [9, 56, 57, 61], "n_spin": [9, 18, 23, 56, 57, 61, 128, 132], "i_princip": 9, "work": [9, 323, 361, 364, 368, 369, 370, 371, 372, 373, 374, 375, 383, 384, 385, 390, 395, 396], "like": [9, 67, 281, 282, 293, 304, 305, 384, 389, 390, 394], "princip": [9, 30, 53, 238, 239, 241, 242], "quantum": [9, 12, 30, 53, 160, 226, 227, 228, 229, 230, 238, 239, 241, 242, 342, 343, 347, 353, 354, 359, 383, 388, 389, 390, 394, 398], "n": [9, 12, 77, 93, 121, 346, 398, 399], "last": [9, 154, 158, 162, 167, 175, 177, 193, 200, 216, 221, 390], "index": [9, 12, 38, 61, 150, 285, 293, 296, 309, 311, 312, 313, 314, 322, 388, 389, 390, 394, 395, 397, 398], "p": [9, 11, 321, 323, 346, 348, 380, 389, 393, 396, 397, 399], "i_orbit": 9, "similar": [9, 321, 323, 340, 384, 393, 396], "angular": [9, 398], "l": [9, 11, 344, 389, 390, 398, 402], "same": [9, 12, 87, 93, 125, 289, 293, 302, 317, 323, 328, 337, 341, 343, 344, 346, 352, 358, 384, 389, 390, 392, 393, 395, 396, 397, 398], "order": [9, 11, 12, 93, 282, 296, 302, 321, 323, 381, 384, 389, 390, 392, 396], "7": [9, 12, 150, 321, 323, 348, 349, 351, 352, 355, 357, 358, 364, 365, 369, 373, 374, 378, 384, 389, 390, 392, 393, 396, 398], "8": [9, 12, 150, 321, 323, 344, 348, 349, 350, 351, 352, 355, 356, 357, 358, 364, 365, 369, 373, 374, 375, 380, 389, 390, 392, 393, 396, 398], "py": [9, 12, 150, 321, 323, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 386, 396, 397, 398], "pz": [9, 12, 150, 321, 323, 396, 397, 398], "px": [9, 12, 150, 321, 323, 396, 397, 398], "dxy": [9, 12, 150, 321, 323, 396, 398], "dyz": [9, 12, 150, 321, 323, 396, 398], "dz2": [9, 12, 150, 321, 323, 396, 398], "dxz": [9, 12, 150, 321, 323, 396, 398], "dx2": [9, 398], "y2": [9, 12, 77, 150, 321, 323, 324, 378, 396], "i_spin": 9, "magnet": [9, 173, 389, 390, 398], "m": [9, 11, 118, 341, 389, 390, 391, 398, 402], "increas": [9, 69, 77, 323, 396, 402], "factor": [9, 69, 77, 147, 156, 181, 187, 281, 290, 294, 295, 297, 319, 321, 323, 380, 396, 402], "interpol": [9, 39, 66, 67, 77, 83, 131, 132, 147, 156, 181, 187, 318, 319, 321, 323, 390, 396], "densityofst": [10, 11, 12, 13, 14, 15, 16, 17, 132, 149, 150, 151, 195, 232, 233, 279], "convert": [11, 45, 191, 398], "coupl": [11, 350, 356, 396], "uncoupl": 11, "assum": [11, 384], "coupled_orbit": 11, "j": [11, 381, 384, 389], "uncoupled_orbit": 11, "ret": [11, 12, 30, 204, 207], "atom": [12, 30, 49, 67, 72, 74, 75, 76, 93, 94, 97, 110, 111, 132, 135, 150, 151, 157, 160, 166, 173, 238, 239, 240, 241, 281, 282, 283, 285, 286, 289, 290, 292, 293, 296, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 337, 348, 350, 351, 352, 355, 356, 357, 358, 364, 365, 366, 373, 374, 380, 387, 388, 393, 394, 395, 396, 398, 401, 402], "principal_q_numb": [12, 30, 238, 239, 241, 242], "sum_noncolinear": [12, 30], "bool": [12, 14, 18, 30, 40, 55, 85, 87, 108, 171, 186, 240, 281, 282, 283, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 390, 391, 395, 396, 397], "tabl": [12, 321, 323, 396, 402], "lm": [12, 389, 390, 398], "tot": [12, 390, 398], "x2": [12, 77, 150, 321, 323, 324, 378, 396], "need": [12, 55, 140, 150, 212, 273, 282, 321, 340, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 390, 392, 393, 396, 397, 402], "sume": [12, 150], "over": [12, 25, 30, 150, 323, 384, 385, 387, 388, 393, 394, 396, 398], "count": [12, 293, 321, 323, 389, 390, 395, 396, 397], "from": [12, 67, 119, 122, 127, 132, 133, 136, 140, 142, 147, 150, 160, 173, 281, 296, 299, 317, 320, 321, 323, 366, 368, 376, 378, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402], "zero": [12, 321, 323, 389, 390, 396, 398], "input": [12, 170, 173, 227, 281, 304, 305, 320, 321, 323, 326, 337, 340, 343, 344, 390, 391, 396, 400], "sum": [12, 30, 150, 290, 390, 393, 394], "string": [13, 124, 157, 166, 173, 237, 238, 239, 240, 241, 242, 256, 261, 262, 263, 266, 281, 292, 317, 318, 319, 320, 370, 390, 391], "current": [13, 59, 343, 368, 369, 370, 371, 372, 373, 374, 375, 383, 388, 389, 390], "basi": [13, 41, 44, 46, 47, 48, 55, 59, 298, 350, 356, 389, 394], "str": [13, 55, 61, 66, 69, 70, 77, 78, 92, 93, 104, 115, 122, 124, 125, 126, 147, 150, 156, 160, 161, 169, 170, 171, 173, 174, 179, 181, 182, 186, 187, 223, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 254, 256, 261, 262, 263, 265, 266, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 303, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 390, 391, 395, 396, 397, 400], "non": [14, 30, 40, 321, 323, 344, 346, 347, 348, 349, 353, 354, 355, 359, 361, 365, 366, 369, 370, 371, 372, 373, 375, 379, 380, 381, 383, 384, 389, 390, 394, 396, 397, 398, 402], "colinear": [14, 30, 40, 320, 341, 344, 346, 347, 352, 353, 354, 358, 359, 364, 365, 366, 370, 374, 375, 381, 383, 389, 390, 391, 397], "calc": [14, 212], "channel": [17, 54, 321, 389, 390, 398], "kpoint": [18, 19, 20, 22, 31, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 55, 59, 61, 62, 69, 85, 86, 87, 92, 129, 131, 132, 138, 139, 156, 165, 172, 181, 183, 184, 186, 215, 227, 271, 272, 308, 322, 323, 325, 343, 344, 346, 378, 380, 381, 390, 394, 396, 397, 398, 402], "efermi": [18, 19, 140, 141, 181, 182, 341, 380, 394, 402], "n_kx": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 181, 182, 394], "n_ky": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 181, 182, 394], "n_kz": [18, 19, 21, 23, 24, 25, 32, 34, 36, 38, 42, 43, 56, 57, 60, 181, 182, 394], "projected_phas": [18, 19, 394], "kpath": [18, 19, 55, 85, 86, 87, 88, 89, 90, 91, 92, 129, 132, 140, 141, 163, 181, 182, 252, 253, 317, 337, 343, 381, 394, 398], "store": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 38, 56, 57, 60, 69, 128, 129, 131, 132, 134, 135, 173, 174, 223, 281, 287, 289, 302, 305, 308, 323, 394, 396, 397], "informomr": 18, "arrai": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 61, 67, 69, 88, 117, 128, 130, 132, 133, 135, 151, 196, 209, 282, 286, 294, 302, 321, 323, 325, 381, 389, 390, 394, 396, 402], "Will": 18, "have": [18, 212, 323, 337, 343, 384, 385, 392, 393, 394, 395, 396, 397, 398], "n_kpoint": [18, 20, 22, 31, 33, 35, 61, 67], "n_band": [18, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 61, 67], "norbit": [18, 394], "full": [18, 173, 282, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 391, 394, 396], "incud": 18, "complex": [18, 394], "part": [18, 194, 384, 396], "clacul": 18, "vector": [18, 93, 95, 96, 98, 99, 100, 103, 119, 120, 126, 142, 177, 263, 297, 298, 302, 323, 346, 380, 389, 390, 396], "matrix": [18, 55, 59, 77, 86, 87, 93, 108, 114, 116, 117, 127, 132, 135, 156, 178, 181, 300, 322, 395, 396, 402], "shifted_to_efermi": [18, 394], "determin": [18, 30, 40, 55, 85, 87, 108, 171, 322, 384, 395], "shift": [18, 69, 83, 290, 396], "electronicbandstructur": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 132, 252, 253, 279, 380, 398, 399], "gradient": [20, 21, 25, 394], "numpi": [20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 36, 56, 57, 60, 61, 67, 77, 128, 130, 132, 133, 135, 321, 323, 379, 380, 381, 386, 394, 396, 402], "self": [20, 22, 31, 33, 35, 77, 192, 193, 206, 281, 282, 283, 286, 290, 346, 379], "where": [20, 21, 22, 23, 33, 34, 160, 240, 308, 318, 319, 322, 323, 337, 344, 370, 384, 390, 391, 395, 396, 397, 398], "second": [20, 22, 23, 33, 96, 98, 103, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381], "dimens": [20, 21, 22, 23, 33, 34, 306], "dx": [20, 21, 22, 23, 33, 34], "dy": [20, 21, 22, 23, 33, 34], "dz": [20, 21, 22, 23, 33, 34], "fradient": [20, 21], "mesh": [21, 23, 24, 25, 32, 34, 36, 38, 39, 42, 43, 45, 56, 57, 60, 336, 346, 378, 387, 388, 394, 396, 398], "grid": [21, 23, 24, 25, 32, 34, 36, 38, 39, 42, 43, 56, 57, 60, 77, 79, 80, 81, 82, 87, 317, 321, 323, 346, 378, 381, 390, 394, 395, 396], "first": [21, 23, 34, 77, 95, 99, 103, 155, 164, 289, 297, 341, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381, 384, 392, 395, 396, 397, 402], "hessian": [22, 23, 394], "third": [22, 96, 99, 100, 384], "scalar_mesh": [25, 26], "k": [25, 51, 55, 130, 132, 134, 138, 173, 185, 263, 273, 336, 337, 341, 343, 349, 378, 387, 388, 391, 392, 394, 395, 396, 398, 402], "cartesian": [25, 41, 42, 55, 165, 183, 281, 282, 283, 287, 290, 292, 294, 295, 297, 298, 299, 303, 394, 398], "coordin": [25, 77, 132, 133, 135, 165, 183, 184, 282, 283, 294, 295, 298, 299, 324, 378, 394, 398], "scalar_gradient_mesh": 25, "integr": 26, "nd_list": 27, "scalar_list": 28, "vector_list": 29, "_summary_": [30, 324], "speed": [31, 32, 73], "veloc": [32, 34, 323, 387, 388, 396], "harmon": [35, 36, 323, 396, 398], "averag": [35, 36], "effect": [35, 36, 323, 369, 384, 395, 396], "mass": [35, 36, 323, 396], "symmetri": [37, 85, 104, 105, 106, 107, 171, 178, 186, 308, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 380, 383, 390, 391, 394, 396], "oper": [37, 178, 294, 295, 384, 395], "particular": [38, 323, 343, 384, 394, 395, 396, 397], "mesh_grid": [39, 58], "an": [39, 65, 77, 88, 131, 132, 133, 136, 174, 209, 232, 252, 288, 289, 303, 304, 306, 340, 346, 349, 366, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 389, 390, 393, 396, 398], "nd": [39, 282], "nx": [39, 77], "ny": [39, 77], "nz": [39, 77], "rtype": [42, 43], "fraction": [44, 93, 132, 135], "eb": [45, 69, 70, 160, 252, 253, 352, 358, 380, 394, 399], "lsit": 45, "uniqu": [46, 47, 48, 381, 394], "reduc": [46, 47, 48, 55, 184, 308, 394, 397, 398], "numbersk": 53, "show_brillouin_zon": 55, "r": [55, 266, 341, 390, 393, 396], "point_siz": [55, 378, 380, 381], "render_points_as_spher": [55, 378, 380, 381], "move": [55, 346, 396], "core": [55, 59, 86, 87, 116, 117, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 149, 150, 151, 154, 155, 158, 159, 162, 164, 167, 168, 181, 186, 195, 196, 214, 215, 222, 232, 252, 396], "updat": [55, 59, 125, 126, 281, 286, 384], "new": [55, 59, 185, 283, 323, 384, 396, 397], "implement": [55, 273, 384, 390], "pyvista": [55, 77, 119, 132, 136, 323, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 386, 396], "wether": 55, "how": [55, 85, 137, 323, 344, 368, 376, 383, 384, 396], "phase": [57, 129, 132, 346, 394, 402], "done": [59, 294, 295, 321, 346, 361, 379, 386, 391, 395], "expect": [59, 61, 129, 130, 132, 135, 279, 337, 384], "materi": [59, 104, 105, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 384, 389, 390, 392, 396], "spd": [61, 62, 72, 271, 272], "band_indic": [61, 62, 322, 364, 365, 395], "band_color": [61, 62, 322, 364, 365, 395], "loglevel": [61, 62], "30": [61, 62, 321, 344, 384], "kwarg": [61, 62, 232, 233, 252, 253, 309, 311, 312, 313, 314, 317, 318, 319, 321, 322, 390, 395, 402], "nx3": 61, "alreadi": [61, 67, 384], "substract": 61, "n_kppint": 61, "cmap": [61, 124, 273, 274, 276, 323, 389, 390, 396], "indic": [61, 321, 322, 323, 348, 350, 351, 352, 355, 356, 357, 358, 366, 384, 390, 395, 396, 402], "given": [61, 65, 130, 132, 150, 283, 285, 298, 302, 306, 322, 364, 369, 374, 378, 381, 384, 387, 388, 390, 393, 395, 402], "_type_": [61, 147, 317, 318, 319, 324, 326, 390, 397, 400], "verbos": [61, 281, 282, 290, 291, 300, 301, 317, 321], "level": [61, 66, 67, 273, 281, 282, 290, 291, 304, 305, 317, 323, 366, 371, 372, 389, 390, 396, 397], "log": 61, "warn": 61, "fermisurfac": [62, 63, 64, 65, 66, 67, 68, 132], "matplotlib": [63, 64, 66, 232, 252, 318, 319, 321, 322, 323, 349, 386, 389, 396, 398], "search": [65, 69, 323, 371, 372, 388, 396], "around": [65, 323, 371, 372, 396, 398], "rais": [65, 66, 67, 117, 187, 322, 395, 397], "runtimeerror": [65, 66, 67, 322, 395, 397], "found": [65, 175, 185, 187, 289, 344, 379, 381, 384, 393, 398], "error": [65, 66, 67, 117, 185, 212, 289, 391, 395], "500": 66, "along": [66, 67, 88, 298, 384, 391, 394, 399], "onli": [66, 67, 92, 119, 185, 281, 283, 308, 321, 323, 343, 355, 358, 364, 365, 369, 370, 371, 372, 373, 374, 375, 384, 385, 389, 390, 396, 397], "layer": [66, 67, 396], "geometri": [66, 67, 306, 402], "pyplot": [66, 322, 398], "instanc": [66, 291, 301, 302, 337, 389, 390, 400, 402], "wa": [66, 67, 321, 384, 390, 398], "call": [66, 67, 308, 326, 337, 343, 344, 346, 369, 370, 371, 372, 373, 374, 375, 384, 392, 396, 400], "befor": [66, 67, 395, 400, 402], "sx": 67, "sy": 67, "sz": 67, "300": 67, "It": [67, 144, 185, 273, 289, 293, 299, 302, 321, 384, 389, 390, 395], "enhanc": 67, "version": [67, 340, 361, 364, 365, 366, 378, 381, 384, 385, 386, 393, 396, 397], "nkpoint": [67, 394], "nband": [67, 394, 398], "thei": [67, 185, 384, 392], "also": [67, 323, 340, 344, 352, 358, 364, 365, 384, 389, 390, 395, 396, 402], "other": [67, 77, 204, 321, 323, 381, 382, 384, 390, 394, 395, 396, 397, 398, 400], "compon": [67, 384, 395, 397, 398], "marker": [67, 275, 276], "config_dict": [68, 251, 270], "fermi_shift": [69, 70, 323, 396], "projection_accuraci": [69, 70, 323, 396], "normal": [69, 70, 119, 124, 319, 323, 384, 395, 396], "manapul": 69, "fermi_toler": [69, 323, 396], "improv": [69, 323, 396], "effienc": [69, 323, 396], "prior": [69, 140, 323, 384, 386, 396], "select": [69, 282, 283, 321, 323, 352, 358, 393, 396, 398], "within": [69, 323, 381, 384, 386, 390, 396, 397, 398, 402], "toler": [69, 104, 105, 106, 107, 289, 323, 381, 396], "everi": [69, 321, 384, 387, 388, 398], "accuraci": [69, 323, 396], "high": [69, 290, 291, 323, 390, 391, 396], "pad": [69, 77, 78], "isosurfac": [69, 78, 79, 80, 81, 82, 83, 131, 132, 372, 396], "fermisurface3d": [70, 71, 72, 73, 74, 75, 76, 132, 396], "extended_zone_direct": [71, 323, 396], "extend": [71, 384], "vecctor": 71, "expand": 71, "fermi_spe": [73, 380], "fermi_veloc": [74, 323, 380, 396], "harmonic_effective_mass": 75, "spd_spin": 76, "xyz": [77, 78, 281, 290, 299, 303], "isovalu": [77, 78, 132, 133, 323, 396], "v_matrix": [77, 78], "algorithm": [77, 78], "lewin": [77, 78], "transform_matrix": [77, 78], "boundari": [77, 78, 298], "all": [77, 150, 175, 203, 222, 224, 281, 284, 290, 296, 298, 320, 321, 323, 383, 384, 390, 391, 393, 395, 396, 397, 398, 402], "equat": [77, 396, 398], "f": [77, 223, 343, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 384, 389, 390, 395, 396], "must": [77, 281, 323, 337, 343, 344, 370, 381, 384, 390, 396, 402], "between": [77, 79, 85, 96, 99, 103, 119, 289, 384, 390, 400], "x1": [77, 324, 378], "y1": [77, 324, 378], "z1": 77, "z2": 77, "v1": [77, 321, 323, 396], "v2": 77, "constant": [77, 297, 366, 395], "One": [77, 323, 389, 390, 395, 396], "can": [77, 119, 137, 144, 173, 321, 323, 337, 340, 341, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402], "present": [77, 112, 115, 177, 284, 320, 321, 323, 384, 390, 391, 396], "instead": [77, 281, 284, 372, 384, 390, 395], "togeth": [77, 281, 340, 384, 389, 390], "provid": [77, 124, 173, 174, 232, 252, 300, 308, 320, 321, 323, 337, 340, 346, 384, 387, 388, 389, 390, 391, 393, 394, 396, 398, 399, 401], "scikit": [77, 386], "possibl": [77, 384, 389, 390, 396], "classic": 77, "modul": [77, 227, 320, 325, 326, 388, 391, 392, 395, 397, 400, 402], "fourier": [77, 323, 396], "dafault": [77, 393], "period": 77, "dataset": [77, 106, 396, 397], "e": [77, 175, 266, 289, 292, 293, 298, 321, 323, 344, 369, 384, 390, 393, 395, 396, 397], "g": [77, 292, 321, 323, 343, 344, 369, 381, 390, 391, 395, 396, 397], "1st": [77, 323, 396], "bz": [77, 391, 402], "cover": [77, 384], "fulli": 77, "so": [77, 321, 384, 390, 392, 394, 397, 398], "one": [77, 83, 119, 175, 177, 273, 281, 282, 283, 285, 293, 308, 321, 323, 343, 344, 346, 365, 381, 384, 389, 390, 391, 393, 395, 396, 397], "want": [77, 119, 303, 321, 323, 370, 384, 385, 395, 396, 397], "wrap": 77, "look": [77, 323, 374, 396], "afterward": 77, "clip": 77, "easili": [77, 393], "doabl": 77, "trimesh": [77, 122, 124, 323, 386, 396], "goe": [77, 390, 393, 397], "eigen_matrix": 77, "In": [77, 137, 321, 323, 346, 369, 381, 384, 385, 389, 390, 393, 396, 397, 398, 402], "word": [77, 321, 323, 396], "creat": [77, 119, 301, 302, 306, 321, 323, 325, 343, 344, 346, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 381, 390, 396, 397], "super": [77, 387, 388], "withpad": 77, "vertic": [77, 132, 136, 234, 238, 239, 240, 241, 242, 321, 341, 393, 396], "verts_prim": 77, "t": [77, 223, 273, 343, 384, 385], "exampl": [77, 119, 150, 321, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 382, 384, 385, 389, 390, 393, 395, 396, 397, 398], "space": [79, 104, 105, 304, 369, 370, 371, 372, 373, 374, 375, 381, 395, 396, 400, 402], "length": [79, 384], "tri": [83, 185], "correct": [83, 384], "abl": [83, 370, 389, 390, 396, 398], "min": 83, "max": 83, "kname": [84, 85, 317, 318, 319, 390, 399, 402], "ktick": [84, 85, 317, 318, 319, 390, 399, 402], "special_kpoint": [84, 85, 399], "ngrid": [84, 85, 399], "has_time_revers": [84, 85, 138, 139, 171, 172], "handl": [85, 227, 308, 380, 396, 400], "tick": [85, 90, 91, 246, 249, 265, 268, 274, 275, 276, 399], "map": [85, 119, 124, 125, 173, 323, 389, 390, 395, 396], "special": [85, 384, 389, 395], "mani": [85, 323, 384, 389, 390, 396, 397], "time": [85, 171, 281, 283, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 402], "revers": [85, 171, 381, 384], "get": [86, 87, 163, 327, 343, 368, 376, 380, 381, 383, 384, 396], "same_grid_s": 87, "optim": 87, "after": [87, 384, 393, 398], "transformm": 87, "retain": [87, 384], "segment": [89, 395, 399], "filenam": [92, 138, 139, 144, 146, 147, 156, 160, 171, 172, 173, 174, 179, 180, 181, 182, 186, 187, 188, 243, 261, 281, 282, 287, 288, 289, 290, 291, 299, 301, 303, 316, 317, 321, 322, 326, 370, 393, 395, 400, 402], "fmt": 92, "vasp": [92, 140, 147, 210, 224, 227, 231, 281, 316, 317, 318, 319, 321, 322, 323, 340, 342, 343, 347, 348, 349, 352, 353, 354, 358, 359, 361, 364, 365, 366, 369, 370, 373, 374, 375, 379, 380, 381, 383, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402], "write": [92, 281, 288, 290, 384, 397], "support": [92, 323, 343, 344, 384, 386, 388, 389, 390, 396], "moment": [92, 173, 398], "_description_": [92, 317, 319, 322, 324, 395, 397], "cartesian_coordin": [93, 94, 401], "fractional_coordin": [93, 94, 401], "defin": [93, 321, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 381, 384, 390, 393, 395, 396, 397, 398], "perid": 93, "crystal": [93, 95, 96, 98, 99, 100, 103, 108, 109, 114, 221, 281, 304, 306, 343, 344, 381, 387, 388], "symbol": [93, 132, 135], "natom": [93, 394, 401], "coordinatesd": 93, "magnitud": [95, 98, 100, 323, 389, 390, 396], "angl": [96, 99, 103, 289, 381, 395], "convex": [101, 113], "hull": [101, 113], "scipi": [101, 386], "spatial": 101, "convexhul": 101, "symprec": [104, 105, 106, 107, 186, 325, 381], "1e": [104, 105, 106, 107, 186, 325, 381], "intern": [104, 281, 286], "group": [104, 105, 281, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375], "spglib": [106, 186], "dict": [106, 152, 153, 173, 197, 198, 215, 219, 240, 289, 317, 318, 319, 321, 390, 393], "wyckoff": 107, "insid": [108, 144, 384], "unitcel": 108, "question": 108, "corner": [109, 393], "speci": [112, 242, 282, 292, 321, 393], "differ": [115, 289, 321, 323, 343, 344, 346, 350, 356, 366, 384, 390, 391, 392, 393, 396], "crystla": 117, "valueerror": [117, 187], "proper": 117, "face_norm": [119, 120], "vert_norm": [119, 120], "face_color": [119, 120], "vert_color": [119, 120], "hold": 119, "about": [119, 137, 173, 218, 219, 349, 365, 380, 384, 385, 393, 396], "inherit": 119, "To": [119, 320, 323, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 384, 386, 390, 391, 393, 395, 396, 398], "minimum": [119, 124, 319, 321, 323, 390, 395, 396, 397], "requir": [119, 340, 341, 343, 344, 346, 384, 390, 392, 394, 395, 396, 397], "nvert": 119, "vertici": 119, "integ": [119, 302], "nface": 119, "connect": [119, 381, 384, 396], "vertex": 119, "attach": [119, 384], "glyph": [119, 380], "file_obj": 122, "output": [122, 143, 147, 173, 227, 287, 303, 320, 321, 323, 326, 340, 384, 390, 391, 393, 396, 400], "glb": [122, 323, 396], "file_typ": 122, "new_fac": 123, "viridi": 124, "vmin": [124, 273, 274, 276, 319, 323, 390, 395, 396, 402], "vmax": [124, 273, 274, 276, 319, 323, 390, 395, 396, 402], "maximum": [124, 319, 321, 323, 390, 395, 396, 397], "scalar_nam": 125, "vectors_x": 126, "vectors_i": 126, "vectors_z": 126, "vectors_nam": 126, "manipul": [128, 129, 132, 304, 305, 306], "1d": [128, 132, 133], "n_energi": [128, 132], "see": [128, 129, 130, 131, 134, 135, 301, 369, 380, 384, 385, 389, 390, 395, 402], "further": [128, 129, 130, 131, 134, 135, 140, 384, 390, 395, 397, 402], "plane": [130, 132, 322, 323, 370, 378, 389, 390, 395, 396], "informt": [131, 132], "includ": [131, 132, 137, 150, 173, 178, 235, 236, 240, 281, 337, 343, 346, 384, 387, 388, 389, 390, 398, 402], "extens": [131, 132, 133, 136, 288, 299, 303, 384], "path": [132, 134, 160, 173, 174, 321, 323, 337, 341, 343, 344, 346, 387, 388, 391, 392, 396, 398], "tick_label": [132, 134], "tick_posit": [132, 134, 246, 249, 265, 399], "n_segement": [132, 134], "kdistanc": [132, 134, 399], "learn": [137, 385], "more": [137, 175, 177, 273, 281, 285, 293, 323, 337, 352, 358, 365, 381, 384, 385, 389, 390, 393, 396, 397], "pars": [137, 138, 140, 142, 144, 146, 147, 156, 160, 163, 170, 171, 173, 179, 181, 187, 189, 190, 204, 219, 225, 226, 227, 228, 229, 230, 231, 281, 282, 322, 393, 395], "dft": [137, 321, 323, 343, 381, 384, 387, 388, 389, 390, 391, 393, 394, 396, 398, 401, 402], "highlight": [137, 402], "python": [137, 152, 197, 223, 321, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 396], "interfac": [137, 384, 396], "configur": [137, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366], "io": [137, 225, 226, 228, 229, 230, 231, 380, 394, 399, 401], "pyposcar": [137, 289, 305, 306], "modulu": 137, "script": [137, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 390, 391, 395, 396, 397, 400, 402], "bandsplot": [137, 317, 337, 343, 344, 346, 348, 349, 350, 351, 352, 358, 361, 390, 392, 393], "dosplot": [137, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 279, 317, 337, 343, 344, 346, 355, 356, 357, 358, 361, 393], "bandsdosplot": [137, 337, 343, 344, 346, 360, 362, 383, 393], "abinitkpoint": [139, 227], "dirnam": [140, 141, 147, 148, 160, 161, 307, 308, 316, 317, 318, 319, 321, 322, 323, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 390, 392, 393, 395, 396, 402], "infil": [140, 141, 144, 145, 146, 320, 323, 325, 326, 381, 391, 396, 397, 400], "abinit_output": [140, 141, 142, 143, 320, 323, 340, 390, 391, 396, 402], "procar": [140, 147, 148, 156, 182, 183, 184, 185, 186, 227, 308, 316, 317, 320, 323, 326, 331, 337, 339, 340, 346, 379, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 400, 402], "unlik": 140, "here": [140, 185, 273, 299, 342, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 374, 383, 385, 390], "merg": [140, 320, 340, 384, 391], "fix": [140, 185, 212, 290, 320, 340, 384, 391], "format": [140, 185, 223, 227, 304, 320, 321, 323, 340, 343, 378, 379, 380, 381, 384, 387, 388, 390, 391, 396, 398, 400], "issu": [140, 320, 340, 391, 400], "abinitprocar": [141, 227], "through": [144, 146, 309, 313, 384, 389, 390, 394, 395, 396, 399, 401, 402], "becaus": [144, 384, 390], "multipl": [144, 320, 331, 340, 387, 388, 393, 398], "bsxf": 144, "sown": 144, "bxsfparser": [145, 146, 227], "bxsf": [145, 146, 226, 227, 323, 396], "helper": 146, "qe": [147, 148, 227, 228, 229, 321, 343, 344, 346, 349, 350, 355, 356, 371, 372], "lobsterin": [147, 148, 343], "lobsterout": [147, 148, 343], "scfin_filenam": [147, 148], "scf": [147, 148, 160, 161, 343, 344, 346], "outcar": [147, 148, 156, 174, 175, 176, 177, 178, 186, 227, 316, 323, 346, 379, 390, 396, 402], "poscar": [147, 148, 156, 180, 220, 227, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 304, 306, 321, 323, 381, 396, 397, 402], "dos_interpolation_factor": [147, 148, 187, 188], "directori": [147, 160, 308, 318, 319, 320, 321, 322, 337, 341, 343, 344, 346, 390, 391, 395], "put": [147, 321, 323, 391, 396], "lobsterpars": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 227], "retrun": 149, "dos_paramater": 150, "separatli": 150, "pychemia": [150, 202, 210, 211, 214, 215, 222, 386], "visual": [150, 395, 396], "multi": [151, 196], "diment": [151, 196, 396], "complet": [152, 197, 341], "dictionari": [152, 173, 197, 205, 208, 240, 289, 317, 318, 319, 321, 337, 390], "denis": 152, "sturcutu": 156, "scf_in_filenam": [160, 161], "bands_in_filenam": [160, 161], "pdos_in_filenam": [160, 161], "pdo": [160, 161, 344], "kpdos_in_filenam": [160, 161], "kpdo": [160, 161, 344], "atomic_proj_xml": [160, 161], "atomic_proj": [160, 161, 344], "xml": [160, 161, 187, 188, 191, 212, 219, 321, 344, 393], "expresso": 160, "most": [160, 321, 384, 390, 393], "import": [160, 321, 323, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 386, 394, 395, 396, 399, 401, 402], "come": [160, 384, 387, 388], "parser": [160, 212, 227, 380, 390, 394, 399, 401], "took": 160, "place": [160, 337, 344, 384, 396], "case": [160, 321, 323, 337, 384, 390, 391, 396, 397, 402], "ofstat": 160, "locat": [160, 232, 252, 268, 397], "outdir": 160, "prefix": 160, "qepars": [161, 162, 163, 164, 165, 166, 167, 168, 227], "fdf_file": [169, 170], "siestapars": [170, 227], "siesta": [170, 227, 230, 342], "fdf": 170, "vlaue": 171, "kpioint": 171, "run": [173, 282, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 391, 398], "extract": [173, 206, 207, 346, 397], "summari": 173, "eigenvalu": 173, "stress": 173, "tensor": 173, "forc": [173, 384], "local": [173, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384], "charg": [173, 384], "dielectr": 173, "amount": [173, 290, 298], "written": [173, 288, 299, 303, 346, 378, 381, 384, 402], "onto": [173, 389, 390, 398], "chosen": 173, "modifi": [173, 281, 291, 301, 321, 384, 389, 390], "nwrite": 173, "tag": [173, 209, 390, 395], "incar": [173, 346, 396], "act": 173, "access": [173, 384, 389, 398], "variabl": [173, 284, 390], "union": [173, 174], "file_str": 173, "content": [173, 174, 284, 299, 302, 303, 384], "constructor": 174, "read": [174, 212, 323, 344, 381, 384, 393, 396, 402], "specifi": [174, 191, 308, 321, 323, 341, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 390, 393, 396], "its": [174, 384], "just": [175, 177, 273, 298, 299, 303, 396, 397], "field": 175, "keep": [175, 321, 323, 384, 389, 396, 397], "than": [175, 177, 204, 273, 321, 323, 384, 389, 390, 396, 397, 402], "ndaarai": 177, "them": [178, 223, 281, 384, 390, 398], "matric": [178, 398], "stupid": 185, "problem": [185, 384], "due": [185, 400, 402], "fortran": [185, 400], "now": [185, 343, 344, 395, 397, 398], "separ": [185, 384, 389, 390, 391], "61": 185, "00000000": [185, 398], "50000000": 185, "But": [185, 365, 384, 395], "precis": [186, 384], "vasprun": [187, 188, 217, 219, 321, 393], "vaspxml": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 402], "el": 191, "_type": 191, "attrib": 191, "tree": 191, "boolian": [192, 193, 194, 223, 321], "consist": [192, 193, 206, 346, 379, 384, 389, 390, 398], "ionic": [192, 194, 199, 203, 213, 222], "converg": [193, 194], "system": [200, 216, 282, 343, 384, 391, 395, 402], "final": [202, 384, 390, 391], "xml_tree": [204, 205, 206, 207, 208, 209], "calculatio": 204, "scstep": 204, "dest": 205, "recurc": [205, 207], "check": [205, 320, 385, 391], "spell": 205, "tage": 207, "varrai": 209, "vaspincar": 210, "alwai": [212, 281, 298, 395], "accord": [212, 384, 395], "finish": 212, "we": [212, 321, 323, 343, 344, 346, 366, 369, 384, 385, 389, 393, 395, 396, 398, 402], "pseudopotenti": 218, "potcar": 218, "covert": 223, "abinit": [225, 227, 320, 321, 323, 342, 343, 388, 389, 390, 391, 396, 402], "espresso": [226, 227, 228, 229, 230, 342, 343, 347, 353, 354, 359, 383, 388, 389, 390], "decrib": 227, "result": [227, 369, 384, 397, 402], "lobster": [227, 228, 317, 319, 321, 322, 342, 388, 395], "abinitpars": 227, "vasppars": 227, "mpl": [232, 252], "orient": [234, 237, 238, 239, 240, 241, 242, 317, 321, 370, 380, 389, 390, 393], "horizont": [234, 237, 238, 239, 240, 241, 242, 317, 321, 393], "linestyl": [234, 254], "THe": 234, "plain": [237, 257, 317, 318, 319, 321, 322, 323, 343, 344, 346, 349, 356, 357, 365, 366, 368, 376, 383, 387, 388, 392, 395, 396, 398, 402], "parametr": [238, 239, 259, 321, 323, 337, 349, 361, 365, 366, 369, 389, 390, 392, 396, 398], "item": [240, 317, 318, 319, 321, 348, 355, 358, 384, 390, 393, 402], "plot_tot": [240, 321, 393], "contribut": [240, 241, 242, 321, 323, 384, 385, 389, 390, 393, 396], "eachoth": 242, "pdf": [243, 261, 321], "interv": [245, 248, 264, 267, 268, 392], "xlim": 245, "tick_nam": [246, 249, 265, 399], "xtick": 246, "ylim": 248, "ytick": 249, "ebsplot": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 348, 349, 350, 351, 352], "fermi_level": 254, "methdo": 256, "width_mask": [258, 260], "color_mask": [258, 260], "width_weight": [258, 260], "color_weight": [258, 260], "scatter": [258, 260, 349, 350, 351, 361, 390], "mask": [258, 260, 274, 276, 318, 319, 384, 390], "overlai": [259, 349, 350, 351, 352, 361], "fo": [263, 266], "limit": [264, 267, 321, 384, 390], "begin": [264, 267, 324, 398], "end": [264, 267, 324, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 393, 398], "_f": 266, "depeci": 271, "ot": 271, "procarplot": [272, 273, 274, 275, 276, 279], "hot_r": [273, 276], "handler": 273, "parametricplot": 273, "fake": 273, "shouldn": 273, "invok": [273, 299, 384, 386], "discontinu": [274, 275, 276, 317, 344, 398], "figsiz": [274, 275], "13": [274, 275, 350, 356, 370, 376, 384, 389, 397, 398], "plot_bar": 274, "02": [275, 353, 376], "50": [276, 346, 366, 367, 397], "structutu": 277, "stuctur": 279, "depreci": 280, "low": [281, 304, 305, 397], "tailor": 281, "manual": [281, 370, 381, 390, 391], "coord": [281, 298, 303, 324], "_set_cartesian": 281, "_set_direct": 281, "ie": 281, "angstrom": 281, "load": [281, 282, 284, 369, 370, 371, 372, 373, 374, 375], "whole": [281, 323, 384, 396], "_unpars": 281, "sort": 281, "remov": [281, 290, 384], "automat": [282, 286, 288, 299, 321, 323, 346, 378, 381, 384, 390, 396], "debug": [282, 384], "cpo": 282, "nadarrai": [282, 292], "dpo": 282, "lat": 282, "3x3": [282, 302], "typesp": 282, "aam": 282, "numbersp": 282, "ntotal": 282, "elm": 282, "dynam": [282, 384], "selectflag": 282, "flag": [282, 320, 340, 341, 343, 344, 346, 391, 402], "volum": [282, 384, 396, 401], "box": [282, 384], "product": [282, 384], "selectiveflag": 283, "1x3": 283, "fromstr": 284, "memori": [284, 369, 370, 371, 372, 373, 374, 375, 397], "popul": 284, "when": [286, 308, 322, 323, 340, 346, 349, 352, 358, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384, 389, 391, 392, 395, 396, 397, 399], "out": [287, 321, 323, 340, 341, 343, 344, 384, 396, 402], "positon": 287, "falseposit": 287, "comment": [288, 398], "ad": [288, 299, 303, 323, 343, 384, 396], "poscar1": 289, "poscar2": 289, "compar": [289, 306, 347, 353, 369, 383, 387, 388, 398, 402], "two": [289, 306, 321, 323, 384, 390, 396], "small": [289, 384, 396], "numer": [289, 384], "ignor": [289, 397], "empti": 289, "comparison": [289, 390, 392], "doe": [289, 296, 321, 323, 364, 368, 369, 370, 371, 372, 373, 374, 375, 383, 384, 393, 395, 396, 397], "distanc": [289, 399, 402], "rel": [289, 397], "consid": [289, 321, 323, 355, 358, 384, 385, 387, 388, 389, 390, 396], "equal": [289, 349, 371, 372], "chang": [290, 291, 293, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 393], "pos_multipli": 290, "multipli": [290, 294, 297, 321], "pos_sum": 290, "human": [290, 293, 296], "singl": [290, 292, 384, 391], "scale_lattic": 290, "poscar_modifi": [291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 306], "cu": 292, "coordiant": 292, "newel": 293, "replac": [293, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381], "fx": [294, 295], "fy": [294, 295], "fz": [294, 295], "trivial": 296, "equival": [296, 321, 384], "desir": [296, 302, 381, 390, 393], "onc": [296, 386], "start": [296, 321, 323, 384, 389, 390, 395, 396, 397], "keep_cartesian": 297, "b": [297, 384, 401], "c": [297, 364, 365, 366, 369, 384, 385, 386, 396, 401], "what": [297, 383, 384], "cooddin": 297, "remain": [297, 384, 398], "pbc": 298, "enforc": [298, 384], "perod": 298, "condit": [298, 384], "conveni": [299, 303, 384], "too": [299, 384, 400], "poscar_supercel": [301, 302, 303, 304, 306], "origin": [302, 323, 364, 365, 366, 384, 390, 394, 396, 397], "overwritten": 302, "b1x": 302, "b1y": 302, "b1z": 302, "b2x": 302, "b2y": 302, "b2z": 302, "b3x": 302, "b3y": 302, "b3z": 302, "term": [302, 369, 384], "prefer": [303, 384, 385], "analysi": [304, 396, 397], "real": [304, 397], "featur": [304, 323, 346, 352, 358, 384, 395, 396, 397], "storag": [304, 384], "util": [304, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 384, 391, 395, 396, 397, 400], "poscarutil": 304, "poscardiff": [304, 306], "strcutur": 305, "repair": [307, 308, 316, 317, 323, 337, 339, 384, 396, 398], "apply_symmetri": [307, 308, 369, 370, 371, 372, 373, 374, 375], "fermihandl": [308, 309, 310, 311, 312, 313, 314, 315, 337, 346, 369, 370, 371, 372, 373, 374, 375], "Then": [308, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 381, 402], "srufac": [308, 309, 313], "iso_rang": [309, 313, 323, 371, 372, 396], "iso_surfac": [309, 313, 323, 371, 372, 396], "iso_valu": [309, 313, 372], "spin_textur": [309, 311, 312, 313, 314, 315, 322, 323, 364, 365, 366, 368, 370, 376, 383, 395, 396], "property_nam": [309, 311, 312, 313, 314], "save_gif": [309, 314, 372], "slide": [309, 313], "go": [309, 313, 321, 323, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 386, 396], "ther": [309, 313, 319], "slider": [309, 313, 323, 396], "slice_norm": [311, 312, 323, 369, 370, 396], "slice_origin": [311, 312, 323, 369, 370, 396], "save_2d": [311, 312, 313, 314], "save_2d_slic": [311, 312, 370], "save_mp4": 314, "save_3d": 314, "gap": [316, 379], "bands_set": [317, 337, 361], "elimit": [317, 318, 319, 321, 349, 390, 392, 393, 402], "cubic": [317, 318, 319, 321, 390, 402], "interpolation_typ": [317, 318, 319, 390, 402], "projection_mask": [317, 318, 319, 321, 390, 402], "dos_set": [317, 337, 361], "dos_limit": [317, 321], "print_plot_opt": [317, 318, 321, 322, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 390, 395], "savefig": [317, 318, 319, 321, 322, 390, 392, 393, 395, 402], "k_limit": 317, "title_fonts": 317, "draw_fermi": 317, "plot_color_bar": [317, 365, 366], "keyword": [317, 337, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 370, 384, 394], "argument": [317, 321, 323, 337, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 370, 384, 393, 394, 396, 399, 401], "window": [317, 318, 319, 321, 384, 390, 396], "structutr": [318, 390], "sting": [318, 390], "kanem": [318, 390], "decid": [318, 384, 390, 395], "plt": [318, 319, 321, 322, 390, 395, 402], "kdirect": [319, 390, 402], "bandstructur": [319, 328, 384, 391], "kitck": 319, "objext": 319, "outfil": [320, 325, 326, 381, 391, 397, 400], "procar_merg": [320, 391], "gz": [320, 391], "mergeparallel": [320, 391], "fixformat": [320, 391], "nspin": [320, 344, 391, 394], "concaten": [320, 331, 337, 340, 398], "procar_": [320, 391], "compress": [320, 391], "parallel": [320, 340, 391], "detect": [320, 391], "nsppol": [320, 391], "being": [321, 369, 384], "carri": [321, 384, 390, 393], "srvo3": 321, "perform": [321, 323, 341, 344, 346, 384, 387, 388, 395, 396, 397, 399, 402], "explain": [321, 340, 384, 396], "exmapl": [321, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381], "tutori": [321, 385, 396], "parametric_lin": [321, 356, 357, 361, 398], "stack_orbit": [321, 355, 356, 357, 358, 361, 398], "stack_speci": [321, 356, 357, 361, 398], "spline": 321, "polor": 321, "packag": [321, 323, 344, 384, 390, 393, 396], "relev": [321, 323, 384, 396], "mind": [321, 323, 396, 397], "srvo": [321, 323, 389, 390, 393, 396], "choos": [321, 323, 384, 396], "oxygen": [321, 323, 393, 396], "sr1": [321, 323, 396], "o3": [321, 323, 396], "900891": [321, 323, 396], "000000": [321, 323, 396, 400], "sr": [321, 323, 389, 390, 393, 396], "500000": [321, 323, 396], "noth": [321, 323, 384, 396], "indeci": [321, 323, 396], "relav": [321, 323, 396], "while": [321, 323, 384, 393, 396, 397], "ask": [321, 384, 393], "graph": [321, 384], "higher": 321, "accept": [321, 384, 394], "png": [321, 323, 370, 390, 393, 396, 402], "jpg": 321, "interact": [321, 384, 396], "well": [321, 364, 365, 384, 390, 391, 396], "entri": 321, "cal": 321, "argumnet": [321, 393], "elk": [321, 342, 388, 389, 390, 392, 393, 402], "fill": [321, 393], "under": [321, 384, 393], "curv": [321, 393], "For": [321, 337, 346, 348, 350, 351, 352, 355, 356, 357, 358, 365, 369, 370, 371, 372, 373, 374, 375, 378, 384, 389, 390, 393, 395, 396, 397, 398, 402], "clarif": 321, "visit": 321, "specif": [321, 337, 343, 384, 385, 389, 390, 393, 396], "clarifi": 321, "lingo": 321, "top": [321, 393], "take": [321, 337, 344, 350, 356, 384, 394, 399, 401], "treat": [321, 384, 395], "subplot": 321, "larger": [321, 384], "row": [321, 389, 390, 397], "colomun": 321, "fig": [321, 390], "linspac": 321, "pi": [321, 369], "1000": 321, "sin": 321, "plt_show": 321, "skip": [321, 396], "set_ylim": 321, "k_z_plane": [322, 395], "k_z_plane_tol": [322, 395], "rot_symm": [322, 395], "translat": [322, 398], "exportplt": [322, 395, 402], "k_z": [322, 395], "invalid": [322, 384, 395], "background_color": [323, 396], "save_color": [323, 396], "calculate_fermi_spe": [323, 396], "calculate_fermi_veloc": [323, 396], "calculate_effective_mass": [323, 396], "arrow_color": [323, 365, 396], "arrow_s": [323, 365, 366, 370, 375, 396], "015": [323, 381, 396], "only_spin": [323, 396], "savegif": [323, 396], "savemp4": [323, 396], "save3d": [323, 396], "save_meshio": [323, 396], "perspect": [323, 396], "save2d": [323, 396], "show_slic": [323, 396], "show_cross_section_area": [323, 370, 396], "iso_slid": [323, 396], "camera_po": [323, 396], "widget": [323, 370, 396], "simul": [323, 396], "mgb2": [323, 396], "ni_f": [323, 396], "49": [323, 396, 399], "iter": [323, 396], "ones": [323, 393, 396], "14": [323, 350, 356, 365, 389, 396, 398], "15": [323, 350, 356, 365, 384, 389, 396, 402], "17": [323, 350, 356, 366, 389, 396], "kgrid": [323, 396], "5x5x5": [323, 396], "lead": [323, 396], "20x20x20": [323, 396], "uniform": [323, 396], "direect": [323, 396], "rgba": [323, 396], "whena": [323, 396], "recomend": [323, 396], "qualit": [323, 396], "grai": [323, 396], "allow": [323, 384, 389, 390, 395, 396, 402], "web": [323, 396], "page": [323, 384, 385, 388, 396], "http": [323, 369, 384, 386, 396], "org": [323, 369, 384, 396], "user": [323, 337, 348, 350, 351, 352, 355, 356, 357, 358, 364, 365, 366, 381, 384, 389, 390, 393, 395, 396], "html": [323, 384, 396], "surfca": [323, 396], "property_project": [323, 396], "fermi_velocity_vector": [323, 396], "mean": [323, 348, 350, 351, 352, 355, 356, 357, 358, 384, 396], "effective_mass": [323, 396], "collinear": [323, 389, 390, 394, 396, 398], "As": [323, 384, 390, 396, 398], "suggest": [323, 396], "abov": [323, 343, 344, 346, 366, 369, 371, 372, 384, 389, 390, 392, 396], "belov": [323, 396], "fast": [323, 396], "rather": [323, 396, 397, 402], "inaccur": [323, 384, 396], "nearest": [323, 396], "neighbor": [323, 396], "accur": [323, 396], "linear": [323, 396], "gif": [323, 372, 396], "mp4": [323, 396], "video": [323, 396], "export": [323, 396, 398], "stl": [323, 396], "binari": [323, 396], "ply": [323, 396], "ascii": [323, 396], "off": [323, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 383, 396], "obj": [323, 396], "gltf": [323, 396], "collada": [323, 396], "meshio": [323, 396], "illus": [323, 396], "depth": [323, 385, 396], "graphic": [323, 396], "turn": [323, 368, 369, 370, 371, 372, 373, 374, 375, 383, 396], "largest": [323, 396], "show_curvatur": [323, 396], "curvatur": [323, 396], "curvature_typ": [323, 396], "avail": [323, 384, 385, 390, 395, 396, 402], "gaussian": [323, 396], "iso_energi": [323, 396], "view": [323, 384, 396], "camera": [323, 396], "nkx": 324, "nky": 324, "grid_siz": 325, "40": [325, 341, 369, 381, 390], "with_time_revers": 325, "recip": [325, 381, 396], "hpkot": [325, 381], "threshold": [325, 381], "07": [325, 367, 381], "angle_toler": 325, "supercell_matrix": [325, 381, 402], "recepi": 325, "procarrepair": [326, 400], "exist": 327, "pre": [337, 361, 364, 365, 366, 378, 381, 384, 387, 388], "post": [337, 361, 364, 365, 366, 378, 381, 384, 387, 388, 397], "cat": [337, 340, 391, 398], "depend": [337, 386, 393], "mai": [337, 352, 358, 384, 390, 396], "orbitald": 337, "bandsplot_2d": 337, "bandtructur": 337, "combin": [337, 384, 389, 390, 391, 396], "fermi2d": [337, 363, 366, 367, 383, 395], "fermi3d": [337, 343, 344, 368, 376, 383, 396], "generate2dkmesh": [337, 378], "kmesh": [337, 343, 346, 380], "bandgap": [337, 377, 382, 383], "reapir": 337, "abinitoutput": 340, "prtprocar": 340, "nameofoutputfil": 340, "split": [340, 363, 367, 383, 391, 395], "bandlin": 341, "band_": [341, 389, 390], "_a": 341, "obtain": [341, 387, 388, 390, 391, 398], "task": [341, 387, 388], "22": [341, 365, 367, 376], "addition": [341, 394], "spinpol": 341, "These": [341, 347, 354, 360, 361, 363, 368, 377, 383, 384, 389, 390, 396], "join": 341, "plot1d": 341, "gamma": [341, 346, 378, 390, 391, 399, 401, 402], "were": [341, 384], "guid": [342, 344, 346, 348, 350, 351, 352, 355, 356, 357, 358, 385], "prepar": 342, "perper": 342, "fatband": 343, "lobter": 343, "lobstercod": 343, "v6": [343, 344], "variou": [343, 344, 346, 387, 388, 394, 398, 399, 401], "independ": [343, 344, 346, 384], "pw": [343, 344], "your": [343, 344, 384, 385, 396], "bands_dirnam": [343, 344, 346], "dos_dirnam": [343, 344, 346], "bands_mod": [343, 344, 346], "dos_mod": [343, 344, 346], "right": [343, 384, 393, 396, 398], "addit": [343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 398], "wf_collect": 343, "nosym": 343, "noinv": 343, "k_point": [343, 344], "520": 343, "0000000": 343, "1428571": 343, "2857143": 343, "4285714": 343, "0000000000": [343, 344], "0000": 343, "0200000000": 343, "4800000000": 343, "5000000000": [343, 344], "5110420726": 343, "4889579274": 343, "7539676705": 343, "2460323295": 343, "7650097432": 343, "2349902568": 343, "h2": 343, "h0": 343, "2238002446": 343, "meth": 343, "explicitli": [343, 344, 384], "lobster_input_fil": 343, "explicit": [343, 344], "createfatband": 343, "2p_x": 343, "2p_y": 343, "2p_z": 343, "li": [343, 384], "refer": [343, 348, 350, 351, 352, 355, 356, 357, 358, 365, 384, 389, 390, 394, 398, 399, 401], "fe": [343, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 370, 371, 372, 373, 374, 375, 379, 380, 381], "lobster_q": 343, "projwfc": 344, "make": [344, 346, 368, 369, 370, 371, 372, 373, 374, 375, 383, 384, 395, 397], "sure": [344, 346, 368, 369, 370, 371, 372, 373, 374, 375, 383, 384], "kresolveddo": 344, "copi": [344, 384, 393], "main": [344, 394, 399, 401], "nscf": 344, "crystal_b": 344, "6250000000": 344, "2500000000": 344, "u": [344, 384, 385, 395], "3750000000": 344, "7500000000": 344, "w": [344, 384, 396], "occur": [344, 384, 390], "269": 344, "0083333333": 344, "0166666667": 344, "0250000000": 344, "0333333333": 344, "0416666667": 344, "4916666667": 344, "5062500000": 344, "0125000000": 344, "6125000000": 344, "2250000000": 344, "6187500000": 344, "2375000000": 344, "3691406250": 344, "7382812500": 344, "3632812500": 344, "7265625000": 344, "3574218750": 344, "7148437500": 344, "0058593750": 344, "0117187500": 344, "starting_magnet": 344, "branch": 344, "instal": [344, 384], "git": [344, 386], "clone": 344, "gitlab": 344, "com": [344, 384, 386], "pietrodeluga": 344, "q": [344, 396], "cd": [344, 386], "checkout": 344, "new_proj": 344, "bin": 344, "side": [344, 384], "noncolin": 344, "lspinorb": 344, "savesigma": 344, "still": [345, 384], "develop": [345, 361, 364, 365, 366, 378, 381, 388], "wavefunct": [346, 398], "lorbit": [346, 402], "11": [346, 350, 353, 356, 369, 376, 384, 389, 398], "unfold": [346, 387, 388, 398], "12": [346, 350, 356, 389, 396, 398, 402], "wave": [346, 398], "ispin": [346, 402], "lnoncollinear": 346, "icharg": 346, "math": [346, 389, 390], "chgcar": 346, "line_mod": 346, "h": [346, 384, 399, 402], "25": [346, 356, 359, 369, 372], "demonstr": [347, 354, 360, 363, 368, 377, 383], "capabl": [347, 354, 360, 363, 368, 377, 383, 387, 388, 390, 396], "download": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383], "data_dir": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381], "download_exampl": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "save_dir": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "spin_calc_typ": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "calc_typ": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "root": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "sep": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381], "There": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384, 385], "pass": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 384], "overlay_orbit": [348, 349, 350, 351, 352, 361], "ebs_plot": [348, 349, 350, 351, 352, 390, 392], "0x000002eb3db47bb0": 348, "pleas": [348, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 378, 381, 384, 385, 386, 396, 398], "ref": [348, 350, 351, 352, 355, 356, 357, 358], "atomic_project": [348, 350, 351, 352, 355, 356, 357, 358], "0x000002eb3a72dca0": 348, "0x000002eb3cd5a070": 348, "0x000002eb3c6fd2e0": 348, "0x000002eb3bfcc7f0": 348, "0x000002eb3c1dca30": 348, "0x000002eb3a69d160": 348, "0x000002eb3a50d190": 348, "minut": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381], "995": [348, 353], "plotting_colinear": [348, 353], "jupyt": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383], "notebook": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383], "ipynb": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381], "galleri": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383], "sphinx": [348, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383], "vasp_data_dir": 349, "qe_data_dir": 349, "overlay_speci": [349, 350, 351, 352, 361], "0x000002eb3e2f1e50": 349, "577": [349, 353], "plotting_compare_band": [349, 353], "sphinx_gallery_thumbnail_numb": [350, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381], "0x000002eb3a61e070": 350, "express": [350, 356, 384], "therefor": [350, 356, 384, 389, 402], "0x000002eb3a7d8df0": 350, "849": [350, 353], "plotting_noncolinear_q": [350, 353], "0x000002eb3a49f6d0": 351, "0x000002eb3a37b940": 351, "663": [351, 353], "plotting_noncolinear_vasp": [351, 353], "few": [352, 358], "0x000002eb3b8531f0": 352, "doc": [352, 358], "default_set": [352, 358], "ini": [352, 358], "0x000002eb3b8225b0": 352, "0x000002eb3a471760": 352, "0x000002eb3c1e5640": 352, "845": [352, 353], "plotting_spin_polar": [352, 353], "00": [353, 359, 362, 367, 376, 382], "929": 353, "execut": [353, 359, 362, 367, 376, 382, 384, 390], "examples_00": 353, "03": [353, 359], "mb": [353, 359, 362, 367, 376, 382], "dos_plot": [355, 356, 357, 358], "0x000002eb1032d0a0": 355, "0x000002eb3f3ea8b0": 355, "0x000002eb1031ef70": 355, "0x000002eb3c741130": 355, "0x000002eb49dcedc0": 355, "0x000002eb3c72b8b0": 355, "28": [355, 359, 384], "507": [355, 359], "plotting_colinear_do": [355, 359], "0x000002eb3db43370": 356, "358": [356, 359], "plotting_noncolinear_dos_q": [356, 359], "0x000002eb3bfeec10": 357, "410": [357, 359], "plotting_noncolinear_dos_vasp": [357, 359], "0x000002eb49d3b5b0": 358, "0x000002eb49df8c40": 358, "0x000002eb3a433220": 358, "0x000002eb49db3eb0": 358, "0x000002eb3a4950a0": 358, "0x000002eb3f9b96d0": 358, "0x000002eb3b948400": 358, "294": [358, 359], "plotting_spin_polarized_do": [358, 359], "570": 359, "examples_01": 359, "06": 359, "bands_dir": 361, "dos_dir": 361, "____": [361, 364, 365, 366, 378, 381], "_": [361, 364, 365, 366, 378, 381, 398], "__": [361, 364, 365, 366, 378, 381], "___": [361, 364, 365, 366, 378, 381], "librari": [361, 364, 365, 366, 378, 381, 384, 386, 387, 388], "jun": [361, 364, 365, 366, 378, 381], "10th": [361, 364, 365, 366, 378, 381], "2021": [361, 364, 365, 366, 378, 381], "cite": [361, 364, 365, 366, 378, 381, 396], "uthpala": [361, 364, 365, 366, 378, 381, 384], "herath": [361, 364, 365, 366, 378, 381, 384], "pedram": [361, 364, 365, 366, 378, 381, 384], "tavadz": [361, 364, 365, 366, 378, 381, 384], "xu": [361, 364, 365, 366, 378, 381, 384], "he": [361, 364, 365, 366, 378, 381, 384], "eric": [361, 364, 365, 366, 378, 381, 384], "bousquet": [361, 364, 365, 366, 378, 381, 384], "sobhit": [361, 364, 365, 366, 378, 381, 384], "singh": [361, 364, 365, 366, 378, 381, 384], "francisco": [361, 364, 365, 366, 378, 381, 384], "mu\u00f1oz": [361, 364, 365, 366, 378, 381, 384], "aldo": [361, 364, 365, 366, 378, 381, 384], "romero": [361, 364, 365, 366, 378, 381, 384], "comput": [361, 364, 365, 366, 378, 381, 384], "physic": [361, 364, 365, 366, 378, 381, 384], "commun": [361, 364, 365, 366, 378, 381, 384], "251": [361, 364, 365, 366, 378, 381, 384], "2020": [361, 364, 365, 366, 378, 381, 384], "107080": [361, 364, 365, 366, 378, 381, 384], "rees": [361, 364, 365, 366, 378, 381, 384], "boucher": [361, 364, 365, 366, 378, 381, 384], "logan": [361, 364, 365, 366, 378, 381, 384], "lang": [361, 364, 365, 366, 378, 381, 384], "freddi": [361, 364, 365, 366, 378, 381, 384], "farah": [361, 364, 365, 366, 378, 381, 384], "521": [361, 362], "plotting_bandsdosplot": [361, 362], "examples_02": 362, "bands_do": 362, "noncolinear": [363, 367, 383, 389], "rashba": [363, 367, 383, 389, 390, 395], "lllang": [364, 365, 366], "desktop": [364, 365, 366], "research": [364, 365, 366, 384, 385], "comp": [364, 365, 366], "rot": [364, 365, 366], "trasl": [364, 365, 366], "_____________________________________________________": [364, 365, 366], "add_legend": 364, "contact": [364, 384], "specfic": [364, 365, 369, 370, 371, 372, 373, 374, 375], "978": [364, 367], "plotting_fermi2d": [364, 367], "By": [365, 384, 396, 402], "s_z": [365, 389, 390, 395], "arrow_project": [365, 366], "arrow_dens": [365, 366], "plain_band": [365, 366], "reee": 365, "104": [365, 367], "plotting_fermi2d_spin_textur": [365, 367], "paper": [366, 369, 384], "had": [366, 384, 390], "bisb": 366, "60ev": 366, "fermei": 366, "90ev": 366, "bisb_monolay": 366, "no_arrow": 366, "20": [366, 367, 378, 381, 384], "21": 366, "18": 366, "19": 366, "067": [366, 367], "plotting_rashba_spin_split": [366, 367], "149": [367, 399], "examples_03": 367, "isovalue_gif": [368, 376, 383], "van": [368, 376, 383], "alphen": [368, 376, 383], "fequenc": [368, 376, 383], "cross_sect": [368, 376, 383], "de": [369, 384], "frequenc": 369, "theoret": 369, "freuqenc": 369, "taken": [369, 384], "experiment": 369, "copper": 369, "silver": 369, "gold": 369, "haa": 369, "doi": [369, 381, 384, 396], "1098": 369, "rsta": 369, "1962": 369, "0011": 369, "frac": [369, 398], "hbar": 369, "cg": 369, "768e": 369, "statcoulomb": 369, "0e": 369, "cm": 369, "0546e": 369, "27": 369, "erg": 369, "au": 369, "ensur": [369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 384], "screen": [369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 402], "off_screen": [369, 370, 371, 372, 373, 374, 375, 378, 380, 381], "actual": [369, 370, 371, 372, 373, 374, 375, 384], "plot_fermi_cross_section_box_widget": 369, "surface_opac": 369, "1586": 369, "ang": 369, "1586e": 369, "365e": 369, "f_": 369, "exp": 369, "50e": 369, "1596": 369, "1596e": 369, "68e": 369, "3956": 369, "3956e": 369, "61e": 369, "85e": 369, "722": [369, 376], "plotting_de_hass_van_alphen": [369, 376], "outermost": 370, "center": [370, 378, 384, 395, 398], "line_width": 370, "adjust": 370, "plot_fermi_cross_sect": 370, "cross_section_slice_linewidth": 370, "2d_slice": 370, "833": [370, 376], "plotting_fermi3d_cross_sect": [370, 376], "would": [371, 372, 384, 389, 390, 395, 396], "throughout": [371, 372, 384], "plot_fermi_isoslid": 371, "32": [371, 376], "564": [371, 376], "plotting_fermi3d_isoslid": [371, 376], "exact": [372, 384], "create_isovalue_gif": 372, "33": [372, 376], "425": [372, 376], "plotting_fermi3d_isovalue_gif": [372, 376], "plot_fermi_surfac": [373, 374, 375], "261": [373, 376], "plotting_fermi3d_plain": [373, 376], "spin_color": 374, "surface_cmap": 374, "26": [374, 376], "266": [374, 376], "plotting_fermi3d_spin": [374, 376], "605": [375, 376], "plotting_fermi3d_spin_textur": [375, 376], "677": 376, "examples_04": 376, "08": [376, 380], "kmesh_gener": [377, 382, 383, 395], "kpath_gener": [377, 382, 383], "particularli": [378, 391, 395, 400], "command": [378, 384, 386, 391, 392], "num_grids_x": 378, "num_grids_i": 378, "add_mesh": [378, 380], "show_ax": [378, 381], "show_grid": [378, 381], "450": [378, 382], "plotting_2dkmesh_gener": [378, 382], "note": [379, 386, 390, 391, 393, 402], "band_gap": 379, "155": [379, 382], "plotting_bandgap": [379, 382], "dir": [380, 394, 399, 401], "pv": 380, "e_fermi": 380, "ibz2fbz": [380, 394], "enectron": 380, "3375": 380, "let": [380, 390], "band_0": 380, "atom_0": 380, "orbital_5": 380, "bands_gradi": 380, "filter": [380, 390, 398], "scalar_bar_arg": 380, "band_veloc": 380, "band_spe": 380, "show_scalar_bar": 380, "harmonic_average_effective_mass": 380, "186": [380, 382], "plotting_eb": [380, 382], "momentum": [381, 396], "enabl": [381, 384, 395, 396, 402], "suitabl": [381, 384], "suffici": 381, "typic": [381, 384, 400], "retriev": [381, 390], "slight": 381, "modif": [381, 384], "regard": [381, 384, 395, 397], "seek": 381, "seekpath": [381, 386], "hinuma": 381, "et": [381, 396], "al": [381, 396], "pizzi": 381, "kumagai": 381, "oba": 381, "tanaka": 381, "diagram": 381, "crystallographi": 381, "scienc": [381, 384], "128": 381, "2017": 381, "140": 381, "184": 381, "1016": [381, 384], "commatsci": 381, "2016": 381, "k_path": 381, "k_label": 381, "ey": 381, "unique_label": 381, "unique_kpath": 381, "enumer": 381, "append": 381, "ik": 381, "len": 381, "add_lin": 381, "els": 381, "add_point_label": 381, "point_color": 381, "text_color": 381, "font_siz": 381, "always_vis": 381, "view_yz": 381, "473": [381, 382], "plotting_kpath_gener": [381, 382], "265": 382, "examples_05": 382, "04": 382, "sever": [383, 396], "examples_python": 383, "zip": 383, "examples_jupyt": 383, "open": [384, 387, 388, 396], "head": [384, 385], "scientif": [384, 385], "visibl": [384, 385], "bibtex": 384, "articl": [384, 396], "herath2020107080": 384, "journal": [384, 396], "year": [384, 396], "issn": 384, "0010": 384, "4655": 384, "cpc": 384, "2019": [384, 396], "url": [384, 396], "www": 384, "sciencedirect": 384, "pii": 384, "s0010465519303935": 384, "condens": 384, "matter": 384, "who": 384, "made": 384, "substanti": 384, "concept": 384, "design": 384, "softwar": [384, 396], "creation": 384, "draft": 384, "substant": 384, "revis": 384, "global": 384, "effort": 384, "team": 384, "thank": 384, "jan": 384, "janssen": 384, "litong": 384, "jiang": 384, "nichola": 384, "pike": 384, "don": [384, 385], "munoz": 384, "departamento": 384, "isica": 384, "facultad": 384, "ciencia": 384, "universidad": 384, "chile": 384, "santiago": 384, "nanosci": 384, "nanotechnologi": 384, "cedenna": 384, "depart": 384, "astronomi": 384, "west": 384, "virginia": 384, "univers": 384, "morgantown": 384, "wv": 384, "26505": 384, "6315": 384, "usa": 384, "rutger": 384, "piscatawai": 384, "nj": 384, "08854": 384, "physiqu": 384, "eoriqu": 384, "mat": 384, "eriaux": 384, "cesam": 384, "universit": 384, "eg": 384, "4000": 384, "sart": 384, "tilman": 384, "belgium": 384, "gnu": 384, "public": [384, 385, 396], "29": 384, "june": 384, "2007": 384, "copyright": 384, "free": 384, "foundat": 384, "inc": 384, "fsf": 384, "everyon": 384, "permit": 384, "distribut": [384, 385], "verbatim": 384, "document": [384, 393], "preambl": 384, "copyleft": 384, "kind": 384, "practic": 384, "awai": 384, "freedom": 384, "share": 384, "contrast": 384, "guarante": 384, "releas": 384, "wai": [384, 385, 397], "speak": 384, "price": 384, "wish": [384, 390], "receiv": 384, "piec": 384, "know": 384, "thing": 384, "protect": 384, "prevent": [384, 400], "deni": 384, "surrend": 384, "certain": [384, 389, 390, 395], "respons": 384, "respect": [384, 389, 390, 395, 397, 402], "grati": 384, "fee": 384, "recipi": 384, "And": 384, "gpl": 384, "assert": 384, "offer": 384, "give": [384, 395, 398], "legal": 384, "permiss": [384, 400], "clearli": 384, "warranti": 384, "sake": 384, "mark": 384, "erron": [384, 400], "previou": 384, "devic": 384, "although": 384, "manufactur": 384, "fundament": 384, "incompat": 384, "aim": 384, "systemat": 384, "pattern": 384, "abus": 384, "individu": [384, 390], "unaccept": 384, "prohibit": 384, "those": 384, "aris": [384, 400], "domain": 384, "stand": 384, "readi": 384, "provis": 384, "futur": [384, 390], "threaten": 384, "constantli": 384, "patent": 384, "restrict": 384, "purpos": [384, 402], "avoid": 384, "danger": 384, "could": [384, 390, 395, 397], "proprietari": 384, "assur": 384, "cannot": 384, "AND": 384, "definit": [384, 396], "law": 384, "semiconductor": 384, "license": 384, "address": 384, "organ": 384, "adapt": 384, "fashion": 384, "earlier": 384, "either": 384, "unmodifi": 384, "propag": 384, "anyth": 384, "without": [384, 393, 396], "directli": 384, "secondarili": 384, "liabl": 384, "infring": 384, "applic": 384, "except": 384, "privat": 384, "countri": 384, "activ": 384, "convei": 384, "parti": 384, "mere": 384, "network": 384, "transfer": 384, "appropri": 384, "notic": 384, "extent": 384, "promin": 384, "tell": 384, "menu": 384, "meet": 384, "criterion": 384, "standard": 384, "offici": 384, "recogn": 384, "bodi": 384, "languag": 384, "wide": 384, "among": 384, "serv": 384, "context": 384, "essenti": [384, 394], "kernel": 384, "compil": 384, "produc": [384, 402], "interpret": 384, "howev": [384, 390, 396], "tool": 384, "associ": 384, "link": [384, 393], "subprogram": 384, "intim": 384, "flow": 384, "regener": 384, "basic": [384, 387, 388, 390, 393], "grant": 384, "irrevoc": 384, "met": 384, "affirm": 384, "unlimit": 384, "constitut": 384, "acknowledg": [384, 385], "fair": 384, "long": [384, 390], "otherwis": 384, "sole": 384, "exclus": 384, "facil": 384, "compli": 384, "thu": [384, 389], "behalf": 384, "outsid": 384, "relationship": 384, "circumst": 384, "sublicens": 384, "unnecessari": 384, "anti": 384, "circumvent": 384, "No": [384, 390], "shall": 384, "deem": 384, "technolog": 384, "measur": 384, "fulfil": 384, "oblig": 384, "wipo": 384, "treati": 384, "adopt": 384, "decemb": 384, "1996": 384, "waiv": 384, "power": 384, "forbid": 384, "exercis": 384, "disclaim": 384, "intent": 384, "against": 384, "medium": 384, "conspicu": 384, "publish": [384, 396], "intact": 384, "absenc": 384, "date": [384, 386, 396], "entir": 384, "anyon": 384, "possess": 384, "regardless": 384, "natur": 384, "aggreg": 384, "beyond": [384, 390, 393], "inclus": 384, "caus": 384, "machin": 384, "readabl": 384, "embodi": 384, "accompani": 384, "durabl": 384, "customarili": 384, "interchang": 384, "valid": 384, "least": 384, "three": [384, 389, 390, 391, 396, 397], "spare": 384, "model": 384, "reason": [384, 390], "cost": 384, "server": 384, "altern": 384, "occasion": 384, "noncommerci": 384, "subsect": 384, "6b": 384, "maintain": 384, "clear": [384, 392], "next": [384, 396], "sai": 384, "host": 384, "satisfi": 384, "peer": 384, "transmiss": 384, "6d": 384, "portion": 384, "whose": 384, "exclud": 384, "consum": 384, "tangibl": 384, "person": 384, "famili": 384, "household": 384, "sold": 384, "incorpor": [384, 390], "dwell": 384, "doubt": 384, "resolv": [384, 389, 390, 393], "favor": 384, "coverag": 384, "common": 384, "statu": 384, "commerci": 384, "industri": 384, "unless": 384, "signific": 384, "procedur": 384, "suffic": 384, "continu": [384, 396], "interf": 384, "been": [384, 396], "transact": 384, "perpetu": 384, "character": 384, "neither": 384, "nor": 384, "abil": 384, "rom": 384, "servic": 384, "itself": [384, 385], "advers": 384, "affect": 384, "violat": 384, "rule": 384, "protocol": 384, "across": [384, 398], "publicli": 384, "password": 384, "unpack": 384, "supplement": 384, "though": 384, "govern": 384, "own": 384, "notwithstand": 384, "holder": 384, "liabil": 384, "preserv": 384, "misrepresent": 384, "licensor": 384, "declin": 384, "trademark": 384, "trade": 384, "indemnif": 384, "contractu": 384, "assumpt": 384, "impos": 384, "relicens": 384, "surviv": 384, "statement": 384, "termin": [384, 386], "expressli": 384, "attempt": 384, "void": 384, "paragraph": 384, "ceas": 384, "reinstat": 384, "provision": 384, "until": 384, "perman": 384, "fail": 384, "notifi": 384, "60": [384, 395, 397], "dai": 384, "cessat": 384, "moreov": 384, "cure": 384, "receipt": 384, "qualifi": 384, "Not": 384, "ancillari": 384, "consequ": 384, "likewis": 384, "action": [384, 396], "downstream": 384, "subject": 384, "complianc": 384, "entiti": 384, "asset": 384, "subdivid": 384, "whatev": 384, "predecessor": 384, "interest": [384, 396], "plu": 384, "royalti": 384, "litig": 384, "claim": 384, "counterclaim": 384, "lawsuit": 384, "alleg": 384, "sell": 384, "sale": 384, "acquir": 384, "hereaft": 384, "manner": [384, 390], "worldwid": 384, "agreement": 384, "commit": 384, "denomin": 384, "coven": 384, "sue": 384, "knowingli": 384, "reli": 384, "readili": 384, "arrang": [384, 389, 390], "depriv": 384, "yourself": 384, "benefit": 384, "knowledg": 384, "identifi": [384, 389, 390, 395], "believ": 384, "pursuant": 384, "procur": 384, "convey": 384, "discriminatori": 384, "scope": 384, "busi": 384, "payment": 384, "primarili": 384, "enter": 384, "march": 384, "constru": 384, "impli": 384, "defens": 384, "court": 384, "contradict": 384, "excus": 384, "simultan": 384, "pertin": 384, "agre": 384, "collect": [384, 396], "whom": 384, "refrain": 384, "affero": 384, "concern": [384, 396], "Such": 384, "spirit": 384, "distinguish": 384, "later": 384, "ever": 384, "proxi": 384, "THERE": 384, "NO": 384, "FOR": 384, "THE": 384, "TO": 384, "BY": 384, "IN": 384, "OR": 384, "AS": 384, "OF": 384, "BUT": 384, "NOT": 384, "merchant": 384, "fit": 384, "risk": 384, "qualiti": 384, "WITH": 384, "prove": 384, "defect": 384, "necessari": [384, 390, 398], "event": 384, "WILL": 384, "BE": 384, "damag": 384, "incident": 384, "consequenti": 384, "inabl": 384, "loss": 384, "BEING": 384, "sustain": 384, "failur": 384, "even": [384, 390], "IF": 384, "SUCH": 384, "advis": 384, "review": 384, "close": [384, 396], "approxim": 384, "absolut": 384, "waiver": 384, "civil": 384, "greatest": 384, "best": 384, "achiev": [384, 400], "redistribut": 384, "safest": 384, "pointer": 384, "brief": 384, "idea": 384, "hope": 384, "mail": 384, "short": 384, "welcom": 384, "hypothet": 384, "Of": 384, "cours": 384, "gui": 384, "employ": 384, "programm": 384, "school": 384, "sign": [384, 400], "subroutin": 384, "lesser": 384, "philosophi": 384, "why": 384, "lgpl": 384, "herein": 384, "subclass": 384, "minim": 384, "isol": 384, "reproduc": 384, "bound": 384, "suppli": [384, 390], "good": [384, 396], "faith": 384, "meaning": [384, 392], "header": 384, "choic": [384, 393, 395], "layout": 384, "accessor": 384, "macro": 384, "inlin": 384, "templat": 384, "ten": 384, "fewer": 384, "engin": 384, "dure": [384, 400], "recombin": 384, "relink": 384, "mechan": 384, "properli": 384, "compat": 384, "4d0": 384, "4d1": 384, "uncombin": 384, "prerequisit": 385, "yet": 385, "simplest": 385, "recommend": [385, 389, 390, 400], "anaconda": 385, "conda": 385, "forg": [385, 386], "pip": 385, "via": 385, "pypi": 385, "instruct": [385, 396], "author": [385, 396], "citat": [385, 396], "elsevi": 385, "ase": 386, "romerogroup": 386, "robust": [387, 388], "manag": [387, 388, 394, 399, 401], "kohn": [387, 388, 398], "sham": [387, 388, 398], "That": [387, 388], "multitud": [387, 388], "partial": [387, 388], "stll": 388, "convent": [389, 390, 393], "s_x": [389, 390, 395, 397], "s_y": [389, 390, 395], "st": [389, 390, 395], "perpendicular": [389, 390, 395], "k_x": [389, 390, 395], "k_y": [389, 390, 395], "seismic": [389, 390], "ion": [389, 390, 397, 398], "five": [389, 390], "_3": [389, 390, 393], "correl": [389, 390], "strongli": [389, 390], "jm": 389, "y_": [389, 390, 398], "site": [389, 390, 398], "logic": [389, 390], "probe": [389, 390], "queri": [389, 390], "portrai": 390, "fine": [390, 395], "usag": [390, 391, 392, 393, 395, 397, 400, 402], "39": 390, "79": 390, "119": 390, "159": 390, "syntax": 390, "bands_up": 390, "block": [390, 398], "meant": 390, "suit": 390, "four": 390, "set_titl": 390, "convers": 390, "199": [390, 399, 402], "239": 390, "279": 390, "319": 390, "scriptbandsplot": 390, "larg": [391, 397], "hexagon": [391, 402], "procar_g": 391, "procar_k": 391, "procar_m": 391, "seper": 391, "scriptcat": 391, "acheiv": 392, "elk_dir": 392, "vasp_dir": [392, 393], "srvo_3": 392, "veri": [393, 397], "invlov": 393, "exmpla": 393, "api": 393, "match": 393, "aregumnet": 393, "button": 393, "did": 393, "defalut": 393, "switch": [393, 396], "back": 393, "dos_plain_v": 393, "illustr": [393, 398], "familiar": 393, "lawngreen": 393, "royalblu": 393, "stach": 393, "anoth": [393, 396], "variat": 393, "central": 394, "known": [394, 396, 399, 401], "path_to_calcul": [394, 399, 401], "k1": 394, "k2": 394, "k3": 394, "nprincip": 394, "prinicip": 394, "is_non_collinear": 394, "calcuul": 394, "kpoints_cartesian": 394, "kpoints_reduc": 394, "sometim": 394, "infom": 394, "meshgrid": 394, "index_mesh": 394, "kpoints_mesh": 394, "cartesian_mesh": 394, "bands_mesh": 394, "projected_mesh": 394, "project_phase_mesh": 394, "weights_mesh": 394, "bands_gradient_mesh": 394, "bands_hessian_mesh": 394, "ebs_sum": 394, "recov": 394, "broullin": 394, "dresselhau": 395, "analyz": 395, "topologi": 395, "examin": 395, "lifshitz": 395, "transit": 395, "e_": 395, "noarrow": 395, "heat": 395, "usual": 395, "fault": 395, "solut": 395, "90": 395, "degre": 395, "mostli": 395, "220": 395, "Be": 395, "care": 395, "scriptfermi2d": 395, "extern": 396, "phonon": 396, "divid": 396, "sub": 396, "monkhorst": 396, "pack": 396, "isym": 396, "focus": 396, "polygon": 396, "smooth": 396, "cube": 396, "999999": 396, "000001": 396, "triangl": 396, "assign": 396, "aspect": 396, "handel": 396, "isosurfcac": 396, "fermisurfcae3d": 396, "eigen": 396, "bottom": 396, "amaz": 396, "pyvista_doc": 396, "trimesh_doc": 396, "trimesh_cit": 396, "dawson": 396, "haggerti": 396, "trimsh": 396, "sullivan2019pyvista": 396, "21105": 396, "joss": 396, "01450": 396, "month": 396, "37": 396, "1450": 396, "bane": 396, "sullivan": 396, "alexand": 396, "kaszynski": 396, "streamlin": 396, "toolkit": 396, "vtk": 396, "linux": 396, "mac": 396, "focu": 396, "zoom": 396, "isometr": 396, "reset": 396, "click": 396, "middl": 396, "pan": 396, "scene": 396, "left": [396, 398], "cmd": 396, "ctrl": 396, "mous": 396, "wheel": 396, "ctl": 396, "screenhsot": 396, "backgroundplott": 396, "pick": 396, "decreas": 396, "scriptfermi3d": 396, "simpler": 397, "subset": 397, "heterostructur": 397, "enorm": 397, "consider": 397, "faster": 397, "smaller": 397, "70": 397, "far": 397, "band50": 397, "column": [397, 398], "filtered_sp": 397, "p_x": 397, "especi": 397, "hybrid": 397, "filtered_kpoint": 397, "filtered_spin": 397, "filter_atom": 397, "atom_typ": 397, "scriptfilt": 397, "orbital_nam": 397, "human_atom": 397, "re": 397, "overview": 398, "guidanc": 398, "conduct": 398, "prep": 398, "commonli": 398, "decompos": 398, "224": 398, "12500000": 398, "52": 398, "65660295": 398, "occ": 398, "052": 398, "000": 398, "nion": 398, "report": 398, "repeat": 398, "spheric": 398, "sphere": 398, "radiu": 398, "alpha": [398, 401], "phi_": 398, "nk": 398, "sum_": 398, "mu": 398, "nu": 398, "sigma_": 398, "psi_": 398, "sigma": 398, "pauli": 398, "spinor": 398, "bmatrix": 398, "keyboard": 398, "shortcut": 398, "kapth": 399, "nsegment": 399, "belong": 399, "99": 399, "249": 399, "299": 399, "8660254": 399, "70710678": 399, "4330127": 399, "8291562": 399, "ill": 400, "lack": 400, "neg": 400, "5000000": 400, "scriptrepair": 400, "beta": 401, "nspeci": 401, "atomic_numb": 401, "lattice_corn": 401, "cell_convex_hul": 401, "get_space_group_numb": 401, "get_space_group_intern": 401, "get_wyckoff_posit": 401, "get_spglib_symmetry_dataset": 401, "often": 402, "primit": 402, "becom": 402, "quit": 402, "sophist": 402, "fold": 402, "difficult": 402, "scheme": 402, "fat": 402, "proport": 402, "shrink": 402, "2x2x2": 402, "doubl": 402, "fname": 402, "diag": 402, "shift_efermi": 402, "54": 402, "86": 402, "110": 402, "147": 402, "165": 402, "print_kpt": 402, "show_band": 402, "savetab": 402, "csv": 402, "unfolded_band": 402, "scriptunfold": 402, "elkin": 402, "unfold_mod": 402, "unfold_mask": 402, "old": 402, "unfold_result": 402, "unfol": 402}, "objects": {"pyprocar.core": [[6, 0, 1, "", "BrillouinZone"], [9, 0, 1, "", "DensityOfStates"], [18, 0, 1, "", "ElectronicBandStructure"], [61, 0, 1, "", "FermiSurface"], [69, 0, 1, "", "FermiSurface3D"], [77, 0, 1, "", "Isosurface"], [84, 0, 1, "", "KPath"], [93, 0, 1, "", "Structure"], [119, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[7, 1, 1, "", "__init__"], [8, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[10, 1, 1, "", "__init__"], [11, 1, 1, "", "coupled_to_uncoupled_basis"], [12, 1, 1, "", "dos_sum"], [13, 1, 1, "", "get_current_basis"], [14, 2, 1, "", "is_non_collinear"], [15, 2, 1, "", "n_dos"], [16, 2, 1, "", "n_energies"], [17, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[19, 1, 1, "", "__init__"], [20, 2, 1, "", "bands_gradient"], [21, 2, 1, "", "bands_gradient_mesh"], [22, 2, 1, "", "bands_hessian"], [23, 2, 1, "", "bands_hessian_mesh"], [24, 2, 1, "", "bands_mesh"], [25, 1, 1, "", "calculate_scalar_gradient"], [26, 1, 1, "", "calculate_scalar_integral"], [27, 1, 1, "", "create_nd_mesh"], [28, 1, 1, "", "create_scaler_mesh"], [29, 1, 1, "", "create_vector_mesh"], [30, 1, 1, "", "ebs_sum"], [31, 2, 1, "", "fermi_speed"], [32, 2, 1, "", "fermi_speed_mesh"], [33, 2, 1, "", "fermi_velocity"], [34, 2, 1, "", "fermi_velocity_mesh"], [35, 2, 1, "", "harmonic_average_effective_mass"], [36, 2, 1, "", "harmonic_average_effective_mass_mesh"], [37, 1, 1, "", "ibz2fbz"], [38, 2, 1, "", "index_mesh"], [39, 1, 1, "", "interpolate_mesh_grid"], [40, 2, 1, "", "is_non_collinear"], [41, 2, 1, "", "kpoints_cartesian"], [42, 2, 1, "", "kpoints_cartesian_mesh"], [43, 2, 1, "", "kpoints_mesh"], [44, 2, 1, "", "kpoints_reduced"], [45, 1, 1, "", "mesh_to_array"], [46, 2, 1, "", "n_kx"], [47, 2, 1, "", "n_ky"], [48, 2, 1, "", "n_kz"], [49, 2, 1, "", "natoms"], [50, 2, 1, "", "nbands"], [51, 2, 1, "", "nkpoints"], [52, 2, 1, "", "norbitals"], [53, 2, 1, "", "nprincipals"], [54, 2, 1, "", "nspins"], [55, 1, 1, "", "plot_kpoints"], [56, 2, 1, "", "projected_mesh"], [57, 2, 1, "", "projected_phase_mesh"], [58, 1, 1, "", "ravel_array"], [59, 1, 1, "", "unfold"], [60, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[62, 1, 1, "", "__init__"], [63, 1, 1, "", "add_axes_labels"], [64, 1, 1, "", "add_legend"], [65, 1, 1, "", "find_energy"], [66, 1, 1, "", "plot"], [67, 1, 1, "", "spin_texture"], [68, 1, 1, "", "update_config"]], "pyprocar.core.FermiSurface3D": [[70, 1, 1, "", "__init__"], [71, 1, 1, "", "extend_surface"], [72, 1, 1, "", "project_atomic_projections"], [73, 1, 1, "", "project_fermi_speed"], [74, 1, 1, "", "project_fermi_velocity"], [75, 1, 1, "", "project_harmonic_effective_mass"], [76, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[78, 1, 1, "", "__init__"], [79, 2, 1, "", "dxyz"], [80, 2, 1, "", "nX"], [81, 2, 1, "", "nY"], [82, 2, 1, "", "nZ"], [83, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "get_kpoints_transformed"], [87, 1, 1, "", "get_optimized_kpoints_transformed"], [88, 2, 1, "", "kdistances"], [89, 2, 1, "", "nsegments"], [90, 2, 1, "", "tick_names"], [91, 2, 1, "", "tick_positions"], [92, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[94, 1, 1, "", "__init__"], [95, 2, 1, "", "a"], [96, 2, 1, "", "alpha"], [97, 2, 1, "", "atomic_numbers"], [98, 2, 1, "", "b"], [99, 2, 1, "", "beta"], [100, 2, 1, "", "c"], [101, 2, 1, "", "cell_convex_hull"], [102, 2, 1, "", "density"], [103, 2, 1, "", "gamma"], [104, 1, 1, "", "get_space_group_international"], [105, 1, 1, "", "get_space_group_number"], [106, 1, 1, "", "get_spglib_symmetry_dataset"], [107, 1, 1, "", "get_wyckoff_positions"], [108, 1, 1, "", "is_point_inside"], [109, 2, 1, "", "lattice_corners"], [110, 2, 1, "", "masses"], [111, 2, 1, "", "natoms"], [112, 2, 1, "", "nspecies"], [113, 1, 1, "", "plot_cell_convex_hull"], [114, 2, 1, "", "reciprocal_lattice"], [115, 2, 1, "", "species"], [116, 1, 1, "", "supercell"], [117, 1, 1, "", "transform"], [118, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[120, 1, 1, "", "__init__"], [121, 2, 1, "", "centers"], [122, 1, 1, "", "export"], [123, 2, 1, "", "faces_array"], [124, 1, 1, "", "set_color_with_cmap"], [125, 1, 1, "", "set_scalars"], [126, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[138, 0, 1, "", "AbinitKpoints"], [140, 0, 1, "", "AbinitProcar"], [142, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[139, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[141, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[143, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[144, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[147, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[148, 1, 1, "", "__init__"], [149, 2, 1, "", "dos"], [150, 1, 1, "", "dos_parametric"], [151, 2, 1, "", "dos_projected"], [152, 2, 1, "", "dos_to_dict"], [153, 2, 1, "", "dos_total"], [154, 2, 1, "", "final_structure"], [155, 2, 1, "", "initial_structure"], [156, 1, 1, "", "parse_structure"], [157, 2, 1, "", "species"], [158, 2, 1, "", "structure"], [159, 2, 1, "", "structures"]], "pyprocar.io.qe": [[160, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[161, 1, 1, "", "__init__"], [162, 2, 1, "", "final_structure"], [163, 1, 1, "", "getKpointLabels"], [164, 2, 1, "", "initial_structure"], [165, 1, 1, "", "kpoints_cart"], [166, 2, 1, "", "species"], [167, 2, 1, "", "structure"], [168, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[169, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[170, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[171, 0, 1, "", "Kpoints"], [173, 0, 1, "", "Outcar"], [179, 0, 1, "", "Poscar"], [181, 0, 1, "", "Procar"], [187, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[172, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[174, 1, 1, "", "__init__"], [175, 2, 1, "", "efermi"], [173, 3, 1, "", "file_str"], [173, 3, 1, "", "filename"], [176, 1, 1, "", "get_symmetry_operations"], [177, 2, 1, "", "reciprocal_lattice"], [178, 2, 1, "", "rotations"], [173, 3, 1, "", "variables"]], "pyprocar.io.vasp.Poscar": [[180, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[182, 1, 1, "", "__init__"], [183, 2, 1, "", "kpoints_cartesian"], [184, 2, 1, "", "kpoints_reduced"], [185, 1, 1, "", "repair"], [186, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[188, 1, 1, "", "__init__"], [189, 2, 1, "", "bands"], [190, 2, 1, "", "bands_projected"], [191, 1, 1, "", "conv"], [192, 2, 1, "", "convergence"], [193, 2, 1, "", "convergence_electronic"], [194, 2, 1, "", "convergence_ionic"], [195, 2, 1, "", "dos"], [196, 2, 1, "", "dos_projected"], [197, 2, 1, "", "dos_to_dict"], [198, 2, 1, "", "dos_total"], [199, 2, 1, "", "energies"], [200, 2, 1, "", "energy"], [201, 2, 1, "", "fermi"], [202, 2, 1, "", "final_structure"], [203, 2, 1, "", "forces"], [204, 1, 1, "", "get_general"], [205, 1, 1, "", "get_params"], [206, 1, 1, "", "get_scstep"], [207, 1, 1, "", "get_set"], [208, 1, 1, "", "get_structure"], [209, 1, 1, "", "get_varray"], [210, 2, 1, "", "incar"], [211, 2, 1, "", "initial_structure"], [212, 2, 1, "", "is_finished"], [213, 2, 1, "", "iteration_data"], [214, 2, 1, "", "kpoints"], [215, 2, 1, "", "kpoints_list"], [216, 2, 1, "", "last_energy"], [217, 1, 1, "", "parse_vasprun"], [218, 2, 1, "", "potcar_info"], [219, 1, 1, "", "read"], [220, 2, 1, "", "species"], [221, 2, 1, "", "structure"], [222, 2, 1, "", "structures"], [223, 1, 1, "", "text_to_bool"], [224, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[232, 0, 1, "", "DOSPlot"], [252, 0, 1, "", "EBSPlot"], [271, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "draw_fermi"], [235, 1, 1, "", "grid"], [236, 1, 1, "", "legend"], [237, 1, 1, "", "plot_dos"], [238, 1, 1, "", "plot_parametric"], [239, 1, 1, "", "plot_parametric_line"], [240, 1, 1, "", "plot_stack"], [241, 1, 1, "", "plot_stack_orbitals"], [242, 1, 1, "", "plot_stack_species"], [243, 1, 1, "", "save"], [244, 1, 1, "", "set_xlabel"], [245, 1, 1, "", "set_xlim"], [246, 1, 1, "", "set_xticks"], [247, 1, 1, "", "set_ylabel"], [248, 1, 1, "", "set_ylim"], [249, 1, 1, "", "set_yticks"], [250, 1, 1, "", "show"], [251, 1, 1, "", "update_config"]], "pyprocar.plotter.EBSPlot": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "draw_fermi"], [255, 1, 1, "", "grid"], [256, 1, 1, "", "legend"], [257, 1, 1, "", "plot_bands"], [258, 1, 1, "", "plot_parameteric"], [259, 1, 1, "", "plot_parameteric_overlay"], [260, 1, 1, "", "plot_scatter"], [261, 1, 1, "", "save"], [262, 1, 1, "", "set_title"], [263, 1, 1, "", "set_xlabel"], [264, 1, 1, "", "set_xlim"], [265, 1, 1, "", "set_xticks"], [266, 1, 1, "", "set_ylabel"], [267, 1, 1, "", "set_ylim"], [268, 1, 1, "", "set_yticks"], [269, 1, 1, "", "show"], [270, 1, 1, "", "update_config"]], "pyprocar.plotter.ProcarPlot": [[272, 1, 1, "", "__init__"], [273, 1, 1, "", "atomicPlot"], [274, 1, 1, "", "parametricPlot"], [275, 1, 1, "", "plotBands"], [276, 1, 1, "", "scatterPlot"]], "pyprocar.pyposcar": [[281, 0, 1, "", "Poscar"], [289, 4, 1, "", "poscarDiff"], [290, 0, 1, "", "poscar_modify"], [300, 0, 1, "", "poscar_supercell"]], "pyprocar.pyposcar.Poscar": [[282, 1, 1, "", "__init__"], [283, 1, 1, "", "add"], [284, 1, 1, "", "parse"], [285, 1, 1, "", "remove"], [286, 1, 1, "", "sort"], [287, 1, 1, "", "write"], [288, 1, 1, "", "xyz"]], "pyprocar.pyposcar.poscar_modify": [[291, 1, 1, "", "__init__"], [292, 1, 1, "", "add"], [293, 1, 1, "", "change_elements"], [294, 1, 1, "", "pos_multiply"], [295, 1, 1, "", "pos_sum"], [296, 1, 1, "", "remove"], [297, 1, 1, "", "scale_lattice"], [298, 1, 1, "", "shift"], [299, 1, 1, "", "write"]], "pyprocar.pyposcar.poscar_supercell": [[301, 1, 1, "", "__init__"], [302, 1, 1, "", "supercell"], [303, 1, 1, "", "write"]], "pyprocar": [[393, 5, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[307, 0, 1, "", "FermiHandler"], [316, 4, 1, "", "bandgap"], [317, 4, 1, "", "bandsdosplot"], [318, 4, 1, "", "bandsplot"], [319, 4, 1, "", "bandsplot_2d"], [320, 4, 1, "", "cat"], [321, 4, 1, "", "dosplot"], [322, 4, 1, "", "fermi2D"], [323, 4, 1, "", "fermi3D"], [324, 4, 1, "", "generate2dkmesh"], [325, 4, 1, "", "kpath"], [326, 4, 1, "", "repair"], [390, 5, 0, "-", "scriptBandsplot"], [391, 5, 0, "-", "scriptCat"], [395, 5, 0, "-", "scriptFermi2D"], [396, 5, 0, "-", "scriptFermi3D"], [397, 5, 0, "-", "scriptFilter"], [400, 5, 0, "-", "scriptRepair"], [402, 5, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "create_isovalue_gif"], [310, 1, 1, "", "default_settings"], [311, 1, 1, "", "plot_fermi_cross_section"], [312, 1, 1, "", "plot_fermi_cross_section_box_widget"], [313, 1, 1, "", "plot_fermi_isoslider"], [314, 1, 1, "", "plot_fermi_surface"], [315, 1, 1, "", "process_data"]], "pyprocar.scripts.scriptBandsplot": [[390, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[391, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[395, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[396, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[397, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[400, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[402, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"band": [0, 1, 189, 344, 346, 347, 348, 349, 350, 351, 352, 360, 364, 365, 380, 383, 390, 392, 394, 402], "structur": [0, 1, 93, 135, 158, 159, 167, 168, 221, 222, 344, 346, 347, 348, 349, 350, 351, 352, 383, 390, 394, 401], "plot": [0, 1, 2, 3, 4, 66, 348, 350, 351, 352, 355, 356, 357, 358, 360, 361, 364, 365, 366, 370, 371, 372, 373, 374, 375, 378, 381, 383, 390, 395, 402], "option": [0, 1, 2, 3, 4], "spin_color": [0, 2, 4], "color": [0, 2, 3, 365], "cmap": [0, 2, 3], "clim": [0, 2, 3], "fermi_color": [0, 2], "fermi_linestyl": [0, 2], "fermi_linewidth": [0, 2], "grid": [0, 2, 235, 255], "grid_axi": [0, 2], "grid_color": [0, 2], "grid_linestyl": [0, 2], "grid_linewidth": [0, 2], "grid_which": [0, 2], "label": 0, "legend": [0, 2, 236, 256], "linestyl": [0, 2, 3], "linewidth": [0, 2, 3], "marker": [0, 2, 3], "markers": [0, 2], "opac": [0, 2], "plot_color_bar": [0, 2, 3], "savefig": [0, 2], "titl": [0, 2], "weighted_color": [0, 2], "weighted_width": [0, 2], "figure_s": [0, 2], "dpi": [0, 2, 3], "2d": [1, 3, 363, 383, 395], "surface_cmap": [1, 4], "surface_color": [1, 4], "surface_spinpol_color": 1, "surface_bands_color": [1, 4], "surface_opac": [1, 4], "surface_clim": [1, 4], "brillouin_zone_styl": [1, 4], "brillouin_zone_line_width": [1, 4], "brillouin_zone_color": [1, 4], "brillouin_zone_opac": [1, 4], "texture_cmap": [1, 4], "texture_color": [1, 4], "texture_s": [1, 4], "texture_scal": [1, 4], "texture_opac": [1, 4], "add_ax": [1, 4], "x_axes_label": [1, 4], "y_axes_label": [1, 4], "z_axes_label": [1, 4], "axes_label_color": [1, 4], "axes_line_width": [1, 4], "add_scalar_bar": [1, 4], "scalar_bar_label": [1, 4], "scalar_bar_ital": [1, 4], "scalar_bar_bold": [1, 4], "scalar_bar_title_font_s": [1, 4], "scalar_bar_label_font_s": [1, 4], "scalar_bar_position_x": [1, 4], "scalar_bar_position_i": [1, 4], "scalar_bar_color": [1, 4], "background_color": [1, 4], "orbit_gif_n_point": [1, 4], "orbit_gif_step": [1, 4], "orbit_mp4_n_point": [1, 4], "orbit_mp4_step": [1, 4], "plotter_offscreen": [1, 4], "plotter_camera_po": [1, 4], "isoslider_titl": [1, 4], "isoslider_styl": [1, 4], "isoslider_color": [1, 4], "cross_section_slice_linewidth": [1, 4], "cross_section_slice_show_area": [1, 4], "do": [2, 149, 195, 356, 357, 360, 383], "font": 2, "font_siz": 2, "plot_bar": 2, "plot_tot": 2, "spin_label": 2, "verbos": 2, "stack_y_label": 2, "x_label": [2, 3], "y_label": [2, 3], "fermi": [3, 4, 201, 344, 346, 363, 368, 369, 380, 383, 396], "surfac": [3, 4, 119, 136, 369, 396], "add_axes_label": [3, 63], "add_legend": [3, 64], "no_arrow": 3, "arrow_color": 3, "arrow_dens": 3, "arrow_s": [3, 4], "arrow_project": 3, "3d": [4, 368, 383, 396], "configur": 5, "file": 5, "pyprocar": [6, 9, 18, 61, 69, 77, 84, 93, 119, 138, 140, 142, 144, 147, 160, 169, 171, 173, 179, 181, 187, 232, 252, 271, 281, 290, 300, 307, 384, 385, 387, 388], "core": [6, 9, 18, 61, 69, 77, 84, 93, 119, 132], "brillouinzon": [6, 127], "__init__": [7, 10, 19, 62, 70, 78, 85, 94, 120, 139, 141, 143, 145, 148, 161, 170, 172, 174, 180, 182, 188, 233, 253, 272, 282, 291, 301, 308], "wigner_seitz": 8, "densityofst": [9, 128], "coupled_to_uncoupled_basi": 11, "dos_sum": 12, "get_current_basi": 13, "is_non_collinear": [14, 40], "n_do": 15, "n_energi": 16, "n_spin": 17, "electronicbandstructur": [18, 129, 394], "bands_gradi": 20, "bands_gradient_mesh": 21, "bands_hessian": 22, "bands_hessian_mesh": 23, "bands_mesh": 24, "calculate_scalar_gradi": 25, "calculate_scalar_integr": 26, "create_nd_mesh": 27, "create_scaler_mesh": 28, "create_vector_mesh": 29, "ebs_sum": 30, "fermi_spe": 31, "fermi_speed_mesh": 32, "fermi_veloc": 33, "fermi_velocity_mesh": 34, "harmonic_average_effective_mass": 35, "harmonic_average_effective_mass_mesh": 36, "ibz2fbz": 37, "index_mesh": 38, "interpolate_mesh_grid": 39, "kpoints_cartesian": [41, 183], "kpoints_cartesian_mesh": 42, "kpoints_mesh": 43, "kpoints_reduc": [44, 184], "mesh_to_arrai": 45, "n_kx": 46, "n_ky": 47, "n_kz": 48, "natom": [49, 111], "nband": 50, "nkpoint": 51, "norbit": 52, "nprincip": 53, "nspin": 54, "plot_kpoint": 55, "projected_mesh": 56, "projected_phase_mesh": 57, "ravel_arrai": 58, "unfold": [59, 402], "weights_mesh": 60, "fermisurfac": [61, 130], "find_energi": 65, "spin_textur": [67, 375], "update_config": [68, 251, 270], "fermisurface3d": [69, 131], "extend_surfac": 71, "project_atomic_project": 72, "project_fermi_spe": 73, "project_fermi_veloc": 74, "project_harmonic_effective_mass": 75, "project_spin_texture_atomic_project": 76, "isosurfac": [77, 133], "dxyz": 79, "nx": 80, "ny": 81, "nz": 82, "surface_boundari": 83, "kpath": [84, 134, 325, 338, 399], "get_kpoints_transform": 86, "get_optimized_kpoints_transform": 87, "kdistanc": 88, "nsegment": 89, "tick_nam": 90, "tick_posit": 91, "write_to_fil": 92, "alpha": 96, "atomic_numb": 97, "b": 98, "beta": 99, "c": 100, "cell_convex_hul": 101, "densiti": [102, 344, 346, 354, 355, 358, 383, 393], "gamma": 103, "get_space_group_intern": 104, "get_space_group_numb": 105, "get_spglib_symmetry_dataset": 106, "get_wyckoff_posit": 107, "is_point_insid": 108, "lattice_corn": 109, "mass": [110, 380], "nspeci": 112, "plot_cell_convex_hul": 113, "reciprocal_lattic": [114, 177], "speci": [115, 157, 166, 220], "supercel": [116, 302], "transform": 117, "volum": 118, "center": 121, "export": [122, 390, 395, 402], "faces_arrai": 123, "set_color_with_cmap": 124, "set_scalar": 125, "set_vector": 126, "api": [132, 137, 227, 279, 304, 337], "refer": 137, "io": [138, 140, 142, 144, 147, 160, 169, 171, 173, 179, 181, 187, 227], "abinit": [138, 140, 142, 340], "abinitkpoint": 138, "abinitprocar": 140, "output": 142, "bxsf": 144, "bxsfparser": [144, 226], "parse_bxsf": 146, "lobster": [147, 343], "lobsterpars": [147, 228], "dos_parametr": 150, "dos_project": [151, 196], "dos_to_dict": [152, 197], "dos_tot": [153, 198], "final_structur": [154, 162, 202], "initial_structur": [155, 164, 211], "parse_structur": 156, "qe": 160, "qepars": [160, 229], "getkpointlabel": 163, "kpoints_cart": 165, "siesta": [169, 345], "siestapars": [169, 230], "vasp": [171, 173, 179, 181, 187, 346, 351, 357], "kpoint": [171, 214, 395], "outcar": 173, "efermi": 175, "get_symmetry_oper": 176, "rotat": [178, 395], "poscar": [179, 281, 305], "procar": 181, "repair": [185, 326, 400], "symmetr": 186, "vaspxml": 187, "bands_project": 190, "conv": 191, "converg": 192, "convergence_electron": 193, "convergence_ion": 194, "energi": [199, 200, 366], "forc": 203, "get_gener": 204, "get_param": 205, "get_scstep": 206, "get_set": 207, "get_structur": 208, "get_varrai": 209, "incar": 210, "is_finish": 212, "iteration_data": 213, "kpoints_list": 215, "last_energi": 216, "parse_vasprun": 217, "potcar_info": 218, "read": 219, "text_to_bool": 223, "vasp_paramet": 224, "abinitpars": 225, "vasppars": 231, "plotter": [232, 252, 271, 279], "dosplot": [232, 278, 321, 332], "draw_fermi": [234, 254], "plot_do": 237, "plot_parametr": 238, "plot_parametric_lin": 239, "plot_stack": 240, "plot_stack_orbit": 241, "plot_stack_speci": 242, "save": [243, 261, 370], "set_xlabel": [244, 263], "set_xlim": [245, 264], "set_xtick": [246, 265], "set_ylabel": [247, 266], "set_ylim": [248, 267], "set_ytick": [249, 268], "show": [250, 269, 369], "ebsplot": [252, 277], "plot_band": 257, "plot_parameter": 258, "plot_parameteric_overlai": 259, "plot_scatt": 260, "set_titl": 262, "procarplot": [271, 280], "atomicplot": 273, "parametricplot": 274, "plotband": 275, "scatterplot": 276, "pyposcar": [281, 290, 300, 304], "add": [283, 292], "pars": 284, "remov": [285, 296], "sort": 286, "write": [287, 299, 303], "xyz": 288, "poscardiff": 289, "poscar_modifi": 290, "change_el": 293, "pos_multipli": 294, "pos_sum": 295, "scale_lattic": 297, "shift": 298, "poscar_supercel": 300, "poscarutil": 306, "script": [307, 337], "fermihandl": [307, 335], "create_isovalue_gif": 309, "default_set": 310, "plot_fermi_cross_sect": 311, "plot_fermi_cross_section_box_widget": 312, "plot_fermi_isoslid": 313, "plot_fermi_surfac": 314, "process_data": 315, "bandgap": [316, 327, 379, 380], "bandsdosplot": [317, 328, 361], "bandsplot": [318, 329], "bandsplot_2d": [319, 330], "cat": [320, 331], "fermi2d": [322, 333, 364, 365], "fermi3d": [323, 334, 370, 371, 372, 373, 374, 375], "generate2dkmesh": [324, 336], "reapir": 339, "perper": [340, 341, 343, 345], "elk": 341, "dft": 342, "prep": 342, "quantum": [344, 350, 356], "espresso": [344, 350, 356], "prepar": [344, 346], "calcul": [344, 346, 391], "state": [344, 346, 354, 355, 358, 383, 393], "k": [344, 346, 381, 390, 397, 399], "point": [344, 346, 390, 397], "format": [344, 346], "magnet": [344, 346], "plain": [348, 350, 351, 352, 355, 358, 361, 364, 371, 372, 373, 374, 390, 393], "mode": [348, 350, 351, 352, 355, 356, 357, 358, 361, 364, 371, 372, 373, 374, 375, 393], "parametr": [348, 350, 351, 352, 355, 356, 357, 358, 364, 373, 374, 393], "parametric_linemod": 348, "scatter": [348, 352], "overlay_speci": 348, "overlay_orbti": 348, "overlai": [348, 355], "orbit": [348, 389, 390, 397], "name": 348, "compar": [349, 392], "non": [350, 351, 356, 357], "colinear": [350, 351, 356, 357], "spin": [352, 358, 365, 366, 374, 375, 389, 390, 395, 397], "polar": [352, 358, 374], "comput": [353, 359, 362, 367, 376, 382], "time": [353, 359, 362, 367, 376, 382], "parametric_lin": [355, 358, 393], "stack_speci": [355, 358, 393], "stack_orbti": [355, 358], "stack": [358, 393], "plain_band": 364, "select": [364, 365, 397], "indic": [364, 365, 388], "noncolinear": 365, "textur": [365, 375, 395], "project": [365, 366, 380, 389, 390], "singl": 365, "rashba": 366, "split": 366, "0": [366, 369], "60": 366, "sx": 366, "arrow": 366, "sy": 366, "sz": 366, "90": 366, "how": 369, "get": [369, 385], "van": 369, "alphen": 369, "fequenc": 369, "from": [369, 390], "maxim": 369, "cross": [369, 370], "section": [369, 370], "area": 369, "along": 369, "1": [369, 389, 390, 393], "minim": 369, "extrem": 369, "cross_sect": 370, "slice": 370, "isoslid": 371, "isovalue_gif": 372, "other": [377, 380, 383], "exampl": [378, 379, 380, 381, 383], "kmesh_gener": 378, "kmesh": 378, "find": [379, 380], "properti": 380, "gradient": 380, "veloc": 380, "effect": 380, "kpath_gener": 381, "path": [381, 390, 399], "author": 384, "citat": 384, "cite": [384, 385], "contributor": 384, "develop": 384, "licens": 384, "start": 385, "instal": [385, 386], "paper": 385, "support": 385, "pip": 386, "conda": 386, "clone": 386, "through": 386, "github": 386, "after": 386, "why": 387, "tabl": 388, "atom": [389, 390, 397], "2": [389, 390, 393], "3": [389, 390, 393], "4": [390, 393], "matplotlib": [390, 395, 402], "pyplot": [390, 395, 402], "object": [390, 395, 402], "convert": 390, "reduc": 390, "cartesian": 390, "coordin": 390, "discontinu": 390, "concaten": 391, "multipl": 391, "5": 393, "6": 393, "stack_orbit": 393, "access": [394, 399, 401], "electron": 394, "translat": 395, "mesh": 395, "keyboard": 396, "shortcut": 396, "filter": 397, "data": 397, "To": 397, "user": 398, "guid": 398, "further": 398, "detail": 398, "inform": [399, 401]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"band structure plotting Options": [[0, "band-structure-plotting-options"]], "spin_colors": [[0, "spin-colors"], [2, "spin-colors"], [4, "spin-colors"]], "color": [[0, "color"], [3, "color"]], "cmap": [[0, "cmap"], [2, "cmap"], [3, "cmap"]], "clim": [[0, "clim"], [2, "clim"], [3, "clim"]], "fermi_color": [[0, "fermi-color"], [2, "fermi-color"]], "fermi_linestyle": [[0, "fermi-linestyle"], [2, "fermi-linestyle"]], "fermi_linewidth": [[0, "fermi-linewidth"], [2, "fermi-linewidth"]], "grid": [[0, "grid"], [2, "grid"], [235, "grid"], [255, "grid"]], "grid_axis": [[0, "grid-axis"], [2, "grid-axis"]], "grid_color": [[0, "grid-color"], [2, "grid-color"]], "grid_linestyle": [[0, "grid-linestyle"], [2, "grid-linestyle"]], "grid_linewidth": [[0, "grid-linewidth"], [2, "grid-linewidth"]], "grid_which": [[0, "grid-which"], [2, "grid-which"]], "label": [[0, "label"]], "legend": [[0, "legend"], [2, "legend"], [236, "legend"], [256, "legend"]], "linestyle": [[0, "linestyle"], [2, "linestyle"], [3, "linestyle"]], "linewidth": [[0, "linewidth"], [2, "linewidth"], [3, "linewidth"]], "marker": [[0, "marker"], [2, "marker"], [3, "marker"]], "markersize": [[0, "markersize"], [2, "markersize"]], "opacity": [[0, "opacity"], [2, "opacity"]], "plot_color_bar": [[0, "plot-color-bar"], [2, "plot-color-bar"], [3, "plot-color-bar"]], "savefig": [[0, "savefig"], [2, "savefig"]], "title": [[0, "title"], [2, "title"]], "weighted_color": [[0, "weighted-color"], [2, "weighted-color"]], "weighted_width": [[0, "weighted-width"], [2, "weighted-width"]], "figure_size": [[0, "figure-size"], [2, "figure-size"]], "dpi": [[0, "dpi"], [2, "dpi"], [3, "dpi"]], "band structure 2d plotting Options": [[1, "band-structure-2d-plotting-options"]], "surface_cmap": [[1, "surface-cmap"], [4, "surface-cmap"]], "surface_color": [[1, "surface-color"], [4, "surface-color"]], "surface_spinpol_colors": [[1, "surface-spinpol-colors"]], "surface_bands_colors": [[1, "surface-bands-colors"], [4, "surface-bands-colors"]], "surface_opacity": [[1, "surface-opacity"], [4, "surface-opacity"]], "surface_clim": [[1, "surface-clim"], [4, "surface-clim"]], "brillouin_zone_style": [[1, "brillouin-zone-style"], [4, "brillouin-zone-style"]], "brillouin_zone_line_width": [[1, "brillouin-zone-line-width"], [4, "brillouin-zone-line-width"]], "brillouin_zone_color": [[1, "brillouin-zone-color"], [4, "brillouin-zone-color"]], "brillouin_zone_opacity": [[1, "brillouin-zone-opacity"], [4, "brillouin-zone-opacity"]], "texture_cmap": [[1, "texture-cmap"], [4, "texture-cmap"]], "texture_color": [[1, "texture-color"], [4, "texture-color"]], "texture_size": [[1, "texture-size"], [4, "texture-size"]], "texture_scale": [[1, "texture-scale"], [4, "texture-scale"]], "texture_opacity": [[1, "texture-opacity"], [4, "texture-opacity"]], "add_axes": [[1, "add-axes"], [4, "add-axes"]], "x_axes_label": [[1, "x-axes-label"], [4, "x-axes-label"]], "y_axes_label": [[1, "y-axes-label"], [4, "y-axes-label"]], "z_axes_label": [[1, "z-axes-label"], [4, "z-axes-label"]], "axes_label_color": [[1, "axes-label-color"], [4, "axes-label-color"]], "axes_line_width": [[1, "axes-line-width"], [4, "axes-line-width"]], "add_scalar_bar": [[1, "add-scalar-bar"], [4, "add-scalar-bar"]], "scalar_bar_labels": [[1, "scalar-bar-labels"], [4, "scalar-bar-labels"]], "scalar_bar_italic": [[1, "scalar-bar-italic"], [4, "scalar-bar-italic"]], "scalar_bar_bold": [[1, "scalar-bar-bold"], [4, "scalar-bar-bold"]], "scalar_bar_title_font_size": [[1, "scalar-bar-title-font-size"], [4, "scalar-bar-title-font-size"]], "scalar_bar_label_font_size": [[1, "scalar-bar-label-font-size"], [4, "scalar-bar-label-font-size"]], "scalar_bar_position_x": [[1, "scalar-bar-position-x"], [4, "scalar-bar-position-x"]], "scalar_bar_position_y": [[1, "scalar-bar-position-y"], [4, "scalar-bar-position-y"]], "scalar_bar_color": [[1, "scalar-bar-color"], [4, "scalar-bar-color"]], "background_color": [[1, "background-color"], [4, "background-color"]], "orbit_gif_n_points": [[1, "orbit-gif-n-points"], [4, "orbit-gif-n-points"]], "orbit_gif_step": [[1, "orbit-gif-step"], [4, "orbit-gif-step"]], "orbit_mp4_n_points": [[1, "orbit-mp4-n-points"], [4, "orbit-mp4-n-points"]], "orbit_mp4_step": [[1, "orbit-mp4-step"], [4, "orbit-mp4-step"]], "plotter_offscreen": [[1, "plotter-offscreen"], [4, "plotter-offscreen"]], "plotter_camera_pos": [[1, "plotter-camera-pos"], [4, "plotter-camera-pos"]], "isoslider_title": [[1, "isoslider-title"], [4, "isoslider-title"]], "isoslider_style": [[1, "isoslider-style"], [4, "isoslider-style"]], "isoslider_color": [[1, "isoslider-color"], [4, "isoslider-color"]], "cross_section_slice_linewidth": [[1, "cross-section-slice-linewidth"], [4, "cross-section-slice-linewidth"]], "cross_section_slice_show_area": [[1, "cross-section-slice-show-area"], [4, "cross-section-slice-show-area"]], "dos plotting Options": [[2, "dos-plotting-options"]], "colors": [[2, "colors"]], "font": [[2, "font"]], "font_size": [[2, "font-size"]], "plot_bar": [[2, "plot-bar"]], "plot_total": [[2, "plot-total"]], "spin_labels": [[2, "spin-labels"]], "verbose": [[2, "verbose"]], "stack_y_label": [[2, "stack-y-label"]], "x_label": [[2, "x-label"], [3, "x-label"]], "y_label": [[2, "y-label"], [3, "y-label"]], "fermi surface 2d plotting Options": [[3, "fermi-surface-2d-plotting-options"]], "add_axes_labels": [[3, "add-axes-labels"], [63, "add-axes-labels"]], "add_legend": [[3, "add-legend"], [64, "add-legend"]], "no_arrow": [[3, "no-arrow"]], "arrow_color": [[3, "arrow-color"]], "arrow_density": [[3, "arrow-density"]], "arrow_size": [[3, "arrow-size"], [4, "arrow-size"]], "arrow_projection": [[3, "arrow-projection"]], "fermi surface 3d plotting Options": [[4, "fermi-surface-3d-plotting-options"]], "Configuration Files": [[5, "configuration-files"]], "pyprocar.core.BrillouinZone": [[6, "pyprocar-core-brillouinzone"]], "__init__": [[7, "init"], [10, "init"], [19, "init"], [62, "init"], [70, "init"], [78, "init"], [85, "init"], [94, "init"], [120, "init"], [139, "init"], [141, "init"], [143, "init"], [145, "init"], [148, "init"], [161, "init"], [170, "init"], [172, "init"], [174, "init"], [180, "init"], [182, "init"], [188, "init"], [233, "init"], [253, "init"], [272, "init"], [282, "init"], [291, "init"], [301, "init"], [308, "init"]], "wigner_seitz": [[8, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[9, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[11, "coupled-to-uncoupled-basis"]], "dos_sum": [[12, "dos-sum"]], "get_current_basis": [[13, "get-current-basis"]], "is_non_collinear": [[14, "is-non-collinear"], [40, "is-non-collinear"]], "n_dos": [[15, "n-dos"]], "n_energies": [[16, "n-energies"]], "n_spins": [[17, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[18, "pyprocar-core-electronicbandstructure"]], "bands_gradient": [[20, "bands-gradient"]], "bands_gradient_mesh": [[21, "bands-gradient-mesh"]], "bands_hessian": [[22, "bands-hessian"]], "bands_hessian_mesh": [[23, "bands-hessian-mesh"]], "bands_mesh": [[24, "bands-mesh"]], "calculate_scalar_gradient": [[25, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[26, "calculate-scalar-integral"]], "create_nd_mesh": [[27, "create-nd-mesh"]], "create_scaler_mesh": [[28, "create-scaler-mesh"]], "create_vector_mesh": [[29, "create-vector-mesh"]], "ebs_sum": [[30, "ebs-sum"]], "fermi_speed": [[31, "fermi-speed"]], "fermi_speed_mesh": [[32, "fermi-speed-mesh"]], "fermi_velocity": [[33, "fermi-velocity"]], "fermi_velocity_mesh": [[34, "fermi-velocity-mesh"]], "harmonic_average_effective_mass": [[35, "harmonic-average-effective-mass"]], "harmonic_average_effective_mass_mesh": [[36, "harmonic-average-effective-mass-mesh"]], "ibz2fbz": [[37, "ibz2fbz"]], "index_mesh": [[38, "index-mesh"]], "interpolate_mesh_grid": [[39, "interpolate-mesh-grid"]], "kpoints_cartesian": [[41, "kpoints-cartesian"], [183, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[42, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[43, "kpoints-mesh"]], "kpoints_reduced": [[44, "kpoints-reduced"], [184, "kpoints-reduced"]], "mesh_to_array": [[45, "mesh-to-array"]], "n_kx": [[46, "n-kx"]], "n_ky": [[47, "n-ky"]], "n_kz": [[48, "n-kz"]], "natoms": [[49, "natoms"], [111, "natoms"]], "nbands": [[50, "nbands"]], "nkpoints": [[51, "nkpoints"]], "norbitals": [[52, "norbitals"]], "nprincipals": [[53, "nprincipals"]], "nspins": [[54, "nspins"]], "plot_kpoints": [[55, "plot-kpoints"]], "projected_mesh": [[56, "projected-mesh"]], "projected_phase_mesh": [[57, "projected-phase-mesh"]], "ravel_array": [[58, "ravel-array"]], "unfold": [[59, "unfold"]], "weights_mesh": [[60, "weights-mesh"]], "pyprocar.core.FermiSurface": [[61, "pyprocar-core-fermisurface"]], "find_energy": [[65, "find-energy"]], "plot": [[66, "plot"]], "spin_texture": [[67, "spin-texture"]], "update_config": [[68, "update-config"], [251, "update-config"], [270, "update-config"]], "pyprocar.core.FermiSurface3D": [[69, "pyprocar-core-fermisurface3d"]], "extend_surface": [[71, "extend-surface"]], "project_atomic_projections": [[72, "project-atomic-projections"]], "project_fermi_speed": [[73, "project-fermi-speed"]], "project_fermi_velocity": [[74, "project-fermi-velocity"]], "project_harmonic_effective_mass": [[75, "project-harmonic-effective-mass"]], "project_spin_texture_atomic_projections": [[76, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[77, "pyprocar-core-isosurface"]], "dxyz": [[79, "dxyz"]], "nX": [[80, "nx"]], "nY": [[81, "ny"]], "nZ": [[82, "nz"]], "surface_boundaries": [[83, "surface-boundaries"]], "pyprocar.core.KPath": [[84, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[86, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[87, "get-optimized-kpoints-transformed"]], "kdistances": [[88, "kdistances"]], "nsegments": [[89, "nsegments"]], "tick_names": [[90, "tick-names"]], "tick_positions": [[91, "tick-positions"]], "write_to_file": [[92, "write-to-file"]], "pyprocar.core.Structure": [[93, "pyprocar-core-structure"]], "a": [[95, "a"]], "alpha": [[96, "alpha"]], "atomic_numbers": [[97, "atomic-numbers"]], "b": [[98, "b"]], "beta": [[99, "beta"]], "c": [[100, "c"]], "cell_convex_hull": [[101, "cell-convex-hull"]], "density": [[102, "density"]], "gamma": [[103, "gamma"]], "get_space_group_international": [[104, "get-space-group-international"]], "get_space_group_number": [[105, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[106, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[107, "get-wyckoff-positions"]], "is_point_inside": [[108, "is-point-inside"]], "lattice_corners": [[109, "lattice-corners"]], "masses": [[110, "masses"]], "nspecies": [[112, "nspecies"]], "plot_cell_convex_hull": [[113, "plot-cell-convex-hull"]], "reciprocal_lattice": [[114, "reciprocal-lattice"], [177, "reciprocal-lattice"]], "species": [[115, "species"], [157, "species"], [166, "species"], [220, "species"]], "supercell": [[116, "supercell"], [302, "supercell"]], "transform": [[117, "transform"]], "volume": [[118, "volume"]], "pyprocar.core.Surface": [[119, "pyprocar-core-surface"]], "centers": [[121, "centers"]], "export": [[122, "export"]], "faces_array": [[123, "faces-array"]], "set_color_with_cmap": [[124, "set-color-with-cmap"]], "set_scalars": [[125, "set-scalars"]], "set_vectors": [[126, "set-vectors"]], "BrillouinZone": [[127, "brillouinzone"]], "DensityOfStates": [[128, "densityofstates"]], "ElectronicBandStructure": [[129, "electronicbandstructure"], [394, "electronicbandstructure"]], "FermiSurface": [[130, "fermisurface"]], "FermiSurface3D": [[131, "fermisurface3d"]], "Core API": [[132, "core-api"]], "Isosurface": [[133, "isosurface"]], "KPath": [[134, "kpath"]], "Structure": [[135, "structure"], [401, "structure"]], "Surface": [[136, "surface"]], "API Reference": [[137, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[138, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[140, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[142, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[144, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[146, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[147, "pyprocar-io-lobster-lobsterparser"]], "dos": [[149, "dos"], [195, "dos"]], "dos_parametric": [[150, "dos-parametric"]], "dos_projected": [[151, "dos-projected"], [196, "dos-projected"]], "dos_to_dict": [[152, "dos-to-dict"], [197, "dos-to-dict"]], "dos_total": [[153, "dos-total"], [198, "dos-total"]], "final_structure": [[154, "final-structure"], [162, "final-structure"], [202, "final-structure"]], "initial_structure": [[155, "initial-structure"], [164, "initial-structure"], [211, "initial-structure"]], "parse_structure": [[156, "parse-structure"]], "structure": [[158, "structure"], [167, "structure"], [221, "structure"]], "structures": [[159, "structures"], [168, "structures"], [222, "structures"]], "pyprocar.io.qe.QEParser": [[160, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[163, "getkpointlabels"]], "kpoints_cart": [[165, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[169, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[171, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[173, "pyprocar-io-vasp-outcar"]], "efermi": [[175, "efermi"]], "get_symmetry_operations": [[176, "get-symmetry-operations"]], "rotations": [[178, "rotations"]], "pyprocar.io.vasp.Poscar": [[179, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[181, "pyprocar-io-vasp-procar"]], "repair": [[185, "repair"], [326, "repair"]], "symmetrize": [[186, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[187, "pyprocar-io-vasp-vaspxml"]], "bands": [[189, "bands"]], "bands_projected": [[190, "bands-projected"]], "conv": [[191, "conv"]], "convergence": [[192, "convergence"]], "convergence_electronic": [[193, "convergence-electronic"]], "convergence_ionic": [[194, "convergence-ionic"]], "energies": [[199, "energies"]], "energy": [[200, "energy"]], "fermi": [[201, "fermi"]], "forces": [[203, "forces"]], "get_general": [[204, "get-general"]], "get_params": [[205, "get-params"]], "get_scstep": [[206, "get-scstep"]], "get_set": [[207, "get-set"]], "get_structure": [[208, "get-structure"]], "get_varray": [[209, "get-varray"]], "incar": [[210, "incar"]], "is_finished": [[212, "is-finished"]], "iteration_data": [[213, "iteration-data"]], "kpoints": [[214, "kpoints"]], "kpoints_list": [[215, "kpoints-list"]], "last_energy": [[216, "last-energy"]], "parse_vasprun": [[217, "parse-vasprun"]], "potcar_info": [[218, "potcar-info"]], "read": [[219, "read"]], "text_to_bool": [[223, "text-to-bool"]], "vasp_parameters": [[224, "vasp-parameters"]], "AbinitParser": [[225, "abinitparser"]], "BxsfParser": [[226, "bxsfparser"]], "IO API": [[227, "io-api"]], "LobsterParser": [[228, "lobsterparser"]], "QEParser": [[229, "qeparser"]], "SiestaParser": [[230, "siestaparser"]], "VaspParser": [[231, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[232, "pyprocar-plotter-dosplot"]], "draw_fermi": [[234, "draw-fermi"], [254, "draw-fermi"]], "plot_dos": [[237, "plot-dos"]], "plot_parametric": [[238, "plot-parametric"]], "plot_parametric_line": [[239, "plot-parametric-line"]], "plot_stack": [[240, "plot-stack"]], "plot_stack_orbitals": [[241, "plot-stack-orbitals"]], "plot_stack_species": [[242, "plot-stack-species"]], "save": [[243, "save"], [261, "save"]], "set_xlabel": [[244, "set-xlabel"], [263, "set-xlabel"]], "set_xlim": [[245, "set-xlim"], [264, "set-xlim"]], "set_xticks": [[246, "set-xticks"], [265, "set-xticks"]], "set_ylabel": [[247, "set-ylabel"], [266, "set-ylabel"]], "set_ylim": [[248, "set-ylim"], [267, "set-ylim"]], "set_yticks": [[249, "set-yticks"], [268, "set-yticks"]], "show": [[250, "show"], [269, "show"]], "pyprocar.plotter.EBSPlot": [[252, "pyprocar-plotter-ebsplot"]], "plot_bands": [[257, "plot-bands"]], "plot_parameteric": [[258, "plot-parameteric"]], "plot_parameteric_overlay": [[259, "plot-parameteric-overlay"]], "plot_scatter": [[260, "plot-scatter"]], "set_title": [[262, "set-title"]], "pyprocar.plotter.ProcarPlot": [[271, "pyprocar-plotter-procarplot"]], "atomicPlot": [[273, "atomicplot"]], "parametricPlot": [[274, "parametricplot"]], "plotBands": [[275, "plotbands"]], "scatterPlot": [[276, "scatterplot"]], "EBSPlot": [[277, "ebsplot"]], "DosPlot": [[278, "dosplot"]], "Plotter API": [[279, "plotter-api"]], "ProcarPlot": [[280, "procarplot"]], "pyprocar.pyposcar.Poscar": [[281, "pyprocar-pyposcar-poscar"]], "add": [[283, "add"], [292, "add"]], "parse": [[284, "parse"]], "remove": [[285, "remove"], [296, "remove"]], "sort": [[286, "sort"]], "write": [[287, "write"], [299, "write"], [303, "write"]], "xyz": [[288, "xyz"]], "poscarDiff": [[289, "poscardiff"]], "pyprocar.pyposcar.poscar_modify": [[290, "pyprocar-pyposcar-poscar-modify"]], "change_elements": [[293, "change-elements"]], "pos_multiply": [[294, "pos-multiply"]], "pos_sum": [[295, "pos-sum"]], "scale_lattice": [[297, "scale-lattice"]], "shift": [[298, "shift"]], "pyprocar.pyposcar.poscar_supercell": [[300, "pyprocar-pyposcar-poscar-supercell"]], "PyPoscar API": [[304, "pyposcar-api"]], "Poscar": [[305, "poscar"]], "poscarUtils": [[306, "poscarutils"]], "pyprocar.scripts.FermiHandler": [[307, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[309, "create-isovalue-gif"]], "default_settings": [[310, "default-settings"]], "plot_fermi_cross_section": [[311, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[312, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[313, "plot-fermi-isoslider"]], "plot_fermi_surface": [[314, "plot-fermi-surface"]], "process_data": [[315, "process-data"]], "bandgap": [[316, "bandgap"], [327, "bandgap"]], "bandsdosplot": [[317, "bandsdosplot"], [328, "bandsdosplot"]], "bandsplot": [[318, "bandsplot"], [329, "bandsplot"]], "bandsplot_2d": [[319, "bandsplot-2d"], [330, "bandsplot-2d"]], "cat": [[320, "cat"], [331, "cat"]], "dosplot": [[321, "dosplot"], [332, "dosplot"]], "fermi2D": [[322, "fermi2d"], [333, "fermi2d"]], "fermi3D": [[323, "fermi3d"], [334, "fermi3d"]], "generate2dkmesh": [[324, "generate2dkmesh"], [336, "generate2dkmesh"]], "kpath": [[325, "kpath"], [338, "kpath"]], "FermiHandler": [[335, "fermihandler"]], "Scripts API": [[337, "scripts-api"]], "reapir": [[339, "reapir"]], "Abinit Perperation": [[340, "abinit-perperation"]], "Elk Perperation": [[341, "elk-perperation"]], "DFT Prep": [[342, "dft-prep"]], "Lobster Perperation": [[343, "lobster-perperation"]], "Quantum Espresso Preparation": [[344, "quantum-espresso-preparation"]], "Preparing Calculations": [[344, "preparing-calculations"], [346, "preparing-calculations"]], "Band Structure": [[344, "band-structure"], [346, "band-structure"], [347, "band-structure"], [383, "band-structure"]], "Density of States": [[344, "density-of-states"], [346, "density-of-states"], [354, "density-of-states"], [383, "density-of-states"], [393, "density-of-states"]], "Band Structure and Density of States": [[344, "band-structure-and-density-of-states"], [346, "band-structure-and-density-of-states"]], "Fermi": [[344, "fermi"], [346, "fermi"]], "K-Points Format": [[344, "k-points-format"], [346, "k-points-format"]], "Magnetic Calculations": [[344, "magnetic-calculations"], [346, "magnetic-calculations"]], "Siesta Perperation": [[345, "siesta-perperation"]], "VASP Preparation": [[346, "vasp-preparation"]], "Plotting band structure": [[348, "plotting-band-structure"]], "Plain mode": [[348, "plain-mode"], [350, "plain-mode"], [351, "plain-mode"], [352, "plain-mode"], [355, "plain-mode"], [358, "plain-mode"], [361, "plain-mode"], [364, "plain-mode"], [371, "plain-mode"], [372, "plain-mode"], [373, "plain-mode"], [374, "plain-mode"]], "Parametric mode": [[348, "parametric-mode"], [350, "parametric-mode"], [351, "parametric-mode"], [352, "parametric-mode"], [355, "parametric-mode"], [356, "parametric-mode"], [357, "parametric-mode"], [358, "parametric-mode"], [373, "parametric-mode"], [374, "parametric-mode"]], "parametric_linemode": [[348, "parametric-linemode"]], "Scatter mode": [[348, "scatter-mode"], [352, "scatter-mode"]], "overlay_species mode": [[348, "overlay-species-mode"]], "overlay_orbtials mode": [[348, "overlay-orbtials-mode"]], "overlay mode": [[348, "overlay-mode"], [355, "overlay-mode"]], "overlay mode by orbital names": [[348, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[349, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[350, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[351, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[352, "plotting-spin-polarized-band-structures"]], "Computation times": [[353, "computation-times"], [359, "computation-times"], [362, "computation-times"], [367, "computation-times"], [376, "computation-times"], [382, "computation-times"]], "Plotting density of states": [[355, "plotting-density-of-states"]], "parametric_line mode": [[355, "parametric-line-mode"], [358, "parametric-line-mode"]], "stack_species mode": [[355, "stack-species-mode"], [358, "stack-species-mode"]], "stack_orbtials mode": [[355, "stack-orbtials-mode"], [358, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[356, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[357, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[358, "plotting-spin-polarized-density-of-states"]], "stack mode": [[358, "stack-mode"]], "Bands and Dos plot": [[360, "bands-and-dos-plot"], [383, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[361, "plotting-bandsdosplot"]], "Fermi 2D": [[363, "fermi-2d"], [383, "fermi-2d"]], "Plotting fermi2d": [[364, "plotting-fermi2d"]], "plain_bands mode": [[364, "plain-bands-mode"]], "parametric mode": [[364, "parametric-mode"]], "Selecting band indices": [[364, "selecting-band-indices"], [365, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[365, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[365, "spin-texture-projection"]], "Spin Texture single color": [[365, "spin-texture-single-color"]], "Plotting rashba spin splitting": [[366, "plotting-rashba-spin-splitting"]], "energy = 0.60 sx projection no arrows": [[366, "energy-0-60-sx-projection-no-arrows"]], "energy = 0.60 sy projection no arrows": [[366, "energy-0-60-sy-projection-no-arrows"]], "energy = 0.60 sz projection no arrows": [[366, "energy-0-60-sz-projection-no-arrows"]], "energy = -0.90 sx projection no arrows": [[366, "energy-0-90-sx-projection-no-arrows"]], "energy = -0.90 sy projection no arrows": [[366, "energy-0-90-sy-projection-no-arrows"]], "energy = -0.90 sz projection no arrows": [[366, "energy-0-90-sz-projection-no-arrows"]], "energy = 0.60 sx projection with arrows": [[366, "energy-0-60-sx-projection-with-arrows"]], "energy = -0.90 sx projection with arrows": [[366, "energy-0-90-sx-projection-with-arrows"]], "Fermi 3D": [[368, "fermi-3d"], [383, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[369, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[369, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[369, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[369, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[370, "plotting-fermi3d-cross-section"]], "Cross section": [[370, "cross-section"]], "Cross section. Save slice": [[370, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[371, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[372, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[373, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[374, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[375, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[375, "spin-texture-mode"]], "Other": [[377, "other"], [383, "other"]], "Example of kmesh_generator": [[378, "example-of-kmesh-generator"]], "Plotting Kmesh": [[378, "plotting-kmesh"]], "Example of finding the bandgap": [[379, "example-of-finding-the-bandgap"], [380, "example-of-finding-the-bandgap"]], "Other properties": [[380, "other-properties"]], "Bands": [[380, "bands"]], "Projections": [[380, "projections"]], "Gradients": [[380, "gradients"]], "Band/Fermi velocities": [[380, "band-fermi-velocities"]], "Effective mass": [[380, "effective-mass"]], "Example of kpath_generator": [[381, "example-of-kpath-generator"]], "Plotting K Path": [[381, "plotting-k-path"]], "Examples": [[383, "examples"]], "Authors & Citation": [[384, "authors-citation"]], "Citing PyProcar": [[384, "citing-pyprocar"], [385, "citing-pyprocar"]], "Authors": [[384, "authors"]], "Contributors": [[384, "contributors"]], "Developers": [[384, "developers"]], "License": [[384, "license"]], "Getting started": [[385, "getting-started"]], "Installation": [[385, "installation"], [386, "installation"]], "Paper": [[385, "paper"]], "Support": [[385, "support"]], "Installing with pip": [[386, "installing-with-pip"]], "Installing with conda": [[386, "installing-with-conda"]], "Cloning through GitHub": [[386, "cloning-through-github"]], "After Installation": [[386, "after-installation"]], "Why PyProcar?": [[387, "why-pyprocar"]], "PyProcar": [[388, "pyprocar"]], "Indices and tables": [[388, "indices-and-tables"]], "Atomic Projections": [[389, "atomic-projections"]], "1. Spin projection": [[389, "spin-projection"]], "2. Atom projection": [[389, "atom-projection"]], "3. Orbital projection": [[389, "orbital-projection"]], "Band structure": [[390, "band-structure"]], "1. Plain band structure": [[390, "plain-band-structure"]], "2. Spin projection": [[390, "spin-projection"]], "3. Atom projection": [[390, "atom-projection"]], "4. Orbital projection": [[390, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[390, "export-plot-as-a-matplotlib-pyplot-object"], [395, "export-plot-as-a-matplotlib-pyplot-object"], [402, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[390, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[390, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[391, "concatenating-multiple-calculations"]], "Compare bands": [[392, "compare-bands"]], "1. mode='plain'": [[393, "mode-plain"]], "2. mode='parametric'": [[393, "mode-parametric"]], "3. mode='parametric_line'": [[393, "mode-parametric-line"]], "4. mode='stack'": [[393, "mode-stack"]], "5. mode='stack_species'": [[393, "mode-stack-species"]], "6. mode='stack_orbitals'": [[393, "mode-stack-orbitals"]], "Accessing Electronic Band Structure": [[394, "accessing-electronic-band-structure"]], "2D spin-texture": [[395, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[395, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[396, "d-fermi-surface"]], "3D surfaces": [[396, "d-surfaces"]], "Keyboard shortcuts": [[396, "keyboard-shortcuts"]], "Filtering data": [[397, "filtering-data"]], "To filter selected orbitals": [[397, "to-filter-selected-orbitals"]], "To filter selected k-points": [[397, "to-filter-selected-k-points"]], "To filter selected spins": [[397, "to-filter-selected-spins"]], "To filter selected atoms": [[397, "to-filter-selected-atoms"]], "User Guide": [[398, "user-guide"]], "Further Details": [[398, "further-details"]], "K Path": [[399, "k-path"]], "Accessing Kpath Information": [[399, "accessing-kpath-information"]], "Repair": [[400, "repair"]], "Accessing Structure Information": [[401, "accessing-structure-information"]], "Band unfolding": [[402, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[6, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[7, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[8, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[9, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[10, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[11, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[12, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[13, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[14, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[15, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[16, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[17, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[18, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient (pyprocar.core.electronicbandstructure property)": [[20, "pyprocar.core.ElectronicBandStructure.bands_gradient"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[21, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian (pyprocar.core.electronicbandstructure property)": [[22, "pyprocar.core.ElectronicBandStructure.bands_hessian"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[23, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[25, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[26, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[27, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[28, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[29, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[30, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "fermi_speed (pyprocar.core.electronicbandstructure property)": [[31, "pyprocar.core.ElectronicBandStructure.fermi_speed"]], "fermi_speed_mesh (pyprocar.core.electronicbandstructure property)": [[32, "pyprocar.core.ElectronicBandStructure.fermi_speed_mesh"]], "fermi_velocity (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.fermi_velocity"]], "fermi_velocity_mesh (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh"]], "harmonic_average_effective_mass (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass"]], "harmonic_average_effective_mass_mesh (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[37, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "interpolate_mesh_grid() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[41, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[42, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[43, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[44, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "mesh_to_array() (pyprocar.core.electronicbandstructure method)": [[45, "pyprocar.core.ElectronicBandStructure.mesh_to_array"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[46, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[47, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[48, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[49, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[50, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[51, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[52, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[54, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[55, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[56, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[57, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "ravel_array() (pyprocar.core.electronicbandstructure method)": [[58, "pyprocar.core.ElectronicBandStructure.ravel_array"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[59, "pyprocar.core.ElectronicBandStructure.unfold"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[60, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[61, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[62, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[63, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[64, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[65, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[66, "pyprocar.core.FermiSurface.plot"]], "spin_texture() (pyprocar.core.fermisurface method)": [[67, "pyprocar.core.FermiSurface.spin_texture"]], "update_config() (pyprocar.core.fermisurface method)": [[68, "pyprocar.core.FermiSurface.update_config"]], "fermisurface3d (class in pyprocar.core)": [[69, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[70, "pyprocar.core.FermiSurface3D.__init__"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[71, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[72, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_fermi_speed() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.project_fermi_speed"]], "project_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[74, "pyprocar.core.FermiSurface3D.project_fermi_velocity"]], "project_harmonic_effective_mass() (pyprocar.core.fermisurface3d method)": [[75, "pyprocar.core.FermiSurface3D.project_harmonic_effective_mass"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[76, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[77, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[78, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[79, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[80, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[81, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[82, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[83, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[84, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[85, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[86, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[87, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[88, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[89, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[90, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[91, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[92, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[93, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[94, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[95, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[96, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[97, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[101, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[102, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[103, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[104, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[105, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[106, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[107, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[108, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[109, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[110, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[111, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[113, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[114, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[116, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[117, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[118, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[119, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[120, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[121, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[122, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[123, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[124, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[125, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[126, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[138, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[139, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[140, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[141, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[142, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[143, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[144, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[145, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[146, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[147, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[148, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[149, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[150, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[151, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[153, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[156, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[157, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[158, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[159, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[160, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[161, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[162, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[163, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[164, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[165, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[166, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[167, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[168, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[169, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[170, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[171, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[172, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[173, "pyprocar.io.vasp.Outcar"]], "file_str (pyprocar.io.vasp.outcar attribute)": [[173, "pyprocar.io.vasp.Outcar.file_str"]], "filename (pyprocar.io.vasp.outcar attribute)": [[173, "pyprocar.io.vasp.Outcar.filename"]], "variables (pyprocar.io.vasp.outcar attribute)": [[173, "pyprocar.io.vasp.Outcar.variables"]], "__init__() (pyprocar.io.vasp.outcar method)": [[174, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[175, "pyprocar.io.vasp.Outcar.efermi"]], "get_symmetry_operations() (pyprocar.io.vasp.outcar method)": [[176, "pyprocar.io.vasp.Outcar.get_symmetry_operations"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[177, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[178, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[179, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[180, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[181, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[182, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[183, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[184, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[185, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[186, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[187, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[188, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[189, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[191, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[200, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[201, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[202, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[203, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[204, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[205, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[206, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[207, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[208, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[209, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[210, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[211, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[212, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[213, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[214, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[215, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[217, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[219, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[220, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[221, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[222, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[223, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[224, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[232, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[233, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[234, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[235, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[247, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[248, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[249, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[250, "pyprocar.plotter.DOSPlot.show"]], "update_config() (pyprocar.plotter.dosplot method)": [[251, "pyprocar.plotter.DOSPlot.update_config"]], "ebsplot (class in pyprocar.plotter)": [[252, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[253, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[254, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[255, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.legend"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[265, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[266, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[267, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[268, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[269, "pyprocar.plotter.EBSPlot.show"]], "update_config() (pyprocar.plotter.ebsplot method)": [[270, "pyprocar.plotter.EBSPlot.update_config"]], "procarplot (class in pyprocar.plotter)": [[271, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[272, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[273, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[274, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[275, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[276, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "poscar (class in pyprocar.pyposcar)": [[281, "pyprocar.pyposcar.Poscar"]], "__init__() (pyprocar.pyposcar.poscar method)": [[282, "pyprocar.pyposcar.Poscar.__init__"]], "add() (pyprocar.pyposcar.poscar method)": [[283, "pyprocar.pyposcar.Poscar.add"]], "parse() (pyprocar.pyposcar.poscar method)": [[284, "pyprocar.pyposcar.Poscar.parse"]], "remove() (pyprocar.pyposcar.poscar method)": [[285, "pyprocar.pyposcar.Poscar.remove"]], "sort() (pyprocar.pyposcar.poscar method)": [[286, "pyprocar.pyposcar.Poscar.sort"]], "write() (pyprocar.pyposcar.poscar method)": [[287, "pyprocar.pyposcar.Poscar.write"]], "xyz() (pyprocar.pyposcar.poscar method)": [[288, "pyprocar.pyposcar.Poscar.xyz"]], "poscardiff() (in module pyprocar.pyposcar)": [[289, "pyprocar.pyposcar.poscarDiff"]], "poscar_modify (class in pyprocar.pyposcar)": [[290, "pyprocar.pyposcar.poscar_modify"]], "__init__() (pyprocar.pyposcar.poscar_modify method)": [[291, "pyprocar.pyposcar.poscar_modify.__init__"]], "add() (pyprocar.pyposcar.poscar_modify method)": [[292, "pyprocar.pyposcar.poscar_modify.add"]], "change_elements() (pyprocar.pyposcar.poscar_modify method)": [[293, "pyprocar.pyposcar.poscar_modify.change_elements"]], "pos_multiply() (pyprocar.pyposcar.poscar_modify method)": [[294, "pyprocar.pyposcar.poscar_modify.pos_multiply"]], "pos_sum() (pyprocar.pyposcar.poscar_modify method)": [[295, "pyprocar.pyposcar.poscar_modify.pos_sum"]], "remove() (pyprocar.pyposcar.poscar_modify method)": [[296, "pyprocar.pyposcar.poscar_modify.remove"]], "scale_lattice() (pyprocar.pyposcar.poscar_modify method)": [[297, "pyprocar.pyposcar.poscar_modify.scale_lattice"]], "shift() (pyprocar.pyposcar.poscar_modify method)": [[298, "pyprocar.pyposcar.poscar_modify.shift"]], "write() (pyprocar.pyposcar.poscar_modify method)": [[299, "pyprocar.pyposcar.poscar_modify.write"]], "poscar_supercell (class in pyprocar.pyposcar)": [[300, "pyprocar.pyposcar.poscar_supercell"]], "__init__() (pyprocar.pyposcar.poscar_supercell method)": [[301, "pyprocar.pyposcar.poscar_supercell.__init__"]], "supercell() (pyprocar.pyposcar.poscar_supercell method)": [[302, "pyprocar.pyposcar.poscar_supercell.supercell"]], "write() (pyprocar.pyposcar.poscar_supercell method)": [[303, "pyprocar.pyposcar.poscar_supercell.write"]], "fermihandler (class in pyprocar.scripts)": [[307, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[308, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[309, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "default_settings() (pyprocar.scripts.fermihandler method)": [[310, "pyprocar.scripts.FermiHandler.default_settings"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[311, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[312, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[313, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[314, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "process_data() (pyprocar.scripts.fermihandler method)": [[315, "pyprocar.scripts.FermiHandler.process_data"]], "bandgap() (in module pyprocar.scripts)": [[316, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[317, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[318, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[319, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[320, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[321, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[322, "pyprocar.scripts.fermi2D"]], "fermi3d() (in module pyprocar.scripts)": [[323, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[324, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[325, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[326, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[390, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[390, "module-pyprocar.scripts.scriptBandsplot"], [391, "module-pyprocar.scripts.scriptCat"], [393, "module-pyprocar.scriptDosplot"], [395, "module-pyprocar.scripts.scriptFermi2D"], [396, "module-pyprocar.scripts.scriptFermi3D"], [397, "module-pyprocar.scripts.scriptFilter"], [400, "module-pyprocar.scripts.scriptRepair"], [402, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[390, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[391, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[391, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[393, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[395, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[395, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[396, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[396, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[397, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[397, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[400, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[400, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[402, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[402, "pyprocar.scripts.scriptUnfold.unfold"]]}})